{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _objectSpread from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Button,Col,Container,Card,CardBody,Table,Alert}from'reactstrap';import Axios from'../../../helpers/axiosConfig';import{Redirect}from'react-router-dom';var ListPatientAnamnesis=function ListPatientAnamnesis(_ref){var _location$state5,_location$state6,_location$state7,_location$state8;var location=_ref.location;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),datos=_useState2[0],setDatos=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),editModal=_useState4[0],setEditModal=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),deletModal=_useState6[0],setDeletModal=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),showDelete=_useState8[0],setShowDelete=_useState8[1];var editToggle=function editToggle(){return setEditModal(!editModal);};//const deleteToggle = () => setDeletModal(!deletModal);\nvar deleteToggleDelete=function deleteToggleDelete(run){setShowDelete(_objectSpread(_objectSpread({},showDelete),{},{[run]:false}));};var deleteToggleModal=function deleteToggleModal(run){setDeletModal(_objectSpread(_objectSpread({},deletModal),{},{[run]:!deletModal[run]}));};var Person=function Person(id,idRun,name,lastname,run,urgency,pain,cavities,wounds,bleeding,fracture,other,answer_id,covid19_risk_id,phone,cellphone,email,occupation,prevision_id,marital_status_id,native_origin_id,educational_level_id){_classCallCheck(this,Person);this.id=id;this.idRun=idRun;this.name=name;this.lastname=lastname;this.run=run;this.urgency=urgency;this.pain=pain;this.cavities=cavities;this.wounds=wounds;this.bleeding=bleeding;this.fracture=fracture;this.other=other;this.answer_id=answer_id;this.covid19_risk_id=covid19_risk_id;this.phone=phone;this.cellphone=cellphone;this.email=email;this.occupation=occupation;this.prevision_id=prevision_id;this.marital_status_id=marital_status_id;this.native_origin_id=native_origin_id;this.educational_level_id=educational_level_id;};var personas=[];var listPatient=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(\"person/listpatient\").then(function(response){response.data.result.forEach(function(element){setShowDelete({[element.run]:false});setDeletModal({[element.run]:false});personas.push(new Person(element.person_id,element.run_id,element.names,element.lastnames,element.run,element.urgency,element.pain,element.cavities,element.wounds,element.bleeding,element.fracture,element.other,element.informed_consent_answer_id,element.covid19_risk_id,element.phone,element.cellphone,element.email,element.occupation,element.prevision_id,element.marital_status_id,element.native_origin_id,element.educational_level_id));});});case 2:res=_context.sent;setDatos(personas);case 4:case\"end\":return _context.stop();}}},_callee);}));return function listPatient(){return _ref2.apply(this,arguments);};}();var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),odontoFichaAnamnesis=_useState10[0],setOdontoFichaAnamnesis=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),nuevaOdontoAnamnesis=_useState12[0],setNuevaOdontoAnamnesis=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),medicoFichaAnamnesis=_useState14[0],setMedicoFichaAnamnesis=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),nuevaMedicoAnamnesis=_useState16[0],setNuevaMedicoAnamnesis=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),generalFichaAnamnesis=_useState18[0],setGeneralFichaAnamnesis=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),nuevaGeneralAnamnesis=_useState20[0],setNuevaGeneralAnamnesis=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),name=_useState22[0],setName=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),run=_useState24[0],setRun=_useState24[1];var _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),lastname=_useState26[0],setLastName=_useState26[1];var _useState27=useState(0),_useState28=_slicedToArray(_useState27,2),id=_useState28[0],setId=_useState28[1];var datosPersona=function datosPersona(id,name,lastname,run){setName(name);setRun(run);setLastName(lastname);setId(id);};var consultaAnamnesisOdonto=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,name,lastname,run){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Axios.get(\"geriatrical-odonto-anamnesis/crud/\"+id);case 2:res=_context2.sent;if(res.data.result.length===1){datosPersona(id,name,lastname,run);setOdontoFichaAnamnesis(true);}else{datosPersona(id,name,lastname,run);setNuevaOdontoAnamnesis(true);}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function consultaAnamnesisOdonto(_x,_x2,_x3,_x4){return _ref3.apply(this,arguments);};}();var consultaAnamnesisMedico=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id,name,lastname,run){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return Axios.get(\"geriatrical-medical-anamnesis/crud/\"+id);case 2:res=_context3.sent;if(res.data.result.length===1){datosPersona(id,name,lastname,run);setMedicoFichaAnamnesis(true);}else{datosPersona(id,name,lastname,run);setNuevaMedicoAnamnesis(true);}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function consultaAnamnesisMedico(_x5,_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();var consultaAnamnesisGeneral=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id,name,lastname,run){var res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return Axios.get(\"general-anamnesis/\"+id);case 2:res=_context4.sent;if(res.data.result.length===1){datosPersona(id,name,lastname,run);setGeneralFichaAnamnesis(true);}else{datosPersona(id,name,lastname,run);setNuevaGeneralAnamnesis(true);}case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function consultaAnamnesisGeneral(_x9,_x10,_x11,_x12){return _ref5.apply(this,arguments);};}();var _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),modalReception=_useState30[0],setModalReception=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),modalGeneral=_useState32[0],setModalGeneral=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),modalMedica=_useState34[0],setModalMedica=_useState34[1];var _useState35=useState(false),_useState36=_slicedToArray(_useState35,2),modalOdonto=_useState36[0],setModalOdonto=_useState36[1];var modal=function modal(){var _location$state,_location$state2,_location$state3,_location$state4;if(location===null||location===void 0?void 0:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.reception){setModalReception(!modalReception);}if(location===null||location===void 0?void 0:(_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.anamnesisGeneral){setModalGeneral(!modalGeneral);}if(location===null||location===void 0?void 0:(_location$state3=location.state)===null||_location$state3===void 0?void 0:_location$state3.medicalAnamnesis){setModalMedica(!modalMedica);}if(location===null||location===void 0?void 0:(_location$state4=location.state)===null||_location$state4===void 0?void 0:_location$state4.dentalAnamnesis){setModalOdonto(!modalOdonto);}};useEffect(function(){listPatient();modal();},[]);return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,(location===null||location===void 0?void 0:(_location$state5=location.state)===null||_location$state5===void 0?void 0:_location$state5.reception)&&/*#__PURE__*/React.createElement(Alert,{color:\"success\",isOpen:modalReception,toggle:function toggle(){setModalReception(false);}},\"Recepci\\xF3n realizada exitosamente\"),(location===null||location===void 0?void 0:(_location$state6=location.state)===null||_location$state6===void 0?void 0:_location$state6.anamnesisGeneral)&&/*#__PURE__*/React.createElement(Alert,{color:\"success\",isOpen:modalGeneral,toggle:function toggle(){setModalGeneral(false);}},\"Anamnesis General creada exitosamente\"),(location===null||location===void 0?void 0:(_location$state7=location.state)===null||_location$state7===void 0?void 0:_location$state7.medicalAnamnesis)&&/*#__PURE__*/React.createElement(Alert,{color:\"success\",isOpen:modalMedica,toggle:function toggle(){setModalMedica(false);}},\"Anamnesis M\\xE9dico-geri\\xE1trica creada exitosamente\"),(location===null||location===void 0?void 0:(_location$state8=location.state)===null||_location$state8===void 0?void 0:_location$state8.dentalAnamnesis)&&/*#__PURE__*/React.createElement(Alert,{color:\"success\",isOpen:modalOdonto,toggle:function toggle(){setModalOdonto(false);}},\"Anamnesis Odonto-geri\\xE1trica creada exitosamente\"),/*#__PURE__*/React.createElement(\"h1\",null,\"Listado de pacientes\"),/*#__PURE__*/React.createElement(Table,{className:\"align-items-center\",responsive:true},/*#__PURE__*/React.createElement(\"thead\",{className:\"thead-light\"},/*#__PURE__*/React.createElement(\"tr\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"N\\xB0\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Nombre\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Apellido\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Run\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Nueva Anamnesis\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"}),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"}))),/*#__PURE__*/React.createElement(\"tbody\",null,datos.map(function(person,i){return/*#__PURE__*/React.createElement(\"tr\",{className:\"text-center\",key:person.id},/*#__PURE__*/React.createElement(\"td\",null,i+1),/*#__PURE__*/React.createElement(\"td\",null,person.name),/*#__PURE__*/React.createElement(\"td\",null,person.lastname),/*#__PURE__*/React.createElement(\"td\",null,person.run),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return consultaAnamnesisGeneral(person.id,person.name,person.lastname,person.run);},color:\"primary\"},\"General\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return consultaAnamnesisMedico(person.id,person.name,person.lastname,person.run);},color:\"primary\"},\"Medico Geriatra\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return consultaAnamnesisOdonto(person.id,person.name,person.lastname,person.run);},color:\"primary\"},\"Odonto Geriatra\")));}))),nuevaGeneralAnamnesis&&/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/admin/anamnesis-general\",state:{id:id,run:run,name:name}}}),generalFichaAnamnesis&&/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/admin/general-anamnesis-u\",state:{id:id,run:run,name:name}}}),nuevaMedicoAnamnesis&&/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/admin/physical-parameters\",state:{id:id,run:run,name:name}}}),medicoFichaAnamnesis&&/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/admin/medical-anamnesis-u\",state:{id:id,run:run,name:name}}}),nuevaOdontoAnamnesis&&/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/admin/background\",state:{id:id,run:run,name:name}}}),odontoFichaAnamnesis&&/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/admin/dental-anamnesis-u\",state:{id:id,run:run,name:name}}}))));};export default ListPatientAnamnesis;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/views/pages/patient/list-patient-anamnesis.js"],"names":["React","useState","useEffect","Button","Col","Container","Card","CardBody","Table","Alert","Axios","Redirect","ListPatientAnamnesis","location","datos","setDatos","editModal","setEditModal","deletModal","setDeletModal","showDelete","setShowDelete","editToggle","deleteToggleDelete","run","deleteToggleModal","Person","id","idRun","name","lastname","urgency","pain","cavities","wounds","bleeding","fracture","other","answer_id","covid19_risk_id","phone","cellphone","email","occupation","prevision_id","marital_status_id","native_origin_id","educational_level_id","personas","listPatient","get","then","response","data","result","forEach","element","push","person_id","run_id","names","lastnames","informed_consent_answer_id","res","odontoFichaAnamnesis","setOdontoFichaAnamnesis","nuevaOdontoAnamnesis","setNuevaOdontoAnamnesis","medicoFichaAnamnesis","setMedicoFichaAnamnesis","nuevaMedicoAnamnesis","setNuevaMedicoAnamnesis","generalFichaAnamnesis","setGeneralFichaAnamnesis","nuevaGeneralAnamnesis","setNuevaGeneralAnamnesis","setName","setRun","setLastName","setId","datosPersona","consultaAnamnesisOdonto","length","consultaAnamnesisMedico","consultaAnamnesisGeneral","modalReception","setModalReception","modalGeneral","setModalGeneral","modalMedica","setModalMedica","modalOdonto","setModalOdonto","modal","state","reception","anamnesisGeneral","medicalAnamnesis","dentalAnamnesis","map","person","i","pathname"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {\r\n    Button, Col, Container, Card, CardBody,\r\n    Table,\r\n    Alert\r\n\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst ListPatientAnamnesis = ({location}) => {\r\n\r\n    const [datos, setDatos] = useState([])\r\n    const [editModal, setEditModal] = useState();\r\n    const [deletModal, setDeletModal] = useState();\r\n    const [showDelete, setShowDelete] = useState()\r\n\r\n\r\n\r\n    const editToggle = () => setEditModal(!editModal);\r\n    //const deleteToggle = () => setDeletModal(!deletModal);\r\n    const deleteToggleDelete = (run) => {\r\n        setShowDelete({\r\n            ...showDelete,\r\n            [run]: false\r\n        })\r\n    }\r\n    const deleteToggleModal = (run) => {\r\n        setDeletModal({\r\n            ...deletModal,\r\n            [run]: !deletModal[run]\r\n        })\r\n    }\r\n\r\n\r\n    class Person {\r\n        constructor(id, idRun, name, lastname, run, urgency, pain, cavities, wounds, bleeding, fracture, other, answer_id, covid19_risk_id,\r\n                    phone, cellphone, email, occupation, prevision_id, marital_status_id, native_origin_id, educational_level_id) {\r\n\r\n            this.id = id\r\n            this.idRun = idRun\r\n            this.name = name;\r\n            this.lastname = lastname;\r\n            this.run = run;\r\n            this.urgency = urgency;\r\n            this.pain = pain;\r\n            this.cavities = cavities;\r\n            this.wounds = wounds;\r\n            this.bleeding = bleeding;\r\n            this.fracture = fracture;\r\n            this.other = other;\r\n            this.answer_id = answer_id;\r\n            this.covid19_risk_id = covid19_risk_id;\r\n            this.phone = phone;\r\n            this.cellphone = cellphone;\r\n            this.email = email;\r\n            this.occupation = occupation;\r\n            this.prevision_id = prevision_id;\r\n            this.marital_status_id = marital_status_id;\r\n            this.native_origin_id = native_origin_id;\r\n            this.educational_level_id = educational_level_id;\r\n        }\r\n    }\r\n\r\n    var personas = []\r\n\r\n    const listPatient = async () => {\r\n\r\n        const res = await Axios.get(\"person/listpatient\")\r\n            .then(response => {\r\n                response.data.result.forEach(element => {\r\n                    setShowDelete({[element.run]: false})\r\n                    setDeletModal({[element.run]: false})\r\n                    personas.push(new Person(element.person_id, element.run_id, element.names, element.lastnames, element.run, element.urgency,\r\n                        element.pain, element.cavities, element.wounds, element.bleeding, element.fracture, element.other, element.informed_consent_answer_id,\r\n                        element.covid19_risk_id, element.phone, element.cellphone, element.email,\r\n                        element.occupation, element.prevision_id, element.marital_status_id, element.native_origin_id, element.educational_level_id));\r\n\r\n                });\r\n            })\r\n\r\n        setDatos(personas)\r\n    }\r\n\r\n\r\n    const [odontoFichaAnamnesis, setOdontoFichaAnamnesis] = useState(false)\r\n    const [nuevaOdontoAnamnesis, setNuevaOdontoAnamnesis] = useState(false)\r\n    const [medicoFichaAnamnesis, setMedicoFichaAnamnesis] = useState(false)\r\n    const [nuevaMedicoAnamnesis, setNuevaMedicoAnamnesis] = useState(false)\r\n    const [generalFichaAnamnesis, setGeneralFichaAnamnesis] = useState(false)\r\n    const [nuevaGeneralAnamnesis, setNuevaGeneralAnamnesis] = useState(false)\r\n    const [name, setName] = useState(\"\")\r\n    const [run, setRun] = useState(\"\")\r\n    const [lastname, setLastName] = useState(\"\")\r\n    const [id, setId] = useState(0)\r\n\r\n    const datosPersona = (id, name, lastname, run) => {\r\n        setName(name)\r\n        setRun(run)\r\n        setLastName(lastname)\r\n        setId(id)\r\n    }\r\n\r\n    const consultaAnamnesisOdonto = async (id, name, lastname, run) => {\r\n\r\n        const res = await Axios.get(\"geriatrical-odonto-anamnesis/crud/\" + id\r\n        )\r\n\r\n        if (res.data.result.length === 1) {\r\n            datosPersona(id, name, lastname, run)\r\n            setOdontoFichaAnamnesis(true)\r\n        } else {\r\n            datosPersona(id, name, lastname, run)\r\n            setNuevaOdontoAnamnesis(true)\r\n        }\r\n\r\n    }\r\n    const consultaAnamnesisMedico = async (id, name, lastname, run) => {\r\n\r\n        const res = await Axios.get(\"geriatrical-medical-anamnesis/crud/\" + id\r\n        )\r\n\r\n        if (res.data.result.length === 1) {\r\n            datosPersona(id, name, lastname, run)\r\n            setMedicoFichaAnamnesis(true)\r\n        } else {\r\n            datosPersona(id, name, lastname, run)\r\n            setNuevaMedicoAnamnesis(true)\r\n        }\r\n\r\n    }\r\n    const consultaAnamnesisGeneral = async (id, name, lastname, run) => {\r\n\r\n        const res = await Axios.get(\"general-anamnesis/\" + id\r\n        )\r\n\r\n        if (res.data.result.length === 1) {\r\n            datosPersona(id, name, lastname, run)\r\n            setGeneralFichaAnamnesis(true)\r\n        } else {\r\n            datosPersona(id, name, lastname, run)\r\n            setNuevaGeneralAnamnesis(true)\r\n        }\r\n\r\n    }\r\n\r\n    const [modalReception, setModalReception]=useState(false)\r\n    const [modalGeneral, setModalGeneral]=useState(false)\r\n    const [modalMedica, setModalMedica]=useState(false)\r\n    const [modalOdonto, setModalOdonto]=useState(false)\r\n\r\n    const modal=()=>{\r\n        if(location?.state?.reception){\r\n            setModalReception(!modalReception)\r\n        }\r\n        if(location?.state?.anamnesisGeneral){\r\n            setModalGeneral(!modalGeneral)\r\n        }\r\n        if(location?.state?.medicalAnamnesis){\r\n            setModalMedica(!modalMedica)\r\n        }\r\n        if(location?.state?.dentalAnamnesis){\r\n            setModalOdonto(!modalOdonto)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        listPatient();\r\n        modal();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <Card>\r\n                <CardBody>\r\n                    {location?.state?.reception && <Alert color=\"success\" isOpen={modalReception} toggle={() => {setModalReception(false)}}>\r\n                        Recepción realizada exitosamente\r\n                    </Alert>}\r\n                    {location?.state?.anamnesisGeneral && <Alert color=\"success\" isOpen={modalGeneral} toggle={() => {setModalGeneral(false)}}>\r\n                        Anamnesis General creada exitosamente\r\n                    </Alert>}\r\n                    {location?.state?.medicalAnamnesis && <Alert color=\"success\" isOpen={modalMedica} toggle={() => {setModalMedica(false)}}>\r\n                    Anamnesis Médico-geriátrica creada exitosamente\r\n                    </Alert>}\r\n                    {location?.state?.dentalAnamnesis && <Alert color=\"success\" isOpen={modalOdonto} toggle={() => {setModalOdonto(false)}}>\r\n                    Anamnesis Odonto-geriátrica creada exitosamente\r\n                    </Alert>}\r\n                    <h1>\r\n                        Listado de pacientes\r\n                    </h1>\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                        <tr className=\"text-center\">\r\n                            <th scope=\"col\">N°</th>\r\n                            <th scope=\"col\">Nombre</th>\r\n                            <th scope=\"col\">Apellido</th>\r\n                            <th scope=\"col\">Run</th>\r\n                            <th scope=\"col\">Nueva Anamnesis</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            datos.map(\r\n                                (person, i) =>\r\n\r\n                                    <tr className=\"text-center\" key={person.id}>\r\n                                        <td>\r\n                                            {i + 1}\r\n                                        </td>\r\n                                        <td>\r\n                                            {person.name}\r\n                                        </td>\r\n                                        <td>\r\n                                            {person.lastname}\r\n                                        </td>\r\n                                        <td>\r\n                                            {person.run}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <Button\r\n                                                onClick={() => consultaAnamnesisGeneral(person.id, person.name, person.lastname, person.run)}\r\n                                                color=\"primary\">\r\n                                                General\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button\r\n                                                onClick={() => consultaAnamnesisMedico(person.id, person.name, person.lastname, person.run)}\r\n                                                color=\"primary\">\r\n                                                Medico Geriatra\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button\r\n                                                onClick={() => consultaAnamnesisOdonto(person.id, person.name, person.lastname, person.run)}\r\n                                                color=\"primary\">\r\n                                                Odonto Geriatra\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                    {nuevaGeneralAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/anamnesis-general\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {generalFichaAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/general-anamnesis-u\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {nuevaMedicoAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/physical-parameters\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {medicoFichaAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/medical-anamnesis-u\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {nuevaOdontoAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/background\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {odontoFichaAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/dental-anamnesis-u\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ListPatientAnamnesis\r\n"]},"metadata":{},"sourceType":"module"}