{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\src\\\\components\\\\Fantoma\\\\FormsExams\\\\AddExtraOralForm.jsx\";\n\nimport React, { useState } from 'react';\nimport { Button, FormGroup, Form, Input, Modal, Label, Col, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nvar AddMarkerForm = function AddMarkerForm(props) {\n  var initialFormState = {\n    id: null,\n    idAnamnesis: null,\n    inspection: '',\n    palpation: '',\n    position_x: 0,\n    position_y: 0,\n    position_z: 0\n  };\n\n  var _useState = useState(initialFormState),\n      _useState2 = _slicedToArray(_useState, 2),\n      marker = _useState2[0],\n      setMarker = _useState2[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setMarker(_objectSpread(_objectSpread({}, marker), {}, {\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal-dialog-centered\",\n    isOpen: props.adding,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      props.addMarker(marker);\n      setMarker(initialFormState);\n    },\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, \"Inspecci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"example-text-input1\",\n    type: \"text\",\n    name: \"inspection\",\n    defaultValue: marker.inspection //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, \"Palpaci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"example-text-input1\",\n    type: \"text\",\n    name: \"palpation\",\n    defaultValue: marker.palpation //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, \"Guardar\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return props.setAdding(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \"Cancelar\"))))));\n};\n\nexport default AddMarkerForm;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/components/Fantoma/FormsExams/AddExtraOralForm.jsx"],"names":["React","useState","Button","FormGroup","Form","Input","Modal","Label","Col","ModalHeader","ModalBody","ModalFooter","AddMarkerForm","props","initialFormState","id","idAnamnesis","inspection","palpation","position_x","position_y","position_z","marker","setMarker","handleInputChange","event","target","name","value","adding","preventDefault","addMarker","setAdding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"reactstrap\";\r\n\r\n\r\n const AddMarkerForm = (props) => {\r\n     \r\n    const initialFormState = { \r\n        id: null, \r\n        idAnamnesis: null,\r\n        inspection:'',\r\n        palpation: '',\r\n        position_x: 0,\r\n        position_y: 0,\r\n        position_z: 0        \r\n    }\r\n    const [marker, setMarker] = useState(initialFormState)\r\n  \r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n    }\r\n    \r\n\r\n    return(\r\n        <>\r\n             <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.adding}>\r\n                <ModalHeader>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.addMarker(marker)\r\n\t\t\t\t        setMarker(initialFormState)\r\n                    }} \r\n                    role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" >Inspección</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"text\"\r\n                                    name=\"inspection\"\r\n                                    defaultValue={marker.inspection}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Palpación</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"text\"\r\n                                    name=\"palpation\"\r\n                                    defaultValue={marker.palpation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setAdding(false)}>Cancelar\r\n                             </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n    \r\n}\r\nexport default AddMarkerForm"]},"metadata":{},"sourceType":"module"}