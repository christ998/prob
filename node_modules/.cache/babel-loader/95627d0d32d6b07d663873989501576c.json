{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\src\\\\views\\\\pages\\\\patient\\\\informed-consent.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label } from 'reactstrap';\nimport Axios from '../../../helpers/axiosConfig';\nimport { Redirect } from 'react-router-dom';\nimport { getList } from 'helpers/ListHelper';\n\nvar InformedConsent = function InformedConsent(_ref) {\n  var location = _ref.location;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      consentRead = _useState2[0],\n      setConsentRead = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      next = _useState4[0],\n      setNext = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      observations = _useState6[0],\n      setObservations = _useState6[1];\n\n  var _useState7 = useState(1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      acceptedConcentId = _useState8[0],\n      setAcceptedConcentId = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      acceptedConcents = _useState10[0],\n      setAcceptedConcents = _useState10[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(set, route) {\n      var e;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getList(route);\n\n            case 2:\n              e = _context.sent;\n              set(e);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getData(setAcceptedConcents, \"list/consent\");\n  }, []);\n\n  var addInformedConsent = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              _context2.next = 3;\n              return Axios.post(\"person/informed-consent\", {\n                personId: location.state.id,\n                informed_consent_answer_id: acceptedConcentId,\n                observations: observations,\n                consentRead: consentRead\n              });\n\n            case 3:\n              res = _context2.sent;\n              if (!res.data.error) setNext(true);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function addInformedConsent(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, location.state.run, \", \", location.state.name, \" \", location.state.apellido), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Consentimiento Informado\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: addInformedConsent,\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, \"********aca estara un extracto de este consentimiento*****\")), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"exampleFormControlSelect3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"\\xBFLeyo el consentimiento?\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-toggle custom-toggle-success mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: consentRead,\n    onChange: function onChange(e) {\n      return setConsentRead(!consentRead);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"custom-toggle-slider rounded-circle\",\n    \"data-label-off\": \"No\",\n    \"data-label-on\": \"S\\xED\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"exampleFormControlSelect3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \"\\xBFAcepta el consentimiento?\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"exampleFormControlSelect3\",\n    type: \"select\",\n    onChange: function onChange(e) {\n      setAcceptedConcentId(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, acceptedConcents.map(function (consent) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: consent.informed_consent_answer_id,\n      value: consent.informed_consent_answer_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    }, consent.answer);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"exampleFormControlSelect3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, \"Observaciones\"), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: \"\",\n    id: \"example-text-input\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      setObservations(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 31\n    }\n  }, \"Registrar\")))), next && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/admin/sociodemographic-data\",\n      state: {\n        id: location.state.id,\n        run: location.state.run,\n        name: location.state.name,\n        apellido: location.state.apellido\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 31\n    }\n  }))));\n};\n\nexport default InformedConsent;","map":{"version":3,"sources":["C:/Users/Christian/WebstormProjects/teleodontoweb/src/views/pages/patient/informed-consent.js"],"names":["React","useState","useEffect","Button","Col","Container","Form","FormGroup","Input","Card","CardBody","Label","Axios","Redirect","getList","InformedConsent","location","consentRead","setConsentRead","next","setNext","observations","setObservations","acceptedConcentId","setAcceptedConcentId","acceptedConcents","setAcceptedConcents","getData","set","route","e","addInformedConsent","preventDefault","post","personId","state","id","informed_consent_answer_id","res","data","error","run","name","apellido","target","value","map","consent","answer","pathname"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getList } from 'helpers/ListHelper';\r\nconst InformedConsent = ({location}) => {\r\n    const [consentRead, setConsentRead] = useState(true)   \r\n    const [next, setNext]=useState(false)\r\n    const [observations, setObservations]=useState(\"\")\r\n\r\n    \r\n    const [acceptedConcentId, setAcceptedConcentId] = useState(1)\r\n    const [acceptedConcents, setAcceptedConcents] = useState([]);\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n    useEffect(() => { \r\n        getData(setAcceptedConcents, \"list/consent\")\r\n    }, [])\r\n\r\n\r\n    const addInformedConsent = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"person/informed-consent\",\r\n          { \r\n            personId : location.state.id,\r\n            informed_consent_answer_id: acceptedConcentId,\r\n            observations: observations,\r\n            consentRead:consentRead\r\n          }\r\n        )\r\n        if (!res.data.error)\r\n         setNext(true) \r\n        \r\n        \r\n      }\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                        Consentimiento Informado\r\n                    </h6>\r\n                    <Form onSubmit={addInformedConsent} role=\"form\">\r\n                    <FormGroup className=\"row\">\r\n                            \r\n                            <Col md=\"10\">\r\n                                ********aca estara un extracto de este consentimiento*****\r\n                            </Col>                 \r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                \r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    ¿Leyo el consentimiento?\r\n                                </Label>\r\n                                <div><label className=\"custom-toggle custom-toggle-success mr-1\">\r\n                                    <input type=\"checkbox\" checked={consentRead} onChange={(e) => setConsentRead(!consentRead)} />\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label></div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    ¿Acepta el consentimiento?\r\n                                </Label>\r\n                                <Input id=\"exampleFormControlSelect3\" type=\"select\" onChange={(e) => { setAcceptedConcentId(e.target.value) }}>\r\n                                    {acceptedConcents.map(consent=> (\r\n                                        <option key={consent.informed_consent_answer_id} value={consent.informed_consent_answer_id}>{consent.answer}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Observaciones\r\n                                </Label>\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    onChange={(e) => { setObservations(e.target.value) }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                       \r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                            \r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                            \r\n                              <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n                            \r\n                              \r\n                            </Col>\r\n                        </FormGroup>\r\n                        \r\n                    </Form>\r\n                    { next && <Redirect to={{\r\n                    pathname: \"/admin/sociodemographic-data\",\r\n                    state: { id: location.state.id, run: location.state.run, name: location.state.name, apellido : location.state.apellido} \r\n                    }} /> }\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InformedConsent\r\n"]},"metadata":{},"sourceType":"module"}