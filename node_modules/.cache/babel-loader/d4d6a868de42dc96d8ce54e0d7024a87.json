{"ast":null,"code":"import React,{useRef,useState}from'react';import{useGLTF}from'@react-three/drei/useGLTF';import*as THREE from'three';export default function Model(props){var group=useRef();var _useGLTF=useGLTF('/mesh/fantoma.gltf'),nodes=_useGLTF.nodes,materials=_useGLTF.materials;console.log(props.teeth);var TeethMeshes=function TeethMeshes(e){if(typeof props.teeth!=='undefined'){return Object.keys(props.teeth).map(function(item,i){return function(){switch(Object.values(props.teeth)[i].teeth_state_id){case 1:return console.log('Ausente');break;case 2:return/*#__PURE__*/React.createElement(\"mesh\",{key:Object.values(props.teeth)[i].fdi_name,material:materials.esmalte,geometry:nodes[Object.values(props.teeth)[i].fdi_name].geometry,position:nodes[Object.values(props.teeth)[i].fdi_name].position,rotation:nodes[Object.values(props.teeth)[i].fdi_name].rotation,scale:nodes[Object.values(props.teeth)[i].fdi_name].scale});break;case 3:return/*#__PURE__*/React.createElement(\"mesh\",{key:Object.values(props.teeth)[i].fdi_name+'DF',material:materials.esmalte,geometry:nodes[Object.values(props.teeth)[i].fdi_name+'DF'].geometry,position:nodes[Object.values(props.teeth)[i].fdi_name+'DF'].position,rotation:nodes[Object.values(props.teeth)[i].fdi_name+'DF'].rotation,scale:nodes[Object.values(props.teeth)[i].fdi_name+'DF'].scale});break;case 4:return/*#__PURE__*/React.createElement(\"mesh\",{key:Object.values(props.teeth)[i].fdi_name+'RR',material:materials.esmalte,geometry:nodes[Object.values(props.teeth)[i].fdi_name+'RR'].geometry,position:nodes[Object.values(props.teeth)[i].fdi_name+'RR'].position,rotation:nodes[Object.values(props.teeth)[i].fdi_name+'RR'].rotation,scale:nodes[Object.values(props.teeth)[i].fdi_name+'RR'].scale});break;case 5:return console.log('Implante');break;default:return console.log('Default');}}();});}e.stopPropagation();};return/*#__PURE__*/React.createElement(\"group\",Object.assign({ref:group},props),/*#__PURE__*/React.createElement(\"mesh\",{material:materials.encia,geometry:nodes.reb_alv_inf_papilas.geometry,position:[-0.000799172383267432,-0.009652681648731232,0.03410725295543671],rotation:[1.8928228644193699,0,0],scale:[0.2582273781299591,0.2582273781299591,0.2582273781299591],\"material-opacity\":props.opacity,\"material-transparent\":true,\"material-side\":THREE.FrontSide}),/*#__PURE__*/React.createElement(\"mesh\",{material:materials.encia,geometry:nodes.reb_alv_sup_papilas.geometry,position:[0.000345383945386857,0.025681160390377045,0.050578609108924866],rotation:[1.7410711657057512,0,0],scale:[0.27773573994636536,0.35650089383125305,0.2803818881511688]}),/*#__PURE__*/React.createElement(TeethMeshes,null));}useGLTF.preload('/mesh/fantoma.gltf');","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/components/Fantoma/FantomaOdontogram.jsx"],"names":["React","useRef","useState","useGLTF","THREE","Model","props","group","nodes","materials","console","log","teeth","TeethMeshes","e","Object","keys","map","item","i","values","teeth_state_id","fdi_name","esmalte","geometry","position","rotation","scale","stopPropagation","encia","reb_alv_inf_papilas","opacity","FrontSide","reb_alv_sup_papilas","preload"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { useGLTF } from '@react-three/drei/useGLTF'\r\nimport * as THREE from 'three'\r\n\r\nexport default function Model(props) {\r\n\r\n    const group = useRef()\r\n\r\n    const { nodes, materials } = useGLTF('/mesh/fantoma.gltf')\r\n    console.log(props.teeth)\r\n    \r\n    const TeethMeshes =(e) =>{\r\n        if (typeof props.teeth  !== 'undefined' ){\r\n            return(\r\n                Object.keys(props.teeth).map((item, i) => ( \r\n                        (() => {\r\n                            switch (Object.values(props.teeth)[i].teeth_state_id) {\r\n                \r\n                                case 1:\r\n                                    return (console.log('Ausente'))\r\n                                    break;\r\n                                case 2:\r\n                                    return (\r\n                                         <mesh\r\n                                            key={Object.values(props.teeth)[i].fdi_name}\r\n                                            material={materials.esmalte}\r\n                                            geometry={nodes[Object.values(props.teeth)[i].fdi_name].geometry}\r\n                                            position={nodes[Object.values(props.teeth)[i].fdi_name].position}\r\n                                            rotation={nodes[Object.values(props.teeth)[i].fdi_name].rotation}\r\n                                            scale={nodes[Object.values(props.teeth)[i].fdi_name].scale}\r\n                                        /> \r\n                                    )\r\n                                    break\r\n                                case 3:\r\n                                    return (\r\n                                        <mesh\r\n                                            key={Object.values(props.teeth)[i].fdi_name+'DF'}\r\n                                            material={materials.esmalte}\r\n                                            geometry={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].geometry}\r\n                                            position={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].position}\r\n                                            rotation={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].rotation}\r\n                                            scale={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].scale}\r\n                                        />\r\n                                    )\r\n                                    break\r\n                                case 4:\r\n                                    return (\r\n                                        <mesh\r\n                                            key={Object.values(props.teeth)[i].fdi_name+'RR'}\r\n                                            material={materials.esmalte}\r\n                                            geometry={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].geometry}\r\n                                            position={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].position}\r\n                                            rotation={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].rotation}\r\n                                            scale={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].scale}\r\n                                        />\r\n                                    )\r\n                                    break;\r\n                                case 5:\r\n                                    return (console.log('Implante'))\r\n                                    break;\r\n                                default:\r\n                                    return (console.log('Default'))\r\n                                \r\n                            }\r\n                        })()\r\n                    )\r\n                ) \r\n            )\r\n        }\r\n        e.stopPropagation()\r\n    }  \r\n\r\n    return (\r\n\r\n        <group ref={group} {...props}>        \r\n\r\n            <mesh\r\n                material={materials.encia}\r\n                geometry={nodes.reb_alv_inf_papilas.geometry}\r\n                position={[-0.000799172383267432, -0.009652681648731232, 0.03410725295543671]}\r\n                rotation={[1.8928228644193699, 0, 0]}\r\n                scale={[0.2582273781299591, 0.2582273781299591, 0.2582273781299591]}\r\n                material-opacity={props.opacity}\r\n                material-transparent={true}\r\n                material-side={THREE.FrontSide}\r\n            />\r\n            <mesh\r\n                material={materials.encia}\r\n                geometry={nodes.reb_alv_sup_papilas.geometry}\r\n                position={[0.000345383945386857, 0.025681160390377045, 0.050578609108924866]}\r\n                rotation={[1.7410711657057512, 0, 0]}\r\n                scale={[0.27773573994636536, 0.35650089383125305, 0.2803818881511688]}\r\n            />\r\n            {\r\n            <TeethMeshes/>\r\n            }\r\n        </group>\r\n    )\r\n\r\n}\r\n\r\nuseGLTF.preload('/mesh/fantoma.gltf')\r\n"]},"metadata":{},"sourceType":"module"}