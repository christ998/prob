{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Button,FormGroup,Form,Input,Modal,Label,Col,Row,ModalHeader,ModalBody,ModalFooter,InputGroup,InputGroupAddon}from\"reactstrap\";import{getList}from'helpers/ListHelper';var EditMarkerForm=function EditMarkerForm(props){var _useState=useState(props.currentMarker),_useState2=_slicedToArray(_useState,2),marker=_useState2[0],setMarker=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),colorData=_useState6[0],setColorData=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),surfaceData=_useState8[0],setSurfaceData=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),consistencyData=_useState10[0],setConsistencyData=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),evolutionFormData=_useState12[0],setEvolutionFormData=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),symptomatologyData=_useState14[0],setSymptomatologyData=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),edgeData=_useState16[0],setEdgeData=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),localizationData=_useState18[0],setLocalizationData=_useState18[1];var getData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(set,route){var e;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getList(route);case 2:e=_context.sent;set(e);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getData(_x,_x2){return _ref.apply(this,arguments);};}();useEffect(function(){getData(setFormData,\"list/forms\");getData(setColorData,\"list/colors\");getData(setSurfaceData,\"list/surfaces\");getData(setConsistencyData,\"list/consistencies\");getData(setEvolutionFormData,\"list/evolution-forms\");getData(setSymptomatologyData,\"list/symptomatologies\");getData(setEdgeData,\"list/edges\");getData(setLocalizationData,\"list/localizations\");setMarker(props.currentMarker);},[props]);var handleInputChange=function handleInputChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setMarker(_objectSpread(_objectSpread({},marker),{},{[name]:value}));};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{className:\"modal-dialog-centered\",isOpen:props.editing,size:\"lg\"},/*#__PURE__*/React.createElement(ModalHeader,null),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Form,{onSubmit:function onSubmit(event){event.preventDefault();props.updateMarker(marker.id,marker);},role:\"form\"},/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Forma\"),/*#__PURE__*/React.createElement(Input,{id:\"form\",type:\"select\",name:\"form\",value:marker.form,onChange:handleInputChange},formData.map(function(form){return/*#__PURE__*/React.createElement(\"option\",{key:form.name,value:form.form_id,onFocus:function onFocus(e){return console.log(e.target);},id:form.name,\"data-toggle\":\"tooltip\",title:form.description},form.name);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Color\"),/*#__PURE__*/React.createElement(Input,{id:\"color\",type:\"select\",name:\"color\",value:marker.color,onChange:handleInputChange},colorData.map(function(color){return/*#__PURE__*/React.createElement(\"option\",{key:color.value,value:color.color_id,id:color.value},color.value);})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Tama\\xF1o\")),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{type:\"number\",min:1,max:150,step:\"1\",name:\"length\",placeholder:\"largo\",defaultValue:marker.length,onChange:function onChange(e){handleInputChange(e);},required:true}),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"append\"},\"mm\"))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{type:\"number\",min:1,max:150,step:\"1\",name:\"width\",placeholder:\"ancho\",defaultValue:marker.width,onChange:function onChange(e){handleInputChange(e);},required:true}),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"append\"},\"mm\"))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{type:\"number\",min:0,max:150,step:\"1\",name:\"height\",placeholder:\"alto\",defaultValue:marker.height,onChange:function onChange(e){handleInputChange(e);}}),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"append\"},\"mm\")))))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Superficie\"),/*#__PURE__*/React.createElement(Input,{id:\"surface\",type:\"select\",name:\"surface\",value:marker.surface,onChange:handleInputChange},surfaceData.map(function(surface){return/*#__PURE__*/React.createElement(\"option\",{key:surface.value,value:surface.surface_id},surface.value);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Consistencia\"),/*#__PURE__*/React.createElement(Input,{id:\"consistency\",type:\"select\",name:\"consistency\",value:marker.consistency,onChange:handleInputChange},consistencyData.map(function(consistency){return/*#__PURE__*/React.createElement(\"option\",{key:consistency.name,value:consistency.consistency_id},consistency.name);})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Bordes\"),/*#__PURE__*/React.createElement(Input,{id:\"edge\",type:\"select\",name:\"edge\",value:marker.edge,onChange:handleInputChange},edgeData.map(function(edge){return/*#__PURE__*/React.createElement(\"option\",{key:edge.name,value:edge.edge_id},edge.name);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Sintomatolog\\xEDa\"),/*#__PURE__*/React.createElement(Input,{id:\"symptomatology\",type:\"select\",name:\"symptomatology\",value:marker.symptomatology,onChange:handleInputChange},symptomatologyData.map(function(symptomatology){return/*#__PURE__*/React.createElement(\"option\",{key:symptomatology.value,value:symptomatology.symptomatology_id},symptomatology.value);})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Forma evoluci\\xF3n\"),/*#__PURE__*/React.createElement(Input,{id:\"evolution_form\",type:\"select\",name:\"evolution_form\",value:marker.evolution_form,onChange:handleInputChange},evolutionFormData.map(function(evolutionForm){return/*#__PURE__*/React.createElement(\"option\",{key:evolutionForm.value,value:evolutionForm.evolution_form_id},evolutionForm.value);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Localizaci\\xF3n\"),/*#__PURE__*/React.createElement(Input,{id:\"localization\",type:\"select\",name:\"localization\",value:marker.localization//pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n//required\n,onChange:handleInputChange},localizationData.map(function(localization){return/*#__PURE__*/React.createElement(\"option\",{key:localization.value,value:localization.localization_id},localization.value);})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Tiempo evoluci\\xF3n\"),/*#__PURE__*/React.createElement(Input,{id:\"evolution_time\",type:\"text\",name:\"evolution_time\",maxLength:\"20\",defaultValue:marker.evolution_time//pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n//required\n,onChange:handleInputChange})),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Observaciones\"),/*#__PURE__*/React.createElement(Input,{id:\"example-text-input1\",type:\"textarea\",name:\"observation\",maxLength:\"200\",defaultValue:marker.observation//pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n//required\n,onChange:handleInputChange}))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\"},\"Guardar\"),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:function onClick(){return props.setEditing(false);}},\"Cancelar\"))))));};export default EditMarkerForm;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/components/Fantoma/FormsExams/EditMarkerForm.jsx"],"names":["React","useState","useEffect","Button","FormGroup","Form","Input","Modal","Label","Col","Row","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","getList","EditMarkerForm","props","currentMarker","marker","setMarker","formData","setFormData","colorData","setColorData","surfaceData","setSurfaceData","consistencyData","setConsistencyData","evolutionFormData","setEvolutionFormData","symptomatologyData","setSymptomatologyData","edgeData","setEdgeData","localizationData","setLocalizationData","getData","set","route","e","handleInputChange","event","target","name","value","editing","preventDefault","updateMarker","id","form","map","form_id","console","log","description","color","color_id","length","width","height","surface","surface_id","consistency","consistency_id","edge","edge_id","symptomatology","symptomatology_id","evolution_form","evolutionForm","evolution_form_id","localization","localization_id","evolution_time","observation","setEditing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    Row,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from \"reactstrap\";\r\nimport { getList } from 'helpers/ListHelper';\r\n\r\nconst EditMarkerForm = props => {\r\n    const [marker, setMarker] = useState(props.currentMarker)\r\n\r\n    const [formData, setFormData] = useState([]);\r\n    const [colorData, setColorData] = useState([]);\r\n    const [surfaceData, setSurfaceData] = useState([]);\r\n    const [consistencyData, setConsistencyData] = useState([]);\r\n    const [evolutionFormData, setEvolutionFormData] =useState([]);\r\n    const [symptomatologyData, setSymptomatologyData] = useState([]);\r\n    const [edgeData, setEdgeData] = useState([]);\r\n    const [localizationData, setLocalizationData] = useState([]);\r\n\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(setFormData, \"list/forms\")\r\n        getData(setColorData, \"list/colors\")\r\n        getData(setSurfaceData, \"list/surfaces\")\r\n        getData(setConsistencyData, \"list/consistencies\")\r\n        getData(setEvolutionFormData, \"list/evolution-forms\")\r\n        getData(setSymptomatologyData, \"list/symptomatologies\")\r\n        getData(setEdgeData, \"list/edges\")\r\n        getData(setLocalizationData, \"list/localizations\")\r\n        setMarker(props.currentMarker)\r\n    }, [props])\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.editing}\r\n                size=\"lg\">\r\n                <ModalHeader>\r\n                    {/* {marker.id +\" \"+ marker.idAnamnesis } */}\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.updateMarker(marker.id, marker)\r\n                    }} \r\n                    role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma</Label>\r\n                                <Input\r\n                                    id=\"form\"\r\n                                    type=\"select\"\r\n                                    name=\"form\"\r\n                                    value={marker.form}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {formData.map(form => (\r\n                                        <option \r\n                                            key={form.name} \r\n                                            value={form.form_id} \r\n                                            onFocus={(e)=>console.log(e.target) } \r\n                                            id={form.name}  \r\n                                            data-toggle=\"tooltip\" \r\n                                            title={form.description}\r\n                                            >\r\n                                                {form.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Color</Label>\r\n                                <Input\r\n                                    id=\"color\"\r\n                                    type=\"select\"\r\n                                    name=\"color\"\r\n                                    value={marker.color}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {colorData.map(color => (\r\n                                        <option key={color.value} value={color.color_id} id={color.value} >{color.value}</option>\r\n                                    ))}\r\n                                    \r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md='12'>\r\n                                <Label className=\"form-control-label\" >Tamaño</Label>\r\n                            </Col>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                min={1}\r\n                                                max={150}\r\n                                                step=\"1\"\r\n                                                name=\"length\"\r\n                                                placeholder=\"largo\"\r\n                                                defaultValue={marker.length}\r\n                                                onChange={(e) => { handleInputChange(e) }}\r\n                                                required\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                min={1}\r\n                                                max={150}\r\n                                                step=\"1\"\r\n                                                name=\"width\"\r\n                                                placeholder=\"ancho\"\r\n                                                defaultValue={marker.width}\r\n                                                onChange={(e) => { handleInputChange(e) }}\r\n                                                required\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                min={0}\r\n                                                max={150}\r\n                                                step=\"1\"\r\n                                                name=\"height\"\r\n                                                placeholder=\"alto\"\r\n                                                defaultValue={marker.height}\r\n                                                onChange={(e) => { handleInputChange(e) }}\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </FormGroup>                      \r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Superficie</Label>\r\n                                <Input\r\n                                    id=\"surface\"\r\n                                    type=\"select\"\r\n                                    name=\"surface\"\r\n                                    value={marker.surface}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {surfaceData.map(surface => (\r\n                                        <option key={surface.value} value={surface.surface_id}>{surface.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Consistencia</Label>\r\n                                <Input\r\n                                    id=\"consistency\"\r\n                                    type=\"select\"\r\n                                    name=\"consistency\"\r\n                                    value={marker.consistency}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {consistencyData.map(consistency => (\r\n                                        <option key={consistency.name} value={consistency.consistency_id}>{consistency.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Bordes</Label>\r\n                                <Input\r\n                                    id=\"edge\"\r\n                                    type=\"select\"\r\n                                    name=\"edge\"\r\n                                    value={marker.edge}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {edgeData.map(edge => (\r\n                                        <option key={edge.name} value={edge.edge_id}>{edge.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Sintomatología</Label>\r\n                                <Input\r\n                                    id=\"symptomatology\"\r\n                                    type=\"select\"\r\n                                    name=\"symptomatology\"\r\n                                    value={marker.symptomatology}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {symptomatologyData.map(symptomatology => (\r\n                                        <option key={symptomatology.value} value={symptomatology.symptomatology_id}>{symptomatology.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_form\"\r\n                                    type=\"select\"\r\n                                    name=\"evolution_form\"\r\n                                    value={marker.evolution_form}\r\n                                    onChange={handleInputChange}>\r\n                                     {evolutionFormData.map(evolutionForm => (\r\n                                        <option key={evolutionForm.value} value={evolutionForm.evolution_form_id}>{evolutionForm.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Localización</Label>\r\n                                <Input\r\n                                    id=\"localization\"\r\n                                    type=\"select\"\r\n                                    name=\"localization\"\r\n                                    value={marker.localization}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                {localizationData.map(localization => (\r\n                                        <option key={localization.value} value={localization.localization_id}>{localization.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Tiempo evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_time\"\r\n                                    type=\"text\"\r\n                                    name=\"evolution_time\"\r\n                                    maxLength=\"20\"\r\n                                    defaultValue={marker.evolution_time}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}>\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Observaciones</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"textarea\"\r\n                                    name=\"observation\"\r\n                                    maxLength=\"200\"\r\n                                    defaultValue={marker.observation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setEditing(false)}>Cancelar\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default EditMarkerForm"]},"metadata":{},"sourceType":"module"}