{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\src\\\\components\\\\Fantoma\\\\FormsExams\\\\EditExtraOralForm.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, FormGroup, Form, Input, Modal, Label, Col, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nvar EditExtraOralForm = function EditExtraOralForm(props) {\n  var _useState = useState(props.currentMarker),\n      _useState2 = _slicedToArray(_useState, 2),\n      marker = _useState2[0],\n      setMarker = _useState2[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setMarker(_objectSpread(_objectSpread({}, marker), {}, {\n      [name]: value\n    }));\n  };\n\n  useEffect(function () {\n    setMarker(props.currentMarker);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal-dialog-centered\",\n    isOpen: props.editing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      props.updateMarker(marker.id, marker);\n    },\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, \"Inspecci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"example-text-input1\",\n    type: \"text\",\n    name: \"inspection\",\n    defaultValue: marker.inspection //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, \"Palpaci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"example-text-input1\",\n    type: \"text\",\n    name: \"palpation\",\n    defaultValue: marker.palpation //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Guardar\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return props.setEditing(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"Cancelar\"))))));\n};\n\nexport default EditExtraOralForm;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/components/Fantoma/FormsExams/EditExtraOralForm.jsx"],"names":["React","useState","useEffect","Button","FormGroup","Form","Input","Modal","Label","Col","ModalHeader","ModalBody","ModalFooter","EditExtraOralForm","props","currentMarker","marker","setMarker","handleInputChange","event","target","name","value","editing","preventDefault","updateMarker","id","inspection","palpation","setEditing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"reactstrap\";\r\n\r\nconst EditExtraOralForm = props => {\r\n    const [marker, setMarker] = useState(props.currentMarker)\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n    }\r\n\r\n    useEffect(() => {\r\n                setMarker(props.currentMarker)\r\n    },[props])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.editing}>\r\n                <ModalHeader>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.updateMarker(marker.id, marker)\r\n                    }} \r\n                    role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" >Inspección</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"text\"\r\n                                    name=\"inspection\"\r\n                                    defaultValue={marker.inspection}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Palpación</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"text\"\r\n                                    name=\"palpation\"\r\n                                    defaultValue={marker.palpation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setEditing(false)}>Cancelar\r\n                             </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default EditExtraOralForm"]},"metadata":{},"sourceType":"module"}