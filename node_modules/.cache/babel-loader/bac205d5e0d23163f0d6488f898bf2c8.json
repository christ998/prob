{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\src\\\\views\\\\pages\\\\patient\\\\anamnesis-general.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label } from 'reactstrap';\nimport Axios from '../../../helpers/axiosConfig';\nimport { getList } from 'helpers/ListHelper';\nimport { Redirect } from 'react-router-dom';\n\nvar AnamnesisGeneral = function AnamnesisGeneral(_ref) {\n  var location = _ref.location;\n\n  var addAnamnesis = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return Axios.post(\"general-anamnesis/\", {\n                personId: location.state.id,\n                allergies: selData.alergias,\n                otherDisease: selData.otros_observaciones,\n                underTreatment: selData.bajo_tratamiento,\n                previousSurgeries: selData.cirugias,\n                medicineDose: selData.farmacos,\n                medicineAllergies: selData.alergias_farmacos,\n                radioChemoTherapy: selData.radioterapia,\n                selectedDiseases: selDiseases,\n                consult_motive: selData.motivo_consulta,\n                consult_motive_history: selData.motivo_consulta_historial,\n                medic_alert: selData.alerta_medica\n              });\n\n            case 3:\n              res = _context.sent;\n              if (!res.data.error) setNext(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addAnamnesis(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      prmDiseases = _useState2[0],\n      setPrmDiseases = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selDiseases = _useState4[0],\n      setSelDiseases = _useState4[1];\n\n  var _useState5 = useState({\n    bajo_tratamiento: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selData = _useState6[0],\n      setSelData = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      next = _useState8[0],\n      setNext = _useState8[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(set, route) {\n      var e;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getList(route);\n\n            case 2:\n              e = _context2.sent;\n              set(e);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getData(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getData(setPrmDiseases, \"list/diseases\");\n  }, []);\n\n  var handleInputChangeCheck = function handleInputChangeCheck(e) {\n    var ind = selDiseases.indexOf(e.target.id);\n\n    if (selDiseases.includes(e.target.id)) {\n      selDiseases.splice(ind, 1);\n      console.log(selDiseases);\n    } else {\n      setSelDiseases(selDiseases.concat(e.target.id));\n    }\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    console.log(e.target.text);\n    setSelData(_objectSpread(_objectSpread({}, selData), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  var handleInputChangeYN = function handleInputChangeYN(e) {\n    setSelData(_objectSpread(_objectSpread({}, selData), {}, {\n      [e.target.name]: !selData.bajo_tratamiento\n    }));\n  };\n\n  useEffect(function () {\n    console.log(selDiseases);\n    console.log(selData);\n  });\n  var reqTag = /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#DC3545\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 20\n    }\n  }, \"*\");\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, location.state.run, \", \", location.state.name, \" \", location.state.apellido), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Paciente\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: addAnamnesis,\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"example-text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Motivo Consulta\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"motivo_consulta\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    } // required\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"example-text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, \"Historial del motivo de Consulta\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"motivo_consulta_historial\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    } //required\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"example-text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Alerta m\\xE9dica especial y comentarios relevantes sobre el paciente\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"alerta_medica\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    } //required\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"exampleFormControlSelect3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, \"Antecedentes m\\xF3rbidos personales\"), prmDiseases.map(function (disease) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: disease.name,\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      className: \"custom-control-input\",\n      id: disease.disease_id,\n      type: \"checkbox\",\n      name: disease.name,\n      onChange: function onChange(e) {\n        handleInputChangeCheck(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: disease.disease_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }, disease.name));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Otros/Observaciones\",\n    defaultValue: \"\",\n    type: \"textarea\",\n    name: \"otros_observaciones\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"example-text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, \"Est\\xE1 bajo tratamiento\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-toggle custom-toggle-warning mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    name: \"bajo_tratamiento\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChangeYN(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"custom-toggle-slider rounded-circle\",\n    \"data-label-off\": \"No\",\n    \"data-label-on\": \"S\\xED\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"example-text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }, \"Alergias \"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\" //required\n    ,\n    name: \"alergias\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"example-text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }, \"Cirug\\xEDas previas/ Hospitalizaci\\xF3n/ \"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\" //required\n    ,\n    name: \"cirugias\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"example-text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }, \"F\\xE1rmacos y Posolog\\xEDa \"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\" //required\n    ,\n    name: \"farmacos\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"example-text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, \"Alergia a F\\xE1rmacos (especificar cu\\xE1l) \"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\" //required\n    ,\n    name: \"alergias_farmacos\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    htmlFor: \"example-text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, \"Radioterapia / Quimioterapia \"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\" //required\n    ,\n    name: \"radioterapia\" //Nose a que campo de la base de datos se refiere\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, \"Registrar\")))), next && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/admin/list-patient-anamnesis\",\n      state: {\n        id: location.state.id,\n        run: location.state.run,\n        name: location.state.name,\n        apellido: location.state.apellido,\n        anamnesisGeneral: true\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 30\n    }\n  }))));\n};\n\nexport default AnamnesisGeneral;","map":{"version":3,"sources":["C:/Users/Christian/WebstormProjects/teleodontoweb/src/views/pages/patient/anamnesis-general.js"],"names":["React","useState","useEffect","Button","Col","Container","Form","FormGroup","Input","Card","CardBody","Label","Axios","getList","Redirect","AnamnesisGeneral","location","addAnamnesis","e","preventDefault","post","personId","state","id","allergies","selData","alergias","otherDisease","otros_observaciones","underTreatment","bajo_tratamiento","previousSurgeries","cirugias","medicineDose","farmacos","medicineAllergies","alergias_farmacos","radioChemoTherapy","radioterapia","selectedDiseases","selDiseases","consult_motive","motivo_consulta","consult_motive_history","motivo_consulta_historial","medic_alert","alerta_medica","res","data","error","setNext","prmDiseases","setPrmDiseases","setSelDiseases","setSelData","next","getData","set","route","handleInputChangeCheck","ind","indexOf","target","includes","splice","console","log","concat","handleInputChange","text","name","value","handleInputChangeYN","reqTag","color","run","apellido","map","disease","disease_id","pathname","anamnesisGeneral"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label} from 'reactstrap'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {getList} from 'helpers/ListHelper';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst AnamnesisGeneral = ({location}) => {\r\n\r\n    const addAnamnesis = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"general-anamnesis/\",\r\n            {\r\n\r\n                personId: location.state.id,\r\n                allergies: selData.alergias,\r\n                otherDisease: selData.otros_observaciones,\r\n                underTreatment: selData.bajo_tratamiento,\r\n                previousSurgeries: selData.cirugias,\r\n                medicineDose: selData.farmacos,\r\n                medicineAllergies: selData.alergias_farmacos,\r\n                radioChemoTherapy: selData.radioterapia,\r\n                selectedDiseases: selDiseases,\r\n                consult_motive: selData.motivo_consulta,\r\n                consult_motive_history: selData.motivo_consulta_historial,\r\n                medic_alert: selData.alerta_medica\r\n            })\r\n        if (!res.data.error)\r\n            setNext(true)\r\n\r\n\r\n    };\r\n    const [prmDiseases, setPrmDiseases] = useState([]);\r\n    const [selDiseases, setSelDiseases] = useState([]);\r\n    const [selData, setSelData] = useState({bajo_tratamiento: false});\r\n    const [next, setNext] = useState(false)\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(setPrmDiseases, \"list/diseases\")\r\n    }, [])\r\n\r\n    const handleInputChangeCheck = e => {\r\n        var ind = selDiseases.indexOf(e.target.id)\r\n        if (selDiseases.includes(e.target.id)) {\r\n            selDiseases.splice(ind, 1)\r\n            console.log(selDiseases)\r\n        } else {\r\n            setSelDiseases(selDiseases.concat(e.target.id))\r\n        }\r\n    };\r\n\r\n    const handleInputChange = e => {\r\n        console.log(e.target.text)\r\n        setSelData({\r\n            ...selData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputChangeYN = e => {\r\n        setSelData({\r\n            ...selData,\r\n            [e.target.name]: !selData.bajo_tratamiento\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(selDiseases)\r\n        console.log(selData)\r\n    })\r\n\r\n    const reqTag = <span style={{color: \"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>Paciente</h1>\r\n                    <Form onSubmit={addAnamnesis} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Motivo\r\n                                    Consulta</Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    name=\"motivo_consulta\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                    // required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Historial del\r\n                                    motivo de Consulta</Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    name=\"motivo_consulta_historial\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                    //required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Alerta médica\r\n                                    especial y comentarios relevantes sobre el paciente</Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    name=\"alerta_medica\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                    //required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\">Antecedentes\r\n                                    mórbidos personales</Label>\r\n                                {prmDiseases.map(disease => (\r\n                                    <div key={disease.name}\r\n                                         className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                        <Input\r\n                                            className=\"custom-control-input\"\r\n                                            id={disease.disease_id}\r\n                                            type=\"checkbox\"\r\n                                            name={disease.name}\r\n                                            onChange={e => {\r\n                                                handleInputChangeCheck(e)\r\n                                            }}\r\n                                        />\r\n                                        <label className=\"custom-control-label\"\r\n                                               htmlFor={disease.disease_id}>{disease.name}</label>\r\n                                    </div>\r\n                                ))}\r\n                                <div>\r\n                                    <Input\r\n                                        placeholder=\"Otros/Observaciones\"\r\n                                        defaultValue=\"\"\r\n                                        type=\"textarea\"\r\n                                        name=\"otros_observaciones\" //Nose a que campo de la base de datos se refiere\r\n                                        onChange={e => {\r\n                                            handleInputChange(e)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Está bajo\r\n                                    tratamiento</Label>\r\n                                <div><label className=\"custom-toggle custom-toggle-warning mr-1\">\r\n                                    <Input\r\n                                        type=\"checkbox\"\r\n                                        name=\"bajo_tratamiento\" //Nose a que campo de la base de datos se refiere\r\n                                        onChange={e => {\r\n                                            handleInputChangeYN(e)\r\n                                        }}/>\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label></div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Alergias </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"alergias\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Cirugías previas/\r\n                                    Hospitalización/ </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"cirugias\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Fármacos y\r\n                                    Posología </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"farmacos\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Alergia a Fármacos\r\n                                    (especificar cuál) </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"alergias_farmacos\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Radioterapia /\r\n                                    Quimioterapia </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"radioterapia\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n\r\n                                <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    {next && <Redirect to={{\r\n                        pathname: \"/admin/list-patient-anamnesis\",\r\n                        state: {\r\n                            id: location.state.id,\r\n                            run: location.state.run,\r\n                            name: location.state.name,\r\n                            apellido: location.state.apellido,\r\n                            anamnesisGeneral:true\r\n                        }\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AnamnesisGeneral"]},"metadata":{},"sourceType":"module"}