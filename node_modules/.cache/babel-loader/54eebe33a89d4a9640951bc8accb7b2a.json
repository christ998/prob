{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{useThree}from'react-three-fiber';var MouseHelper=function MouseHelper(props){var _useThree=useThree(),intersect=_useThree.intersect;var helper=useRef();var onMouseMove=function onMouseMove(){if(intersect()[0]===undefined){return;}if(intersect().length>0&&intersect()[0].object.name!==\"marker\"){var p=helper.current.position.copy(intersect()[0].point);var n=intersect()[0].face.normal.clone();var mesh=intersect()[0].object;n.transformDirection(mesh.matrixWorld);n.multiplyScalar(10);n.add(intersect()[0].point);helper.current.lookAt(n);if(props.typeExam===\"soft-tissues-exam\"){props.handleOrientation(helper.current.rotation);}props.handlePosition(helper.current.position);//console.log(helper.current.rotation)\n}};useEffect(function(){window.addEventListener('mousemove',onMouseMove);return function(){window.removeEventListener('mousemove',onMouseMove);};},[]);return/*#__PURE__*/React.createElement(\"mesh\",{name:'mouseHelper',ref:helper,visible:false,position:[0,0,0],rotation:[0,0,0]},/*#__PURE__*/React.createElement(\"boxGeometry\",{attach:\"geometry\",args:[0.01,0.01,0.02]}),/*#__PURE__*/React.createElement(\"meshStandardMaterial\",{attach:\"material\",color:\"green\"}));};export default MouseHelper;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/components/Fantoma/MouseHelper.jsx"],"names":["React","useState","useRef","useEffect","useThree","MouseHelper","props","intersect","helper","onMouseMove","undefined","length","object","name","p","current","position","copy","point","n","face","normal","clone","mesh","transformDirection","matrixWorld","multiplyScalar","add","lookAt","typeExam","handleOrientation","rotation","handlePosition","window","addEventListener","removeEventListener"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,OAASC,QAAT,KAAyB,mBAAzB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,eAEPF,QAAQ,EAFD,CAEpBG,SAFoB,WAEpBA,SAFoB,CAI3B,GAAMC,CAAAA,MAAM,CAAGN,MAAM,EAArB,CAEA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAIF,SAAS,GAAG,CAAH,CAAT,GAAkBG,SAAtB,CAAiC,CAAC,OAAO,CACzC,GAAIH,SAAS,GAAGI,MAAZ,CAAqB,CAArB,EAA0BJ,SAAS,GAAG,CAAH,CAAT,CAAeK,MAAf,CAAsBC,IAAtB,GAA+B,QAA7D,CAAuE,CACnE,GAAMC,CAAAA,CAAC,CAAGN,MAAM,CAACO,OAAP,CAAeC,QAAf,CAAwBC,IAAxB,CAA6BV,SAAS,GAAG,CAAH,CAAT,CAAeW,KAA5C,CAAV,CACA,GAAMC,CAAAA,CAAC,CAAGZ,SAAS,GAAG,CAAH,CAAT,CAAea,IAAf,CAAoBC,MAApB,CAA2BC,KAA3B,EAAV,CACA,GAAMC,CAAAA,IAAI,CAAEhB,SAAS,GAAG,CAAH,CAAT,CAAeK,MAA3B,CACAO,CAAC,CAACK,kBAAF,CAAsBD,IAAI,CAACE,WAA3B,EAEAN,CAAC,CAACO,cAAF,CAAkB,EAAlB,EACAP,CAAC,CAACQ,GAAF,CAAOpB,SAAS,GAAG,CAAH,CAAT,CAAeW,KAAtB,EAGAV,MAAM,CAACO,OAAP,CAAea,MAAf,CAAuBT,CAAvB,EAGA,GAAGb,KAAK,CAACuB,QAAN,GAAmB,mBAAtB,CACC,CAACvB,KAAK,CAACwB,iBAAN,CAAwBtB,MAAM,CAACO,OAAP,CAAegB,QAAvC,EAAiD,CAGnDzB,KAAK,CAAC0B,cAAN,CAAqBxB,MAAM,CAACO,OAAP,CAAeC,QAApC,EAEA;AAEH,CACJ,CAxBD,CA0BAb,SAAS,CAAC,UAAM,CACZ8B,MAAM,CAACC,gBAAP,CAAwB,WAAxB,CAAqCzB,WAArC,EACA,MAAO,WAAM,CACbwB,MAAM,CAACE,mBAAP,CAA2B,WAA3B,CAAwC1B,WAAxC,EACC,CAFD,CAGH,CALQ,CAKN,EALM,CAAT,CAUA,mBACI,4BAAM,IAAI,CAAE,aAAZ,CAA2B,GAAG,CAAED,MAAhC,CAAwC,OAAO,CAAE,KAAjD,CAAwD,QAAQ,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAlE,CAA6E,QAAQ,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAvF,eACI,mCAAa,MAAM,CAAC,UAApB,CAA+B,IAAI,CAAE,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAArC,EADJ,cAEI,4CACI,MAAM,CAAC,UADX,CAEI,KAAK,CAAC,OAFV,EAFJ,CADJ,CAUH,CApDD,CAuDA,cAAeH,CAAAA,WAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { useThree } from 'react-three-fiber'\r\n\r\nconst MouseHelper = (props) => {\r\n\r\n    const {intersect} = useThree();\r\n\r\n    const helper = useRef();\r\n\r\n    const onMouseMove = () => {\r\n        if (intersect()[0]=== undefined) {return}\r\n        if (intersect().length > 0 && intersect()[0].object.name !== \"marker\") {\r\n            const p = helper.current.position.copy(intersect()[0].point)\r\n            const n = intersect()[0].face.normal.clone()\r\n            const mesh= intersect()[0].object\r\n            n.transformDirection( mesh.matrixWorld )\r\n            \r\n            n.multiplyScalar( 10 );\r\n            n.add( intersect()[0].point );\r\n            \r\n\r\n            helper.current.lookAt( n )\r\n            \r\n\r\n            if(props.typeExam === \"soft-tissues-exam\")\r\n             {props.handleOrientation(helper.current.rotation)}\r\n            \r\n    \r\n            props.handlePosition(helper.current.position)\r\n            \r\n            //console.log(helper.current.rotation)\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousemove', onMouseMove);        \r\n        return () => {\r\n        window.removeEventListener('mousemove', onMouseMove);\r\n        }\r\n    }, [])\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <mesh name={'mouseHelper'} ref={helper} visible={false} position={[0, 0, 0]} rotation={[0, 0, 0]}  >\r\n            <boxGeometry attach=\"geometry\" args={[0.01, 0.01, 0.02]} />\r\n            <meshStandardMaterial\r\n                attach=\"material\"\r\n                color=\"green\"\r\n            />\r\n            {/* <axesHelper args={[0.3, 0.3, 0.3]} /> */}\r\n        </mesh>\r\n    );\r\n}\r\n\r\n\r\nexport default MouseHelper;"]},"metadata":{},"sourceType":"module"}