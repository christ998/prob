{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Button,Col,Container,Form,FormGroup,Input,Card,CardBody,ModalHeader,Label}from'reactstrap';import axios from'../../../helpers/axiosConfig';import{getList}from'helpers/ListHelper';import useList from'hooks/useList';var GeneralAnamnesis=function GeneralAnamnesis(_ref){var location=_ref.location;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),has=_useState2[0],setHas=_useState2[1];//LOCATION###############################################################\nuseEffect(function(){var _location$state;if(!(location===null||location===void 0?void 0:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.id)){//location.state.id = 11;\nfetchLastGeneral(0);}else{fetchLastGeneral(location.state.id);};},[]);//GENERAL###############################################################\nvar defaultGeneral={general_anamnesis_id:0,person_id:0,allergies:\"\",other_disease:\"\",under_treatment:0,previous_surgeries:\"\",medicine_dose:\"\",medicine_allergies:\"\",radio_chemo_therapy:\"\",consult_motive:\"\",consult_motive_history:\"\",medic_alert:\"\"};var _useState3=useState(defaultGeneral),_useState4=_slicedToArray(_useState3,2),general=_useState4[0],setGeneral=_useState4[1];var fetchLastGeneral=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(person_id){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getList(\"general-anamnesis/\"+person_id);case 2:res=_context.sent;if(res.length===1){setGeneral(res[0]);fetchDiseases(res[0].general_anamnesis_id);setHas(true);};case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchLastGeneral(_x){return _ref2.apply(this,arguments);};}();var handleInputChange=function handleInputChange(e){setGeneral(_objectSpread(_objectSpread({},general),{},{[e.target.name]:e.target.value}));};var handleInputCheckedChange=function handleInputCheckedChange(e){setGeneral(_objectSpread(_objectSpread({},general),{},{[e.target.name]:e.target.checked}));};var handleCurrentDiseases=function handleCurrentDiseases(e){setDiseases(_objectSpread(_objectSpread({},diseases),{},{[e.target.name]:e.target.checked}));};//DISEASES##############################################################\nvar prmDiseases=useList(\"list/diseases\");var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),diseases=_useState6[0],setDiseases=_useState6[1];var fetchDiseases=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(general_anamnesis_id){var obj,res,i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:obj={};_context2.next=3;return getList(\"general-anamnesis/crud/\"+general_anamnesis_id);case 3:res=_context2.sent;for(i=0;i<res.length;i++){obj[res[i]['disease_id']]=res[i]['has_disease'];}setDiseases(obj);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchDiseases(_x2){return _ref3.apply(this,arguments);};}();//CRUD##################################################################\nvar saveChanges=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var d,i,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:e.preventDefault();d=[];for(i in diseases){if(diseases[i]){d.push(i);};};_context3.prev=4;_context3.next=7;return axios.post(\"general-anamnesis/crud\",_objectSpread(_objectSpread({},general),{},{d}));case 7:res=_context3.sent;if(!res.data.error){console.log('Cambios guardados correctamente!');}else{console.log('Err: '+res.data.result.code+' '+res.data.result.sqlMessage);};_context3.next=15;break;case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](4);console.log('Err: '+_context3.t0);case 15:;case 16:case\"end\":return _context3.stop();}}},_callee3,null,[[4,12]]);}));return function saveChanges(_x3){return _ref4.apply(this,arguments);};}();//GROUP#################################################################\nvar _useState7=useState('motive'),_useState8=_slicedToArray(_useState7,2),group=_useState8[0],setGroup=_useState8[1];//JSX##################################################################\nreturn/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Anamnesis general\"),!has?/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(\"h4\",null,\"El paciente no tiene registros en Anamnesis general.\")):/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,{className:\"pb-0 pt-1\"},/*#__PURE__*/React.createElement(ModalHeader,{className:\"pb-5 pl-0\"},/*#__PURE__*/React.createElement(\"a\",{style:_objectSpread({paddingRight:\"15px\",cursor:\"pointer\"},group==='motive'?{color:\"#11cdef\"}:{}),onClick:function onClick(){return setGroup('motive');}},\"Motivo de consulta\"),/*#__PURE__*/React.createElement(\"a\",{style:_objectSpread({paddingRight:\"15px\",cursor:\"pointer\"},group==='background'?{color:\"#11cdef\"}:{}),onClick:function onClick(){return setGroup('background');}},\"Antecedentes m\\xF3rbidos personales\")),/*#__PURE__*/React.createElement(Form,{id:\"id-form-update\",onSubmit:function onSubmit(e){return saveChanges(e);},role:\"form\"},group==='motive'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Motivo Consulta\"),/*#__PURE__*/React.createElement(Input,{autoComplete:\"off\",maxLength:\"250\",type:\"text\",name:\"consult_motive\",value:general.consult_motive,onChange:function onChange(e){return handleInputChange(e);}}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Historial del motivo de Consulta\"),/*#__PURE__*/React.createElement(Input,{autoComplete:\"off\",maxLength:\"250\",type:\"text\",name:\"consult_motive_history\",value:general.consult_motive_history,onChange:function onChange(e){return handleInputChange(e);}}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Alerta m\\xE9dica especial y comentarios relevantes sobre el paciente\"),/*#__PURE__*/React.createElement(Input,{autoComplete:\"off\",maxLength:\"250\",type:\"text\",name:\"medic_alert\",value:general.medic_alert,onChange:function onChange(e){return handleInputChange(e);}}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{className:\"d-flex\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Est\\xE1 bajo tratamiento\"),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-toggle custom-toggle-warning ml-3\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",name:\"under_treatment\",checked:general.under_treatment,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"span\",{className:\"custom-toggle-slider rounded-circle\",\"data-label-off\":\"No\",\"data-label-on\":\"S\\xED\"})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Alergias\"),/*#__PURE__*/React.createElement(Input,{autoComplete:\"off\",maxLength:\"250\",type:\"text\",name:\"allergies\",value:general.allergies,onChange:function onChange(e){return handleInputChange(e);}}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Cirug\\xEDas previas/ Hospitalizaci\\xF3n/\"),/*#__PURE__*/React.createElement(Input,{autoComplete:\"off\",maxLength:\"250\",type:\"text\",name:\"previous_surgeries\",value:general.previous_surgeries,onChange:function onChange(e){return handleInputChange(e);}}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"F\\xE1rmacos y Posolog\\xEDa\"),/*#__PURE__*/React.createElement(Input,{autoComplete:\"off\",maxLength:\"250\",type:\"text\",name:\"medicine_dose\",value:general.medicine_dose,onChange:function onChange(e){return handleInputChange(e);}}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Alergia a F\\xE1rmacos (especificar cu\\xE1l)\"),/*#__PURE__*/React.createElement(Input,{autoComplete:\"off\",maxLength:\"250\",type:\"text\",name:\"medicine_allergies\",value:general.medicine_allergies,onChange:function onChange(e){return handleInputChange(e);}}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Radioterapia / Quimioterapia\"),/*#__PURE__*/React.createElement(Input,{autoComplete:\"off\",maxLength:\"250\",type:\"text\",name:\"radio_chemo_therapy\",value:general.radio_chemo_therapy,onChange:function onChange(e){return handleInputChange(e);}})))),group==='background'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{md:\"10\"},prmDiseases.map(function(prm){return/*#__PURE__*/React.createElement(\"div\",{key:prm.disease_id,className:\"custom-control custom-checkbox custom-checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",id:prm.disease_id,name:prm.disease_id,className:\"custom-control-input\",checked:diseases[prm.disease_id],onChange:function onChange(e){return handleCurrentDiseases(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:prm.disease_id},prm.name));}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Otros / Observaciones\"),/*#__PURE__*/React.createElement(Input,{autoComplete:\"off\",maxLength:\"250\",type:\"text\",name:\"other_disease\",value:general.other_disease,onChange:function onChange(e){return handleInputChange(e);}})))),/*#__PURE__*/React.createElement(\"div\",{className:\"float-right mb-4 mr-2\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",id:\"id-btn-save\",color:\"primary\"},\"Guardar\"),' ')))));};export default GeneralAnamnesis;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/views/pages/patient/general-anamnesis-u.js"],"names":["React","useState","useEffect","Button","Col","Container","Form","FormGroup","Input","Card","CardBody","ModalHeader","Label","axios","getList","useList","GeneralAnamnesis","location","has","setHas","state","id","fetchLastGeneral","defaultGeneral","general_anamnesis_id","person_id","allergies","other_disease","under_treatment","previous_surgeries","medicine_dose","medicine_allergies","radio_chemo_therapy","consult_motive","consult_motive_history","medic_alert","general","setGeneral","res","length","fetchDiseases","handleInputChange","e","target","name","value","handleInputCheckedChange","checked","handleCurrentDiseases","setDiseases","diseases","prmDiseases","obj","i","saveChanges","preventDefault","d","push","post","data","error","console","log","result","code","sqlMessage","group","setGroup","paddingRight","cursor","color","map","prm","disease_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, ModalHeader, Label} from 'reactstrap';\r\nimport axios from '../../../helpers/axiosConfig';\r\nimport {getList} from 'helpers/ListHelper'; \r\nimport useList from 'hooks/useList';\r\n\r\nconst GeneralAnamnesis = ({location}) => {\r\n    const [has, setHas] = useState(false);\r\n    //LOCATION###############################################################\r\n    useEffect(() => {\r\n        if (!location?.state?.id) { \r\n            //location.state.id = 11;\r\n            fetchLastGeneral(0);\r\n        } else {\r\n            fetchLastGeneral(location.state.id);\r\n        };        \r\n    }, []);\r\n\r\n    //GENERAL###############################################################\r\n    const defaultGeneral = {general_anamnesis_id: 0, person_id: 0, allergies: \"\", other_disease: \"\", under_treatment: 0, previous_surgeries: \"\", medicine_dose: \"\", medicine_allergies: \"\", radio_chemo_therapy: \"\", consult_motive: \"\", consult_motive_history: \"\", medic_alert: \"\"};\r\n    const [general, setGeneral] = useState(defaultGeneral);\r\n    const fetchLastGeneral = async (person_id) => {\r\n        const res = await getList(\"general-anamnesis/\" + person_id);\r\n        if (res.length === 1) {\r\n            setGeneral(res[0]);\r\n            fetchDiseases(res[0].general_anamnesis_id);\r\n            setHas(true);\r\n        }; \r\n    }; \r\n\r\n    const handleInputChange = e => {\r\n        setGeneral({\r\n            ...general,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputCheckedChange = e => {\r\n        setGeneral({\r\n            ...general,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    const handleCurrentDiseases = e => {\r\n        setDiseases({\r\n            ...diseases,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    //DISEASES##############################################################\r\n    const prmDiseases = useList(\"list/diseases\");\r\n    const [diseases, setDiseases] = useState([]);\r\n    const fetchDiseases = async (general_anamnesis_id) => {\r\n        const obj = {};\r\n        const res = await getList(\"general-anamnesis/crud/\" + general_anamnesis_id);\r\n        for (let i = 0; i < res.length; i++) {\r\n            obj[res[i]['disease_id']] = res[i]['has_disease'];\r\n        }\r\n        setDiseases(obj);\r\n    };  \r\n    \r\n    //CRUD##################################################################\r\n    const saveChanges = async (e) => {\r\n        e.preventDefault();\r\n        const d = [];\r\n        for(var i in diseases){\r\n            if(diseases[i]) {\r\n                d.push(i);\r\n            }; \r\n        };\r\n        try {\r\n            const res = await axios.post(\"general-anamnesis/crud\", {...general, d});\r\n            if (!res.data.error) {\r\n                console.log('Cambios guardados correctamente!');\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    //GROUP#################################################################\r\n    const [group, setGroup] = useState('motive');\r\n\r\n    //JSX##################################################################\r\n    return (\r\n        <Container>\r\n            <h1>Anamnesis general</h1>\r\n                {!has \r\n                    ? <Card><h4>El paciente no tiene registros en Anamnesis general.</h4></Card> \r\n                    : <Card>\r\n                        <CardBody className=\"pb-0 pt-1\">\r\n                            <ModalHeader className=\"pb-5 pl-0\">\r\n                                <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'motive' ? {color:\"#11cdef\"} : {})}} onClick={() => setGroup('motive')}>Motivo de consulta</a>\r\n                                <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'background' ? {color:\"#11cdef\"} : {})}} onClick={() => setGroup('background')}>Antecedentes mórbidos personales</a>\r\n                            </ModalHeader>\r\n                            <Form id=\"id-form-update\" onSubmit={(e) => saveChanges(e)} role=\"form\">\r\n                                {group === 'motive' && <>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Motivo Consulta</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"consult_motive\"\r\n                                                value={general.consult_motive}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Historial del motivo de Consulta</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"consult_motive_history\"\r\n                                                value={general.consult_motive_history}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Alerta médica especial y comentarios relevantes sobre el paciente</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"medic_alert\"\r\n                                                value={general.medic_alert}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col className=\"d-flex\">\r\n                                            <Label className=\"form-control-label\">Está bajo tratamiento</Label>\r\n                                            <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                                <Input\r\n                                                    type=\"checkbox\"\r\n                                                    name=\"under_treatment\"\r\n                                                    checked={general.under_treatment}\r\n                                                    onChange={e => {handleInputCheckedChange(e)}}\r\n                                                />\r\n                                                <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                            </label>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Alergias</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"allergies\"\r\n                                                value={general.allergies}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Cirugías previas/ Hospitalización/</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"previous_surgeries\"\r\n                                                value={general.previous_surgeries}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Fármacos y Posología</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"medicine_dose\"\r\n                                                value={general.medicine_dose}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Alergia a Fármacos (especificar cuál)</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"medicine_allergies\"\r\n                                                value={general.medicine_allergies}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Radioterapia / Quimioterapia</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"radio_chemo_therapy\"\r\n                                                value={general.radio_chemo_therapy}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </>}    \r\n                                {group === 'background' && <>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col md=\"10\">\r\n                                            {prmDiseases.map(prm => (\r\n                                                <div key={prm.disease_id} className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                    <Input\r\n                                                        type=\"checkbox\"\r\n                                                        id={prm.disease_id}\r\n                                                        name={prm.disease_id}\r\n                                                        className=\"custom-control-input\"\r\n                                                        checked={diseases[prm.disease_id]}\r\n                                                        onChange={e => handleCurrentDiseases(e)}\r\n                                                    />\r\n                                                    <label className=\"custom-control-label\" htmlFor={prm.disease_id}>{prm.name}</label>\r\n                                                </div>\r\n                                            ))}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Otros / Observaciones</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"other_disease\"\r\n                                                value={general.other_disease}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </>}\r\n                                <div className= \"float-right mb-4 mr-2\">\r\n                                    <Button type=\"submit\" id=\"id-btn-save\" color=\"primary\">Guardar</Button>{' '}\r\n                                    {/* <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Cancelar</Button> */}\r\n                                </div>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default GeneralAnamnesis;\r\n"]},"metadata":{},"sourceType":"module"}