{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\src\\\\views\\\\pages\\\\patient\\\\list-patient.js\";\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Col, Container, Form, FormGroup, Input, InputGroup, Card, CardBody, Label, Table, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport axios from '../../../helpers/axiosConfig';\nimport { Link } from 'react-router-dom';\nimport useList from 'hooks/useList';\nimport { getList } from 'helpers/ListHelper';\nimport moment from 'moment';\nimport SimpleModal from \"../components/SimpleModal\";\n\nvar ListPatient = function ListPatient() {\n  useEffect(function () {\n    fetchPersons();\n  }, []);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      persons = _useState2[0],\n      setPersons = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPerson = _useState4[0],\n      setCurrentPerson = _useState4[1];\n\n  var _useState5 = useState('person'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      group = _useState6[0],\n      setGroup = _useState6[1];\n\n  var maritalStatus = useList(\"list/marital-status\");\n  var livesWith = useList(\"list/lives-with\");\n  var nativeOrigins = useList(\"list/native-origin\");\n  var previsions = useList(\"list/prevision\");\n  var educationLevels = useList(\"list/education-level\");\n  var covidRisks = useList(\"list/covid-risk\");\n  var acceptedConcents = useList(\"list/consent\");\n  var regions = useList(\"list/region\");\n  var towns = useList(\"list/town\");\n  var registereds = useList(\"list/registered-by\"); //SimpleModal######################################################################################################\n\n  var modalRef = useRef();\n\n  var setModal = function setModal(options) {\n    modalRef.current.setModal(options);\n  }; //SimpleModal######################################################################################################\n\n\n  var fetchPersons = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getList(\"person/listpatient\");\n\n            case 2:\n              res = _context.sent;\n              setPersons(res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchPersons() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleInputChange = function handleInputChange(e) {\n    setCurrentPerson(_objectSpread(_objectSpread({}, currentPerson), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  var handleInputCheckedChange = function handleInputCheckedChange(e) {\n    setCurrentPerson(_objectSpread(_objectSpread({}, currentPerson), {}, {\n      [e.target.name]: e.target.checked\n    }));\n  };\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      displayModal = _useState8[0],\n      setDisplayModal = _useState8[1];\n\n  var showModal = function showModal(person) {\n    setGroup(\"person\");\n    setCurrentPerson(person);\n    setDisplayModal(!displayModal);\n  };\n\n  var changeGroup = function changeGroup(group) {\n    var form = document.getElementById('id-form-update');\n\n    if (form.checkValidity()) {\n      setGroup(group);\n    } else {\n      document.getElementById('id-btn-save').click();\n    }\n\n    ;\n  };\n\n  var updatePerson = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault(); //alert('Funcionalidad en mantencion!!!!');\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.put(\"person\", currentPerson);\n\n            case 4:\n              res = _context2.sent;\n              _context2.t0 = res.data.result[0][0].cod;\n              _context2.next = _context2.t0 === 0 ? 8 : _context2.t0 === 1 ? 11 : _context2.t0 === 2 ? 13 : 15;\n              break;\n\n            case 8:\n              //window.location.reload();\n              fetchPersons();\n              setDisplayModal(!displayModal);\n              return _context2.abrupt(\"break\", 17);\n\n            case 11:\n              setModal({\n                title: 'Usuario',\n                text: 'El usuario ' + currentPerson.run + ' ya existe.',\n                type: 1\n              });\n              return _context2.abrupt(\"break\", 17);\n\n            case 13:\n              setModal({\n                title: 'Usuario',\n                text: 'El usuario ' + currentPerson.run + ' ya existe pero esta inactivo',\n                type: 1\n              });\n              return _context2.abrupt(\"break\", 17);\n\n            case 15:\n              setModal({\n                title: 'Error',\n                text: 'Despierte al administrador de sistemas ' + res.data.result[0][0].msg,\n                type: 1\n              });\n              return _context2.abrupt(\"break\", 17);\n\n            case 17:\n              ;\n              _context2.next = 23;\n              break;\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t1 = _context2[\"catch\"](1);\n              console.log('Err: ' + _context2.t1);\n\n            case 23:\n              ;\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 20]]);\n    }));\n\n    return function updatePerson(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var updateStatePerson = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(run) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.put(\"person/\" + run);\n\n            case 2:\n              res = _context3.sent;\n\n              if (!res.data.error) {\n                fetchPersons();\n              }\n\n              ;\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function updateStatePerson(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var reqTag = /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#DC3545\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 20\n    }\n  }, \"*\");\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"heading-small text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Listado de pacientes\"), /*#__PURE__*/React.createElement(Table, {\n    className: \"align-items-center\",\n    responsive: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"N\\xB0\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, \"Nombre\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, \"Apellido\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Run\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, persons.map(function (person, i) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"text-center\",\n      key: person.person_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, person.names), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }, person.lastnames), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, person.run), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: function onClick() {\n        return showModal(person);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }, \"Editar\"), /*#__PURE__*/React.createElement(Modal, {\n      size: \"lg\",\n      isOpen: displayModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      id: \"id-form-update\",\n      role: \"form\",\n      onSubmit: function onSubmit(e) {\n        return updatePerson(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: function toggle() {\n        setDisplayModal(!displayModal);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      style: _objectSpread({\n        paddingRight: \"15px\",\n        cursor: \"pointer\"\n      }, group === 'person' ? {\n        color: \"#11cdef\"\n      } : {}),\n      onClick: function onClick() {\n        return changeGroup('person');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 57\n      }\n    }, \"Paciente\"), /*#__PURE__*/React.createElement(\"a\", {\n      style: _objectSpread({\n        paddingRight: \"15px\",\n        cursor: \"pointer\"\n      }, group === 'carer' ? {\n        color: \"#11cdef\"\n      } : {}),\n      onClick: function onClick() {\n        return changeGroup('carer');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 57\n      }\n    }, \"Cuidador\"), /*#__PURE__*/React.createElement(\"a\", {\n      style: _objectSpread({\n        paddingRight: \"15px\",\n        cursor: \"pointer\"\n      }, group === 'motive' ? {\n        color: \"#11cdef\"\n      } : {}),\n      onClick: function onClick() {\n        return changeGroup('motive');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 57\n      }\n    }, \"Motivo consulta\"), /*#__PURE__*/React.createElement(\"a\", {\n      style: _objectSpread({\n        paddingRight: \"15px\",\n        cursor: \"pointer\"\n      }, group === 'sociodemo' ? {\n        color: \"#11cdef\"\n      } : {}),\n      onClick: function onClick() {\n        return changeGroup('sociodemo');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 57\n      }\n    }, \"Sociodemogr\\xE1ficos\"), /*#__PURE__*/React.createElement(\"a\", {\n      style: _objectSpread({\n        paddingRight: \"15px\",\n        cursor: \"pointer\"\n      }, group === 'consent' ? {\n        color: \"#11cdef\"\n      } : {}),\n      onClick: function onClick() {\n        return changeGroup('consent');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 57\n      }\n    }, \"Consentimiento\"), /*#__PURE__*/React.createElement(\"a\", {\n      style: _objectSpread({\n        paddingRight: \"15px\",\n        cursor: \"pointer\"\n      }, group === 'covid' ? {\n        color: \"#11cdef\"\n      } : {}),\n      onClick: function onClick() {\n        return changeGroup('covid');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 57\n      }\n    }, \"Covid\")), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"pt-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 53\n      }\n    }, group === 'person' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: \"#DC3545\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 61\n      }\n    }, \"* Existen campos obligatorios\"), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 69\n      }\n    }, \"Nombres \", reqTag), /*#__PURE__*/React.createElement(Input, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      value: currentPerson.names,\n      name: \"names\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 69\n      }\n    }, \"Apellidos \", reqTag), /*#__PURE__*/React.createElement(Input, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      value: currentPerson.lastnames,\n      name: \"lastnames\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 69\n      }\n    }, \"N\\xFAmero de Identidad \", reqTag), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"text\",\n      value: currentPerson.run,\n      name: \"run\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 69\n      }\n    }, \"Fecha de nacimiento \", reqTag), /*#__PURE__*/React.createElement(Input, {\n      required: true,\n      type: \"date\",\n      value: moment(currentPerson.birthdate).format('YYYY-MM-DD'),\n      name: \"birthdate\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 69\n      }\n    }, \"Direcci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      maxLength: \"250\",\n      autoComplete: \"off\",\n      placeholder: \"Direcci\\xF3n\",\n      name: \"address\",\n      value: currentPerson.address,\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 69\n      }\n    }, \"Region \", reqTag), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"region_id\",\n      required: true,\n      value: currentPerson.region_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      hidden: true,\n      value: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 77\n      }\n    }, \"Seleccione...\"), regions.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.region_id,\n        value: e.region_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 96\n        }\n      }, e.name);\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 69\n      }\n    }, \"Comuna de procedencia \", reqTag), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"town_id\",\n      required: true,\n      value: currentPerson.town_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      hidden: true,\n      value: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 77\n      }\n    }, \"Seleccione...\"), towns.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.town_id,\n        value: e.town_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 94\n        }\n      }, e.name);\n    })), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 69\n      }\n    }, \"Enrolado por \", reqTag), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"registered_by_id\",\n      required: true,\n      value: currentPerson.registered_by_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      hidden: true,\n      value: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 77\n      }\n    }, \"Seleccione...\"), registereds.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.registered_by_id,\n        value: e.registered_by_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 100\n        }\n      }, e.name);\n    })), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 69\n      }\n    }, \"Tel\\xE9fono fijo\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"tel\",\n      autoComplete: \"off\",\n      value: currentPerson.phone,\n      name: \"phone\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 69\n      }\n    }, \"Tel\\xE9fono celular\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"tel\",\n      autoComplete: \"off\",\n      value: currentPerson.cellphone,\n      name: \"cellphone\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 69\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      autoComplete: \"off\",\n      value: currentPerson.email,\n      type: \"email\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 74\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 73\n      }\n    }, \"\\xBFPaciente esta pensionado?\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-toggle custom-toggle-warning ml-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"is_retired\",\n      checked: currentPerson.is_retired,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"custom-toggle-slider rounded-circle\",\n      \"data-label-off\": \"No\",\n      \"data-label-on\": \"S\\xED\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 77\n      }\n    })))))), group === 'carer' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 69\n      }\n    }, \"Nombres\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"carer_names\",\n      autoComplete: \"off\",\n      type: \"text\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      value: currentPerson.carer_names,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 69\n      }\n    }, \"Apellidos\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"carer_lastnames\",\n      autoComplete: \"off\",\n      type: \"text\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      value: currentPerson.carer_lastnames,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 69\n      }\n    }, \"Comuna de procedencia\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"carer_town_id\",\n      required: true,\n      value: currentPerson.carer_town_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      hidden: true,\n      value: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 77\n      }\n    }, \"Seleccione...\"), towns.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.town_id,\n        value: e.town_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 94\n        }\n      }, e.name);\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 69\n      }\n    }, \"Tel\\xE9fono fijo\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"carer_phone\",\n      autoComplete: \"off\",\n      type: \"tel\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      value: currentPerson.carer_phone,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 69\n      }\n    }, \"Tel\\xE9fono celular\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"carer_cellphone\",\n      autoComplete: \"off\",\n      type: \"tel\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      value: currentPerson.carer_cellphone,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 69\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      autoComplete: \"off\",\n      name: \"carer_email\",\n      value: currentPerson.carer_email,\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 69\n      }\n    })))), group === 'motive' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 73\n      }\n    }, \"\\xBFUrgencia dental?\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-toggle custom-toggle-warning ml-3 mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"urgency\",\n      checked: currentPerson.urgency,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"custom-toggle-slider rounded-circle\",\n      \"data-label-off\": \"No\",\n      \"data-label-on\": \"S\\xED\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 77\n      }\n    })))), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 69\n      }\n    }, \"Motivo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"pain\",\n      name: \"pain\",\n      className: \"custom-control-input\",\n      checked: currentPerson.pain,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"pain\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 128\n      }\n    }, \"Dolor severo de causa dentaria\"), \", que no ceda a analg\\xE9sicos.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"cavities\",\n      name: \"cavities\",\n      className: \"custom-control-input\",\n      checked: currentPerson.cavities,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"cavities\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 132\n      }\n    }, \"Manchas o heridas en cualquier parte de la boca\"), \" que no desaparecen en 1 mes.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"wounds\",\n      name: \"wounds\",\n      className: \"custom-control-input\",\n      checked: currentPerson.wounds,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"wounds\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 130\n      }\n    }, \"Lesiones en mucosa/enc\\xEDa\"), \", debido a desajuste de pr\\xF3tesis dental.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"bleeding\",\n      name: \"bleeding\",\n      className: \"custom-control-input\",\n      checked: currentPerson.bleeding,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"bleeding\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 132\n      }\n    }, \"Hemorragia bucal.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"fracture\",\n      name: \"fracture\",\n      className: \"custom-control-input\",\n      checked: currentPerson.fracture,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"fracture\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 132\n      }\n    }, \"P\\xE9rdida o fractura de restauraciones\"), \" (tapaduras) o \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 200\n      }\n    }, \"pr\\xF3tesis dentales.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"trauma\",\n      name: \"trauma\",\n      className: \"custom-control-input\",\n      checked: currentPerson.trauma,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"trauma\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 130\n      }\n    }, \"Trauma reciente.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"swelling\",\n      name: \"swelling\",\n      className: \"custom-control-input\",\n      checked: currentPerson.swelling,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"swelling\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 132\n      }\n    }, \"Hinchaz\\xF3n importante de boca\"), \", cara o cuello.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: \"treatment\",\n      name: \"treatment\",\n      className: \"custom-control-input\",\n      checked: currentPerson.treatment,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"treatment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 133\n      }\n    }, \"Tratamiento dental requerido previo a procedimientos m\\xE9dicos\"), \" cr\\xEDticos impostergables.\")))), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 69\n      }\n    }, \"Otro\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"other\",\n      maxLength: \"250\",\n      autoComplete: \"off\",\n      type: \"textarea\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      value: currentPerson.other,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 69\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label\",\n      htmlFor: \"exampleFormControlSelect3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 69\n      }\n    }, \"Encuesta OHIP-14Sp (\", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://docs.google.com/forms/d/e/1FAIpQLSetI2HQMrH1lhqeQBUZT1ks2KKpxrhIpL-ceOm3jYEyIY_gwQ/viewform\",\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 77\n      }\n    }, \"ver\"), \")\"), /*#__PURE__*/React.createElement(Input, {\n      max: \"9999\",\n      min: \"-9999\",\n      value: currentPerson.ohip14sp_result,\n      name: \"ohip14sp_result\",\n      type: \"number\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label\",\n      htmlFor: \"exampleFormControlSelect3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 69\n      }\n    }, \"\\xCDndice de Barthel (\", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\",\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 77\n      }\n    }, \"ver\"), \")\"), /*#__PURE__*/React.createElement(Input, {\n      max: \"9999\",\n      min: \"-9999\",\n      value: currentPerson.dependency_level,\n      name: \"dependency_level\",\n      type: \"number\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 69\n      }\n    })))), group === 'sociodemo' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 69\n      }\n    }, \"Ocupacion\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"occupation\",\n      autoComplete: \"off\",\n      type: \"text\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      value: currentPerson.occupation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 69\n      }\n    }, \"Previsi\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"prevision_id\",\n      value: currentPerson.prevision_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 69\n      }\n    }, previsions.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.prevision_id,\n        value: e.prevision_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 98\n        }\n      }, e.name);\n    })), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 69\n      }\n    }, \"Estado conyugal\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"marital_status_id\",\n      value: currentPerson.marital_status_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 69\n      }\n    }, maritalStatus.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.marital_status_id,\n        value: e.marital_status_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 101\n        }\n      }, e.name);\n    })), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 69\n      }\n    }, \"Comuna de nacimiento\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"birth_commune\",\n      autoComplete: \"off\",\n      type: \"text\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      value: currentPerson.birth_commune,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 69\n      }\n    }, \"Pueblo Originario\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"native_origin_id\",\n      value: currentPerson.native_origin_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 69\n      }\n    }, nativeOrigins.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.native_origin_id,\n        value: e.native_origin_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 101\n        }\n      }, e.name);\n    })), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 69\n      }\n    }, \"Nivel educacional\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"educational_level_id\",\n      value: currentPerson.educational_level_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 69\n      }\n    }, educationLevels.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.educational_level_id,\n        value: e.educational_level_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 103\n        }\n      }, e.name);\n    })), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 69\n      }\n    }, \"Red familiar\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"lives_with_id\",\n      value: currentPerson.lives_with_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 69\n      }\n    }, livesWith.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.lives_with_id,\n        value: e.lives_with_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 97\n        }\n      }, e.name);\n    }))))), group === 'consent' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 69\n      }\n    }, \"\\xBFLeyo el consentimiento?\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-toggle custom-toggle-warning ml-3 mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"consent_read\",\n      checked: currentPerson.consent_read,\n      onChange: function onChange(e) {\n        handleInputCheckedChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 73\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"custom-toggle-slider rounded-circle\",\n      \"data-label-off\": \"No\",\n      \"data-label-on\": \"S\\xED\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 73\n      }\n    })))), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 69\n      }\n    }, \"\\xBFAcepta el consentimiento? (\", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\",\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 73\n      }\n    }, \"ver\"), \")\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"informed_consent_answer_id\",\n      value: currentPerson.informed_consent_answer_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 69\n      }\n    }, acceptedConcents.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.informed_consent_answer_id,\n        value: e.informed_consent_answer_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 104\n        }\n      }, e.answer);\n    })), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 69\n      }\n    }, \"Observaciones\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"observations\",\n      autoComplete: \"off\",\n      maxLength: \"250\",\n      type: \"textarea\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      value: currentPerson.observations,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 69\n      }\n    })))), group === 'covid' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 69\n      }\n    }, \"Encuesta caso COVID (\", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://docs.google.com/forms/d/e/1FAIpQLSf7GsvK4AVlSlzQ8dFXcouJeNhKWzbHkjU78WTD7p92gNUpYg/viewform\",\n      target: \"_blank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 73\n      }\n    }, \"ver\"), \")\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"covid19_risk_id\",\n      value: currentPerson.covid19_risk_id,\n      onChange: function onChange(e) {\n        return handleInputChange(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 69\n      }\n    }, covidRisks.map(function (e) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: e.covid19_risk_id,\n        value: e.covid19_risk_id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 98\n        }\n      }, e.covid_risk);\n    })), /*#__PURE__*/React.createElement(Label, {\n      className: \"form-control-label pt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 69\n      }\n    }, \"Temperatura\"), /*#__PURE__*/React.createElement(Input, {\n      step: \"0.1\",\n      name: \"temperature\",\n      type: \"number\",\n      onChange: function onChange(e) {\n        handleInputChange(e);\n      },\n      value: currentPerson.temperature,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 69\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right mb-4 mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      id: \"id-btn-save\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 61\n      }\n    }, \"Guardar\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        setDisplayModal(!displayModal);\n      },\n      color: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 61\n      }\n    }, \"Cancelar\")))))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      style: {\n        color: \"white\"\n      },\n      to: {\n        pathname: \"/admin/covid-risk-reception\",\n        state: {\n          id: person.person_id,\n          run: person.run,\n          name: person.names,\n          apellido: person.lastnames\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 49\n      }\n    }, \"Recepcionar\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(SimpleModal, {\n      ref: modalRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      size: \"sm\",\n      onClick: function onClick() {\n        return setModal({\n          title: 'Paciente',\n          text: 'Desea eliminar al paciente ' + person.run + '?',\n          type: 2,\n          fx: function fx() {\n            return updateStatePerson(person.run);\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"far fa-trash-alt\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 49\n      }\n    }))));\n  }))))));\n};\n\nexport default ListPatient;","map":{"version":3,"sources":["C:/Users/Christian/WebstormProjects/teleodontoweb/src/views/pages/patient/list-patient.js"],"names":["React","useState","useEffect","useRef","Button","Col","Container","Form","FormGroup","Input","InputGroup","Card","CardBody","Label","Table","Modal","ModalHeader","ModalBody","ModalFooter","axios","Link","useList","getList","moment","SimpleModal","ListPatient","fetchPersons","persons","setPersons","currentPerson","setCurrentPerson","group","setGroup","maritalStatus","livesWith","nativeOrigins","previsions","educationLevels","covidRisks","acceptedConcents","regions","towns","registereds","modalRef","setModal","options","current","res","handleInputChange","e","target","name","value","handleInputCheckedChange","checked","displayModal","setDisplayModal","showModal","person","changeGroup","form","document","getElementById","checkValidity","click","updatePerson","preventDefault","put","data","result","cod","title","text","run","type","msg","console","log","updateStatePerson","error","reqTag","color","map","i","person_id","names","lastnames","paddingRight","cursor","birthdate","format","address","region_id","town_id","registered_by_id","phone","cellphone","email","is_retired","carer_names","carer_lastnames","carer_town_id","carer_phone","carer_cellphone","carer_email","urgency","pain","cavities","wounds","bleeding","fracture","trauma","swelling","treatment","other","ohip14sp_result","dependency_level","occupation","prevision_id","marital_status_id","birth_commune","native_origin_id","educational_level_id","lives_with_id","consent_read","informed_consent_answer_id","answer","observations","covid19_risk_id","covid_risk","temperature","pathname","state","id","apellido","fx"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport {Button, Col, Container, Form, FormGroup, Input, InputGroup,Card, CardBody, Label, Table, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap'\r\nimport axios from '../../../helpers/axiosConfig'\r\nimport {Link} from 'react-router-dom';\r\nimport useList from 'hooks/useList';\r\nimport {getList} from 'helpers/ListHelper'; \r\nimport moment from 'moment';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst ListPatient = () => {\r\n    useEffect(() => {fetchPersons()}, []);  \r\n    const [persons, setPersons] = useState([]);\r\n    const [currentPerson, setCurrentPerson] = useState({});\r\n    const [group, setGroup] = useState('person');\r\n    const maritalStatus = useList(\"list/marital-status\");\r\n    const livesWith = useList(\"list/lives-with\");\r\n    const nativeOrigins = useList(\"list/native-origin\");\r\n    const previsions = useList(\"list/prevision\");\r\n    const educationLevels = useList(\"list/education-level\");\r\n    const covidRisks = useList(\"list/covid-risk\");\r\n    const acceptedConcents = useList(\"list/consent\");\r\n    const regions = useList(\"list/region\");\r\n    const towns = useList(\"list/town\");\r\n    const registereds = useList(\"list/registered-by\") \r\n\r\n    //SimpleModal######################################################################################################\r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options)\r\n    };\r\n    //SimpleModal######################################################################################################\r\n    \r\n    const fetchPersons = async () => {\r\n        const res = await getList(\"person/listpatient\");\r\n        setPersons(res);\r\n    };  \r\n    \r\n    const handleInputChange = e => {\r\n        setCurrentPerson({\r\n            ...currentPerson,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputCheckedChange = e => {\r\n        setCurrentPerson({\r\n            ...currentPerson,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const showModal = (person) => {\r\n        setGroup(\"person\");\r\n        setCurrentPerson(person);\r\n        setDisplayModal(!displayModal);\r\n    }\r\n\r\n    const changeGroup = (group) => {\r\n        var form = document.getElementById('id-form-update');\r\n        if(form.checkValidity()) {\r\n            setGroup(group);\r\n        } else {\r\n            document.getElementById('id-btn-save').click();\r\n        };\r\n    };\r\n\r\n    const updatePerson = async e => {\r\n        e.preventDefault();\r\n        //alert('Funcionalidad en mantencion!!!!');\r\n        try {\r\n            const res = await axios.put(\"person\", currentPerson);\r\n            switch(res.data.result[0][0].cod) {\r\n                case 0: \r\n                    //window.location.reload();\r\n                    fetchPersons();\r\n                    setDisplayModal(!displayModal);\r\n                    break;\r\n                case 1: \r\n                    setModal({title: 'Usuario', text : 'El usuario ' + currentPerson.run + ' ya existe.', type: 1});\r\n                    break;\r\n                case 2:\r\n                    setModal({title: 'Usuario', text : 'El usuario ' + currentPerson.run + ' ya existe pero esta inactivo', type: 1});\r\n                    break;\r\n                default:\r\n                    setModal({title: 'Error', text : 'Despierte al administrador de sistemas ' + res.data.result[0][0].msg, type: 1});\r\n                    break;\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const updateStatePerson = async run => {\r\n        const res = await axios.put(\"person/\" + run);\r\n        if (!res.data.error) {\r\n            fetchPersons();\r\n        };\r\n    };\r\n\r\n    const reqTag = <span style={{color: \"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Card>\r\n                <CardBody>\r\n                    <h6 className=\"heading-small text-muted mb-4\">Listado de pacientes</h6>\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                            <tr className=\"text-center\">\r\n                                <th scope=\"col\">N°</th>\r\n                                <th scope=\"col\">Nombre</th>\r\n                                <th scope=\"col\">Apellido</th>\r\n                                <th scope=\"col\">Run</th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           {persons.map(\r\n                                (person, i) =>\r\n                                    <tr className=\"text-center\" key={person.person_id}>\r\n                                        <td>{i + 1}</td>\r\n                                        <td>{person.names}</td>\r\n                                        <td>{person.lastnames}</td>\r\n                                        <td>{person.run}</td>\r\n                                        <td>\r\n                                            <Button color=\"primary\" onClick={() => showModal(person)}>Editar</Button>\r\n                                            <Modal size=\"lg\" isOpen={displayModal}>\r\n                                                <Form id=\"id-form-update\" role=\"form\" onSubmit={e => updatePerson(e)}>\r\n                                                    <ModalHeader toggle={() => {setDisplayModal(!displayModal)}}>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'person' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('person')}>Paciente</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'carer' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('carer')}>Cuidador</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'motive' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('motive')}>Motivo consulta</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'sociodemo' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('sociodemo')}>Sociodemográficos</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'consent' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('consent')}>Consentimiento</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'covid' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('covid')}>Covid</a>\r\n                                                    </ModalHeader>\r\n                                                    <ModalBody className=\"pt-1\">\r\n                                                        {group === 'person' && <>\r\n                                                            <h5 style={{color: \"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Nombres {reqTag}</Label>\r\n                                                                    <Input\r\n                                                                        required autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        value={currentPerson.names}\r\n                                                                        name=\"names\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Apellidos {reqTag}</Label>\r\n                                                                    <Input\r\n                                                                        required autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        value={currentPerson.lastnames}\r\n                                                                        name=\"lastnames\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Número de Identidad {reqTag}</Label>\r\n                                                                    <InputGroup>\r\n                                                                        <Input\r\n                                                                            required autoComplete=\"off\"\r\n                                                                            type=\"text\"\r\n                                                                            value={currentPerson.run}\r\n                                                                            name=\"run\"\r\n                                                                            onChange={e => {handleInputChange(e)}}\r\n                                                                        />\r\n                                                                    </InputGroup>\r\n                                                                    <Label className=\"form-control-label pt-3\">Fecha de nacimiento {reqTag}</Label>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        type=\"date\"\r\n                                                                        value={moment(currentPerson.birthdate).format('YYYY-MM-DD')}\r\n                                                                        name=\"birthdate\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Dirección</Label>\r\n                                                                    <Input\r\n                                                                        type=\"text\" maxLength=\"250\" autoComplete=\"off\"\r\n                                                                        placeholder=\"Dirección\"\r\n                                                                        name=\"address\"\r\n                                                                        value={currentPerson.address}\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Region {reqTag}</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"region_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.region_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {regions.map(e => (<option key={e.region_id} value={e.region_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Comuna de procedencia {reqTag}</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"town_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.town_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {towns.map(e => (<option key={e.town_id} value={e.town_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Enrolado por {reqTag}</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"registered_by_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.registered_by_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {registereds.map(e => (<option key={e.registered_by_id} value={e.registered_by_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono fijo</Label>\r\n                                                                    <Input\r\n                                                                        type=\"tel\" autoComplete=\"off\"\r\n                                                                        value={currentPerson.phone}\r\n                                                                        name=\"phone\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono celular</Label>\r\n                                                                    <Input\r\n                                                                        type=\"tel\" autoComplete=\"off\"\r\n                                                                        value={currentPerson.cellphone}\r\n                                                                        name=\"cellphone\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Email</Label>\r\n                                                                    <Input\r\n                                                                        name=\"email\" autoComplete=\"off\"\r\n                                                                        value={currentPerson.email}\r\n                                                                        type=\"email\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <br/><br/>\r\n                                                                    <Col className=\"d-flex p-0\">\r\n                                                                        <Label className=\"form-control-label\">¿Paciente esta pensionado?</Label>\r\n                                                                        <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                                                            <Input \r\n                                                                                type=\"checkbox\"\r\n                                                                                name=\"is_retired\"\r\n                                                                                checked={currentPerson.is_retired}\r\n                                                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                            />\r\n                                                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                                        </label>\r\n                                                                    </Col>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'carer' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Nombres</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_names\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_names}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Apellidos</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_lastnames\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_lastnames}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Comuna de procedencia</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"carer_town_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.carer_town_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {towns.map(e => (<option key={e.town_id} value={e.town_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono fijo</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_phone\" autoComplete=\"off\"\r\n                                                                        type=\"tel\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_phone}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono celular</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_cellphone\" autoComplete=\"off\"\r\n                                                                        type=\"tel\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_cellphone}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Email</Label>\r\n                                                                    <Input\r\n                                                                        type=\"email\" autoComplete=\"off\"\r\n                                                                        name=\"carer_email\"\r\n                                                                        value={currentPerson.carer_email}\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'motive' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col className=\"d-flex\">\r\n                                                                        <Label className=\"form-control-label pt-3\">¿Urgencia dental?</Label>\r\n                                                                        <label className=\"custom-toggle custom-toggle-warning ml-3 mt-3\">\r\n                                                                            <Input \r\n                                                                                type=\"checkbox\"\r\n                                                                                name=\"urgency\"\r\n                                                                                checked={currentPerson.urgency}\r\n                                                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                            />\r\n                                                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                                        </label>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label\">Motivo</Label>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"pain\"   \r\n                                                                            name=\"pain\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.pain}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"pain\"><strong>Dolor severo de causa dentaria</strong>, que no ceda a analgésicos.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"cavities\"  \r\n                                                                            name=\"cavities\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.cavities}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"cavities\"><strong>Manchas o heridas en cualquier parte de la boca</strong> que no desaparecen en 1 mes.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"wounds\"  \r\n                                                                            name=\"wounds\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.wounds}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"wounds\"><strong>Lesiones en mucosa/encía</strong>, debido a desajuste de prótesis dental.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"bleeding\"   \r\n                                                                            name=\"bleeding\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.bleeding}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"bleeding\"><strong>Hemorragia bucal.</strong></label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"fracture\"   \r\n                                                                            name=\"fracture\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.fracture}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"fracture\"><strong>Pérdida o fractura de restauraciones</strong> (tapaduras) o <strong>prótesis dentales.</strong></label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"trauma\"   \r\n                                                                            name=\"trauma\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.trauma}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"trauma\"><strong>Trauma reciente.</strong></label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"swelling\"   \r\n                                                                            name=\"swelling\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.swelling}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"swelling\"><strong>Hinchazón importante de boca</strong>, cara o cuello.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"treatment\"   \r\n                                                                            name=\"treatment\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.treatment}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"treatment\"><strong>Tratamiento dental requerido previo a procedimientos médicos</strong> críticos impostergables.</label>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label\">Otro</Label>\r\n                                                                    <Input\r\n                                                                        name=\"other\" maxLength=\"250\" autoComplete=\"off\"\r\n                                                                        type=\"textarea\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.other}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <br/>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\">\r\n                                                                        Encuesta OHIP-14Sp (\r\n                                                                            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSetI2HQMrH1lhqeQBUZT1ks2KKpxrhIpL-ceOm3jYEyIY_gwQ/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        max=\"9999\" min=\"-9999\"\r\n                                                                        value={currentPerson.ohip14sp_result}\r\n                                                                        name=\"ohip14sp_result\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\">\r\n                                                                        Índice de Barthel (\r\n                                                                            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        max=\"9999\" min=\"-9999\"\r\n                                                                        value={currentPerson.dependency_level}\r\n                                                                        name=\"dependency_level\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n\r\n                                                        </>}\r\n                                                        {group === 'sociodemo' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Ocupacion</Label>\r\n                                                                    <Input\r\n                                                                        name=\"occupation\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.occupation}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Previsión</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"prevision_id\"\r\n                                                                        value={currentPerson.prevision_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {previsions.map(e=> (<option key={e.prevision_id} value={e.prevision_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Estado conyugal</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"marital_status_id\"\r\n                                                                        value={currentPerson.marital_status_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {maritalStatus.map(e=> (<option key={e.marital_status_id} value={e.marital_status_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Comuna de nacimiento</Label>\r\n                                                                    <Input\r\n                                                                        name=\"birth_commune\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.birth_commune}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Pueblo Originario</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"native_origin_id\"\r\n                                                                        value={currentPerson.native_origin_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {nativeOrigins.map(e=> (<option key={e.native_origin_id} value={e.native_origin_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Nivel educacional</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"educational_level_id\"\r\n                                                                        value={currentPerson.educational_level_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {educationLevels.map(e=> (<option key={e.educational_level_id} value={e.educational_level_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Red familiar</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"lives_with_id\"\r\n                                                                        value={currentPerson.lives_with_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {livesWith.map(e=> (<option key={e.lives_with_id} value={e.lives_with_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'consent' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col className=\"d-flex\">\r\n                                                                    <Label className=\"form-control-label pt-3\">¿Leyo el consentimiento?</Label>\r\n                                                                    <label className=\"custom-toggle custom-toggle-warning ml-3 mt-3\">\r\n                                                                        <Input \r\n                                                                            type=\"checkbox\"\r\n                                                                            name=\"consent_read\"\r\n                                                                            checked={currentPerson.consent_read}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                                    </label>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label pt-3\">¿Acepta el consentimiento? (\r\n                                                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"informed_consent_answer_id\"\r\n                                                                        value={currentPerson.informed_consent_answer_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {acceptedConcents.map(e=> (<option key={e.informed_consent_answer_id} value={e.informed_consent_answer_id}>{e.answer}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Observaciones</Label>\r\n                                                                    <Input\r\n                                                                        name=\"observations\" autoComplete=\"off\" maxLength=\"250\"\r\n                                                                        type=\"textarea\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.observations}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'covid' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label pt-3\">Encuesta caso COVID (\r\n                                                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSf7GsvK4AVlSlzQ8dFXcouJeNhKWzbHkjU78WTD7p92gNUpYg/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"covid19_risk_id\"\r\n                                                                        value={currentPerson.covid19_risk_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {covidRisks.map(e=> (<option key={e.covid19_risk_id} value={e.covid19_risk_id}>{e.covid_risk}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Temperatura</Label>\r\n                                                                    <Input\r\n                                                                        step=\"0.1\"\r\n                                                                        name=\"temperature\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.temperature}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        <div className= \"float-right mb-4 mr-2\">\r\n                                                            <Button type=\"submit\" id=\"id-btn-save\" color=\"primary\">Guardar</Button>{' '}\r\n                                                            <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Cancelar</Button>\r\n                                                        </div>\r\n                                                    </ModalBody>\r\n                                                </Form>\r\n                                            </Modal>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button color=\"primary\">\r\n                                                <Link \r\n                                                    style={{color: \"white\"}} \r\n                                                    to={{\r\n                                                        pathname: \"/admin/covid-risk-reception\",\r\n                                                        state: {id: person.person_id, run: person.run, name: person.names, apellido: person.lastnames}\r\n                                                    }}>Recepcionar\r\n                                                </Link>                \r\n                                            </Button>\r\n                                        </td> \r\n                                        <td>\r\n                                            <SimpleModal ref={modalRef}/>\r\n                                            <Button color=\"danger\" size=\"sm\" onClick={() => setModal({title: 'Paciente', text: 'Desea eliminar al paciente ' + person.run + '?', type: 2, fx: () => updateStatePerson(person.run)})}>\r\n                                                <i className=\"far fa-trash-alt\"></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                        </tbody>\r\n                    </Table>\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ListPatient;"]},"metadata":{},"sourceType":"module"}