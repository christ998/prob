{"ast":null,"code":"import Axios from 'axios';\nvar inMemoryToken;\nvar names;\nvar TOKEN = \"tdrToken\";\nexport var loginURL = process.env.REACT_APP_API_URL + 'session/login';\nvar refreshURL = process.env.REACT_APP_API_URL + 'session';\nvar verifyURL = process.env.REACT_APP_API_URL + 'session/verify';\nexport var getNames = function getNames() {\n  return names;\n};\nexport var setNames = function setNames(Names) {\n  names = Names;\n};\nexport var getToken = function getToken() {\n  return inMemoryToken;\n};\nexport var setToken = function setToken(token) {\n  inMemoryToken = token;\n};\nexport var getRefreshToken = function getRefreshToken() {\n  return localStorage.getItem(TOKEN);\n};\nexport var setRefreshToken = function setRefreshToken(refreshToken) {\n  localStorage.setItem(TOKEN, refreshToken);\n};\nexport var deleteTokens = function deleteTokens() {\n  inMemoryToken = null;\n  localStorage.removeItem(TOKEN);\n  names = null;\n};\nexport var refreshToken = function refreshToken() {\n  Axios.post(refreshURL, {\n    token: getToken(),\n    refreshToken: getRefreshToken(),\n    names: getNames()\n  }).then(function (res) {\n    if (!res.data.error) {\n      setTokens(res);\n    }\n  });\n};\nexport var setTokens = function setTokens(res) {\n  setToken(res.data.result.token);\n  setRefreshToken(res.data.result.refreshToken);\n  setNames(res.data.result.names);\n};\nexport var verify = function verify(reqRole) {\n  var token = getToken();\n  var error = false;\n  var role = \"\";\n\n  if (!token) {\n    error = true;\n  } else {\n    Axios.post(verifyURL, {\n      token: token\n    }).then(function (res) {\n      if (res.data.error) {\n        error = true;\n      } else {\n        role = res.data.result.role;\n      }\n    });\n  }\n\n  if (error) {\n    alert(\"Por favor, inicie sesión para continuar.\\n\" + \"Si ya inició sesión, ingrese nuevamente.\");\n    return 401;\n  } else {\n    if (role === reqRole) {\n      alert(\"Ud. no tiene permiso para acceder a este contenido.\");\n    }\n\n    return role === reqRole ? 200 : 403;\n  }\n};\nexport var initAxiosInterceptor = function initAxiosInterceptor() {\n  Axios.interceptors.request.use(function (config) {\n    var token = getToken();\n\n    if (token) {\n      config.headers.Authorization = 'Bearer ' + token;\n    }\n\n    return config;\n  });\n};","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/helpers/AuthHelper2.js"],"names":["Axios","inMemoryToken","names","TOKEN","loginURL","process","env","REACT_APP_API_URL","refreshURL","verifyURL","getNames","setNames","Names","getToken","setToken","token","getRefreshToken","localStorage","getItem","setRefreshToken","refreshToken","setItem","deleteTokens","removeItem","post","then","res","data","error","setTokens","result","verify","reqRole","role","alert","initAxiosInterceptor","interceptors","request","use","config","headers","Authorization"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\n\r\nlet inMemoryToken;\r\nlet names;\r\n\r\nconst TOKEN = \"tdrToken\";\r\nexport const loginURL = process.env.REACT_APP_API_URL + 'session/login';\r\nconst refreshURL = process.env.REACT_APP_API_URL + 'session';\r\nconst verifyURL = process.env.REACT_APP_API_URL + 'session/verify';\r\n\r\nexport const getNames = () => names;\r\nexport const setNames = (Names) => { names = Names; }\r\nexport const getToken = () => inMemoryToken;\r\nexport const setToken = (token) => { inMemoryToken = token; }\r\nexport const getRefreshToken = () => localStorage.getItem(TOKEN);\r\nexport const setRefreshToken = (refreshToken) => { localStorage.setItem(TOKEN, refreshToken); }\r\nexport const deleteTokens = () => {\r\n    inMemoryToken = null; \r\n    localStorage.removeItem(TOKEN);\r\n    names = null;\r\n}\r\nexport const refreshToken = () => {\r\n    Axios.post(refreshURL, {\r\n        token: getToken(),\r\n        refreshToken: getRefreshToken(),\r\n        names: getNames()\r\n    }).then(res => { if (!res.data.error) { setTokens(res) } });\r\n}\r\nexport const setTokens = (res) => {\r\n    setToken(res.data.result.token);\r\n    setRefreshToken(res.data.result.refreshToken);\r\n    setNames(res.data.result.names);\r\n}\r\nexport const verify = reqRole => {\r\n    let token = getToken();\r\n    let error = false;\r\n    let role = \"\";\r\n    if (!token) {\r\n        error = true;\r\n    } else {\r\n        Axios.post(verifyURL, {\r\n            token: token\r\n        }).then(res => {\r\n            if (res.data.error) {\r\n                error = true;\r\n            } else {\r\n                role = res.data.result.role;\r\n            }\r\n        });\r\n    }\r\n    if (error) {\r\n        alert(\"Por favor, inicie sesión para continuar.\\n\" +\r\n                \"Si ya inició sesión, ingrese nuevamente.\");\r\n        return 401;\r\n    } else {\r\n        if (role === reqRole) {\r\n            alert(\"Ud. no tiene permiso para acceder a este contenido.\");\r\n        }\r\n        return (role === reqRole) ? 200 : 403;\r\n    }\r\n}\r\nexport const initAxiosInterceptor = () => {\r\n    Axios.interceptors.request.use((config) => {\r\n        const token = getToken()\r\n        if (token) {\r\n            config.headers.Authorization = 'Bearer ' + token;\r\n        }\r\n        return config;\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}