{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{Button,Col,Container,Form,FormGroup,Input,InputGroup,Card,CardBody,Label,Table,Modal,ModalHeader,ModalBody,ModalFooter}from'reactstrap';import axios from'../../../helpers/axiosConfig';import{Link}from'react-router-dom';import useList from'hooks/useList';import{getList}from'helpers/ListHelper';import moment from'moment';import SimpleModal from\"../components/SimpleModal\";var ListPatient=function ListPatient(){useEffect(function(){fetchPersons();},[]);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),persons=_useState2[0],setPersons=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),currentPerson=_useState4[0],setCurrentPerson=_useState4[1];var _useState5=useState('person'),_useState6=_slicedToArray(_useState5,2),group=_useState6[0],setGroup=_useState6[1];var maritalStatus=useList(\"list/marital-status\");var livesWith=useList(\"list/lives-with\");var nativeOrigins=useList(\"list/native-origin\");var previsions=useList(\"list/prevision\");var educationLevels=useList(\"list/education-level\");var covidRisks=useList(\"list/covid-risk\");var acceptedConcents=useList(\"list/consent\");var regions=useList(\"list/region\");var towns=useList(\"list/town\");var registereds=useList(\"list/registered-by\");//SimpleModal######################################################################################################\nvar modalRef=useRef();var setModal=function setModal(options){modalRef.current.setModal(options);};//SimpleModal######################################################################################################\nvar fetchPersons=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getList(\"person/listpatient\");case 2:res=_context.sent;setPersons(res);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchPersons(){return _ref.apply(this,arguments);};}();var handleInputChange=function handleInputChange(e){setCurrentPerson(_objectSpread(_objectSpread({},currentPerson),{},{[e.target.name]:e.target.value}));};var handleInputCheckedChange=function handleInputCheckedChange(e){setCurrentPerson(_objectSpread(_objectSpread({},currentPerson),{},{[e.target.name]:e.target.checked}));};var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),displayModal=_useState8[0],setDisplayModal=_useState8[1];var showModal=function showModal(person){setGroup(\"person\");setCurrentPerson(person);setDisplayModal(!displayModal);};var changeGroup=function changeGroup(group){var form=document.getElementById('id-form-update');if(form.checkValidity()){setGroup(group);}else{document.getElementById('id-btn-save').click();};};var updatePerson=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();//alert('Funcionalidad en mantencion!!!!');\n_context2.prev=1;_context2.next=4;return axios.put(\"person\",currentPerson);case 4:res=_context2.sent;_context2.t0=res.data.result[0][0].cod;_context2.next=_context2.t0===0?8:_context2.t0===1?11:_context2.t0===2?13:15;break;case 8://window.location.reload();\nfetchPersons();setDisplayModal(!displayModal);return _context2.abrupt(\"break\",17);case 11:setModal({title:'Usuario',text:'El usuario '+currentPerson.run+' ya existe.',type:1});return _context2.abrupt(\"break\",17);case 13:setModal({title:'Usuario',text:'El usuario '+currentPerson.run+' ya existe pero esta inactivo',type:1});return _context2.abrupt(\"break\",17);case 15:setModal({title:'Error',text:'Despierte al administrador de sistemas '+res.data.result[0][0].msg,type:1});return _context2.abrupt(\"break\",17);case 17:;_context2.next=23;break;case 20:_context2.prev=20;_context2.t1=_context2[\"catch\"](1);console.log('Err: '+_context2.t1);case 23:;case 24:case\"end\":return _context2.stop();}}},_callee2,null,[[1,20]]);}));return function updatePerson(_x){return _ref2.apply(this,arguments);};}();var updateStatePerson=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(run){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.put(\"person/\"+run);case 2:res=_context3.sent;if(!res.data.error){fetchPersons();};case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function updateStatePerson(_x2){return _ref3.apply(this,arguments);};}();var reqTag=/*#__PURE__*/React.createElement(\"span\",{style:{color:\"#DC3545\"}},\"*\");return/*#__PURE__*/React.createElement(Container,{className:\"mt-3\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Listado de pacientes\"),/*#__PURE__*/React.createElement(Table,{className:\"align-items-center\",responsive:true},/*#__PURE__*/React.createElement(\"thead\",{className:\"thead-light\"},/*#__PURE__*/React.createElement(\"tr\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"N\\xB0\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Nombre\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Apellido\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Run\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"}),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"}),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"}))),/*#__PURE__*/React.createElement(\"tbody\",null,persons.map(function(person,i){return/*#__PURE__*/React.createElement(\"tr\",{className:\"text-center\",key:person.person_id},/*#__PURE__*/React.createElement(\"td\",null,i+1),/*#__PURE__*/React.createElement(\"td\",null,person.names),/*#__PURE__*/React.createElement(\"td\",null,person.lastnames),/*#__PURE__*/React.createElement(\"td\",null,person.run),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:function onClick(){return showModal(person);}},\"Editar\"),/*#__PURE__*/React.createElement(Modal,{size:\"lg\",isOpen:displayModal},/*#__PURE__*/React.createElement(Form,{id:\"id-form-update\",role:\"form\",onSubmit:function onSubmit(e){return updatePerson(e);}},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){setDisplayModal(!displayModal);}},/*#__PURE__*/React.createElement(\"a\",{style:_objectSpread({paddingRight:\"15px\",cursor:\"pointer\"},group==='person'?{color:\"#11cdef\"}:{}),onClick:function onClick(){return changeGroup('person');}},\"Paciente\"),/*#__PURE__*/React.createElement(\"a\",{style:_objectSpread({paddingRight:\"15px\",cursor:\"pointer\"},group==='carer'?{color:\"#11cdef\"}:{}),onClick:function onClick(){return changeGroup('carer');}},\"Cuidador\"),/*#__PURE__*/React.createElement(\"a\",{style:_objectSpread({paddingRight:\"15px\",cursor:\"pointer\"},group==='motive'?{color:\"#11cdef\"}:{}),onClick:function onClick(){return changeGroup('motive');}},\"Motivo consulta\"),/*#__PURE__*/React.createElement(\"a\",{style:_objectSpread({paddingRight:\"15px\",cursor:\"pointer\"},group==='sociodemo'?{color:\"#11cdef\"}:{}),onClick:function onClick(){return changeGroup('sociodemo');}},\"Sociodemogr\\xE1ficos\"),/*#__PURE__*/React.createElement(\"a\",{style:_objectSpread({paddingRight:\"15px\",cursor:\"pointer\"},group==='consent'?{color:\"#11cdef\"}:{}),onClick:function onClick(){return changeGroup('consent');}},\"Consentimiento\"),/*#__PURE__*/React.createElement(\"a\",{style:_objectSpread({paddingRight:\"15px\",cursor:\"pointer\"},group==='covid'?{color:\"#11cdef\"}:{}),onClick:function onClick(){return changeGroup('covid');}},\"Covid\")),/*#__PURE__*/React.createElement(ModalBody,{className:\"pt-1\"},group==='person'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h5\",{style:{color:\"#DC3545\"}},\"* Existen campos obligatorios\"),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Nombres \",reqTag),/*#__PURE__*/React.createElement(Input,{required:true,autoComplete:\"off\",type:\"text\",value:currentPerson.names,name:\"names\",onChange:function onChange(e){handleInputChange(e);}}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Apellidos \",reqTag),/*#__PURE__*/React.createElement(Input,{required:true,autoComplete:\"off\",type:\"text\",value:currentPerson.lastnames,name:\"lastnames\",onChange:function onChange(e){handleInputChange(e);}}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"N\\xFAmero de Identidad \",reqTag),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{required:true,autoComplete:\"off\",type:\"text\",value:currentPerson.run,name:\"run\",onChange:function onChange(e){handleInputChange(e);}})),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Fecha de nacimiento \",reqTag),/*#__PURE__*/React.createElement(Input,{required:true,type:\"date\",value:moment(currentPerson.birthdate).format('YYYY-MM-DD'),name:\"birthdate\",onChange:function onChange(e){handleInputChange(e);}}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Direcci\\xF3n\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",maxLength:\"250\",autoComplete:\"off\",placeholder:\"Direcci\\xF3n\",name:\"address\",value:currentPerson.address,onChange:function onChange(e){handleInputChange(e);}}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Region \",reqTag),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"region_id\",required:true,value:currentPerson.region_id,onChange:function onChange(e){return handleInputChange(e);}},/*#__PURE__*/React.createElement(\"option\",{hidden:true,value:\"\"},\"Seleccione...\"),regions.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.region_id,value:e.region_id},e.name);}))),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Comuna de procedencia \",reqTag),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"town_id\",required:true,value:currentPerson.town_id,onChange:function onChange(e){return handleInputChange(e);}},/*#__PURE__*/React.createElement(\"option\",{hidden:true,value:\"\"},\"Seleccione...\"),towns.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.town_id,value:e.town_id},e.name);})),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Enrolado por \",reqTag),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"registered_by_id\",required:true,value:currentPerson.registered_by_id,onChange:function onChange(e){return handleInputChange(e);}},/*#__PURE__*/React.createElement(\"option\",{hidden:true,value:\"\"},\"Seleccione...\"),registereds.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.registered_by_id,value:e.registered_by_id},e.name);})),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Tel\\xE9fono fijo\"),/*#__PURE__*/React.createElement(Input,{type:\"tel\",autoComplete:\"off\",value:currentPerson.phone,name:\"phone\",onChange:function onChange(e){handleInputChange(e);}}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Tel\\xE9fono celular\"),/*#__PURE__*/React.createElement(Input,{type:\"tel\",autoComplete:\"off\",value:currentPerson.cellphone,name:\"cellphone\",onChange:function onChange(e){handleInputChange(e);}}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Email\"),/*#__PURE__*/React.createElement(Input,{name:\"email\",autoComplete:\"off\",value:currentPerson.email,type:\"email\",onChange:function onChange(e){handleInputChange(e);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Col,{className:\"d-flex p-0\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"\\xBFPaciente esta pensionado?\"),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-toggle custom-toggle-warning ml-3\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",name:\"is_retired\",checked:currentPerson.is_retired,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"span\",{className:\"custom-toggle-slider rounded-circle\",\"data-label-off\":\"No\",\"data-label-on\":\"S\\xED\"})))))),group==='carer'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Nombres\"),/*#__PURE__*/React.createElement(Input,{name:\"carer_names\",autoComplete:\"off\",type:\"text\",onChange:function onChange(e){handleInputChange(e);},value:currentPerson.carer_names}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Apellidos\"),/*#__PURE__*/React.createElement(Input,{name:\"carer_lastnames\",autoComplete:\"off\",type:\"text\",onChange:function onChange(e){handleInputChange(e);},value:currentPerson.carer_lastnames}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Comuna de procedencia\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"carer_town_id\",required:true,value:currentPerson.carer_town_id,onChange:function onChange(e){return handleInputChange(e);}},/*#__PURE__*/React.createElement(\"option\",{hidden:true,value:\"\"},\"Seleccione...\"),towns.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.town_id,value:e.town_id},e.name);}))),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Tel\\xE9fono fijo\"),/*#__PURE__*/React.createElement(Input,{name:\"carer_phone\",autoComplete:\"off\",type:\"tel\",onChange:function onChange(e){handleInputChange(e);},value:currentPerson.carer_phone}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Tel\\xE9fono celular\"),/*#__PURE__*/React.createElement(Input,{name:\"carer_cellphone\",autoComplete:\"off\",type:\"tel\",onChange:function onChange(e){handleInputChange(e);},value:currentPerson.carer_cellphone}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Email\"),/*#__PURE__*/React.createElement(Input,{type:\"email\",autoComplete:\"off\",name:\"carer_email\",value:currentPerson.carer_email,onChange:function onChange(e){handleInputChange(e);}})))),group==='motive'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{className:\"d-flex\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"\\xBFUrgencia dental?\"),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-toggle custom-toggle-warning ml-3 mt-3\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",name:\"urgency\",checked:currentPerson.urgency,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"span\",{className:\"custom-toggle-slider rounded-circle\",\"data-label-off\":\"No\",\"data-label-on\":\"S\\xED\"})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Motivo\"),/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox custom-checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",id:\"pain\",name:\"pain\",className:\"custom-control-input\",checked:currentPerson.pain,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:\"pain\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Dolor severo de causa dentaria\"),\", que no ceda a analg\\xE9sicos.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox custom-checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",id:\"cavities\",name:\"cavities\",className:\"custom-control-input\",checked:currentPerson.cavities,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:\"cavities\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Manchas o heridas en cualquier parte de la boca\"),\" que no desaparecen en 1 mes.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox custom-checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",id:\"wounds\",name:\"wounds\",className:\"custom-control-input\",checked:currentPerson.wounds,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:\"wounds\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Lesiones en mucosa/enc\\xEDa\"),\", debido a desajuste de pr\\xF3tesis dental.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox custom-checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",id:\"bleeding\",name:\"bleeding\",className:\"custom-control-input\",checked:currentPerson.bleeding,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:\"bleeding\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Hemorragia bucal.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox custom-checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",id:\"fracture\",name:\"fracture\",className:\"custom-control-input\",checked:currentPerson.fracture,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:\"fracture\"},/*#__PURE__*/React.createElement(\"strong\",null,\"P\\xE9rdida o fractura de restauraciones\"),\" (tapaduras) o \",/*#__PURE__*/React.createElement(\"strong\",null,\"pr\\xF3tesis dentales.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox custom-checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",id:\"trauma\",name:\"trauma\",className:\"custom-control-input\",checked:currentPerson.trauma,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:\"trauma\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Trauma reciente.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox custom-checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",id:\"swelling\",name:\"swelling\",className:\"custom-control-input\",checked:currentPerson.swelling,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:\"swelling\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Hinchaz\\xF3n importante de boca\"),\", cara o cuello.\")),/*#__PURE__*/React.createElement(\"div\",{className:\"custom-control custom-checkbox custom-checkbox-primary\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",id:\"treatment\",name:\"treatment\",className:\"custom-control-input\",checked:currentPerson.treatment,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-control-label\",htmlFor:\"treatment\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Tratamiento dental requerido previo a procedimientos m\\xE9dicos\"),\" cr\\xEDticos impostergables.\")))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Otro\"),/*#__PURE__*/React.createElement(Input,{name:\"other\",maxLength:\"250\",autoComplete:\"off\",type:\"textarea\",onChange:function onChange(e){handleInputChange(e);},value:currentPerson.other}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\",htmlFor:\"exampleFormControlSelect3\"},\"Encuesta OHIP-14Sp (\",/*#__PURE__*/React.createElement(\"a\",{href:\"https://docs.google.com/forms/d/e/1FAIpQLSetI2HQMrH1lhqeQBUZT1ks2KKpxrhIpL-ceOm3jYEyIY_gwQ/viewform\",target:\"_blank\"},\"ver\"),\")\"),/*#__PURE__*/React.createElement(Input,{max:\"9999\",min:\"-9999\",value:currentPerson.ohip14sp_result,name:\"ohip14sp_result\",type:\"number\",onChange:function onChange(e){handleInputChange(e);}})),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\",htmlFor:\"exampleFormControlSelect3\"},\"\\xCDndice de Barthel (\",/*#__PURE__*/React.createElement(\"a\",{href:\"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\",target:\"_blank\"},\"ver\"),\")\"),/*#__PURE__*/React.createElement(Input,{max:\"9999\",min:\"-9999\",value:currentPerson.dependency_level,name:\"dependency_level\",type:\"number\",onChange:function onChange(e){handleInputChange(e);}})))),group==='sociodemo'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Ocupacion\"),/*#__PURE__*/React.createElement(Input,{name:\"occupation\",autoComplete:\"off\",type:\"text\",onChange:function onChange(e){handleInputChange(e);},value:currentPerson.occupation}),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Previsi\\xF3n\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"prevision_id\",value:currentPerson.prevision_id,onChange:function onChange(e){return handleInputChange(e);}},previsions.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.prevision_id,value:e.prevision_id},e.name);})),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Estado conyugal\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"marital_status_id\",value:currentPerson.marital_status_id,onChange:function onChange(e){return handleInputChange(e);}},maritalStatus.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.marital_status_id,value:e.marital_status_id},e.name);})),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Comuna de nacimiento\"),/*#__PURE__*/React.createElement(Input,{name:\"birth_commune\",autoComplete:\"off\",type:\"text\",onChange:function onChange(e){handleInputChange(e);},value:currentPerson.birth_commune})),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Pueblo Originario\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"native_origin_id\",value:currentPerson.native_origin_id,onChange:function onChange(e){return handleInputChange(e);}},nativeOrigins.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.native_origin_id,value:e.native_origin_id},e.name);})),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Nivel educacional\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"educational_level_id\",value:currentPerson.educational_level_id,onChange:function onChange(e){return handleInputChange(e);}},educationLevels.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.educational_level_id,value:e.educational_level_id},e.name);})),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Red familiar\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"lives_with_id\",value:currentPerson.lives_with_id,onChange:function onChange(e){return handleInputChange(e);}},livesWith.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.lives_with_id,value:e.lives_with_id},e.name);}))))),group==='consent'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{className:\"d-flex\"},/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"\\xBFLeyo el consentimiento?\"),/*#__PURE__*/React.createElement(\"label\",{className:\"custom-toggle custom-toggle-warning ml-3 mt-3\"},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",name:\"consent_read\",checked:currentPerson.consent_read,onChange:function onChange(e){handleInputCheckedChange(e);}}),/*#__PURE__*/React.createElement(\"span\",{className:\"custom-toggle-slider rounded-circle\",\"data-label-off\":\"No\",\"data-label-on\":\"S\\xED\"})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"\\xBFAcepta el consentimiento? (\",/*#__PURE__*/React.createElement(\"a\",{href:\"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\",target:\"_blank\"},\"ver\"),\")\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"informed_consent_answer_id\",value:currentPerson.informed_consent_answer_id,onChange:function onChange(e){return handleInputChange(e);}},acceptedConcents.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.informed_consent_answer_id,value:e.informed_consent_answer_id},e.answer);})),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Observaciones\"),/*#__PURE__*/React.createElement(Input,{name:\"observations\",autoComplete:\"off\",maxLength:\"250\",type:\"textarea\",onChange:function onChange(e){handleInputChange(e);},value:currentPerson.observations})))),group==='covid'&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Encuesta caso COVID (\",/*#__PURE__*/React.createElement(\"a\",{href:\"https://docs.google.com/forms/d/e/1FAIpQLSf7GsvK4AVlSlzQ8dFXcouJeNhKWzbHkjU78WTD7p92gNUpYg/viewform\",target:\"_blank\"},\"ver\"),\")\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"covid19_risk_id\",value:currentPerson.covid19_risk_id,onChange:function onChange(e){return handleInputChange(e);}},covidRisks.map(function(e){return/*#__PURE__*/React.createElement(\"option\",{key:e.covid19_risk_id,value:e.covid19_risk_id},e.covid_risk);})),/*#__PURE__*/React.createElement(Label,{className:\"form-control-label pt-3\"},\"Temperatura\"),/*#__PURE__*/React.createElement(Input,{step:\"0.1\",name:\"temperature\",type:\"number\",onChange:function onChange(e){handleInputChange(e);},value:currentPerson.temperature})))),/*#__PURE__*/React.createElement(\"div\",{className:\"float-right mb-4 mr-2\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",id:\"id-btn-save\",color:\"primary\"},\"Guardar\"),' ',/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){setDisplayModal(!displayModal);},color:\"secondary\"},\"Cancelar\")))))),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{color:\"primary\"},/*#__PURE__*/React.createElement(Link,{style:{color:\"white\"},to:{pathname:\"/admin/covid-risk-reception\",state:{id:person.person_id,run:person.run,name:person.names,apellido:person.lastnames}}},\"Recepcionar\"))),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(SimpleModal,{ref:modalRef}),/*#__PURE__*/React.createElement(Button,{color:\"danger\",size:\"sm\",onClick:function onClick(){return setModal({title:'Paciente',text:'Desea eliminar al paciente '+person.run+'?',type:2,fx:function fx(){return updateStatePerson(person.run);}});}},/*#__PURE__*/React.createElement(\"i\",{className:\"far fa-trash-alt\"}))));}))))));};export default ListPatient;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/views/pages/patient/list-patient.js"],"names":["React","useState","useEffect","useRef","Button","Col","Container","Form","FormGroup","Input","InputGroup","Card","CardBody","Label","Table","Modal","ModalHeader","ModalBody","ModalFooter","axios","Link","useList","getList","moment","SimpleModal","ListPatient","fetchPersons","persons","setPersons","currentPerson","setCurrentPerson","group","setGroup","maritalStatus","livesWith","nativeOrigins","previsions","educationLevels","covidRisks","acceptedConcents","regions","towns","registereds","modalRef","setModal","options","current","res","handleInputChange","e","target","name","value","handleInputCheckedChange","checked","displayModal","setDisplayModal","showModal","person","changeGroup","form","document","getElementById","checkValidity","click","updatePerson","preventDefault","put","data","result","cod","title","text","run","type","msg","console","log","updateStatePerson","error","reqTag","color","map","i","person_id","names","lastnames","paddingRight","cursor","birthdate","format","address","region_id","town_id","registered_by_id","phone","cellphone","email","is_retired","carer_names","carer_lastnames","carer_town_id","carer_phone","carer_cellphone","carer_email","urgency","pain","cavities","wounds","bleeding","fracture","trauma","swelling","treatment","other","ohip14sp_result","dependency_level","occupation","prevision_id","marital_status_id","birth_commune","native_origin_id","educational_level_id","lives_with_id","consent_read","informed_consent_answer_id","answer","observations","covid19_risk_id","covid_risk","temperature","pathname","state","id","apellido","fx"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport {Button, Col, Container, Form, FormGroup, Input, InputGroup,Card, CardBody, Label, Table, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap'\r\nimport axios from '../../../helpers/axiosConfig'\r\nimport {Link} from 'react-router-dom';\r\nimport useList from 'hooks/useList';\r\nimport {getList} from 'helpers/ListHelper'; \r\nimport moment from 'moment';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst ListPatient = () => {\r\n    useEffect(() => {fetchPersons()}, []);  \r\n    const [persons, setPersons] = useState([]);\r\n    const [currentPerson, setCurrentPerson] = useState({});\r\n    const [group, setGroup] = useState('person');\r\n    const maritalStatus = useList(\"list/marital-status\");\r\n    const livesWith = useList(\"list/lives-with\");\r\n    const nativeOrigins = useList(\"list/native-origin\");\r\n    const previsions = useList(\"list/prevision\");\r\n    const educationLevels = useList(\"list/education-level\");\r\n    const covidRisks = useList(\"list/covid-risk\");\r\n    const acceptedConcents = useList(\"list/consent\");\r\n    const regions = useList(\"list/region\");\r\n    const towns = useList(\"list/town\");\r\n    const registereds = useList(\"list/registered-by\") \r\n\r\n    //SimpleModal######################################################################################################\r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options)\r\n    };\r\n    //SimpleModal######################################################################################################\r\n    \r\n    const fetchPersons = async () => {\r\n        const res = await getList(\"person/listpatient\");\r\n        setPersons(res);\r\n    };  \r\n    \r\n    const handleInputChange = e => {\r\n        setCurrentPerson({\r\n            ...currentPerson,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputCheckedChange = e => {\r\n        setCurrentPerson({\r\n            ...currentPerson,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const showModal = (person) => {\r\n        setGroup(\"person\");\r\n        setCurrentPerson(person);\r\n        setDisplayModal(!displayModal);\r\n    }\r\n\r\n    const changeGroup = (group) => {\r\n        var form = document.getElementById('id-form-update');\r\n        if(form.checkValidity()) {\r\n            setGroup(group);\r\n        } else {\r\n            document.getElementById('id-btn-save').click();\r\n        };\r\n    };\r\n\r\n    const updatePerson = async e => {\r\n        e.preventDefault();\r\n        //alert('Funcionalidad en mantencion!!!!');\r\n        try {\r\n            const res = await axios.put(\"person\", currentPerson);\r\n            switch(res.data.result[0][0].cod) {\r\n                case 0: \r\n                    //window.location.reload();\r\n                    fetchPersons();\r\n                    setDisplayModal(!displayModal);\r\n                    break;\r\n                case 1: \r\n                    setModal({title: 'Usuario', text : 'El usuario ' + currentPerson.run + ' ya existe.', type: 1});\r\n                    break;\r\n                case 2:\r\n                    setModal({title: 'Usuario', text : 'El usuario ' + currentPerson.run + ' ya existe pero esta inactivo', type: 1});\r\n                    break;\r\n                default:\r\n                    setModal({title: 'Error', text : 'Despierte al administrador de sistemas ' + res.data.result[0][0].msg, type: 1});\r\n                    break;\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const updateStatePerson = async run => {\r\n        const res = await axios.put(\"person/\" + run);\r\n        if (!res.data.error) {\r\n            fetchPersons();\r\n        };\r\n    };\r\n\r\n    const reqTag = <span style={{color: \"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Card>\r\n                <CardBody>\r\n                    <h1>Listado de pacientes</h1>\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                            <tr className=\"text-center\">\r\n                                <th scope=\"col\">N°</th>\r\n                                <th scope=\"col\">Nombre</th>\r\n                                <th scope=\"col\">Apellido</th>\r\n                                <th scope=\"col\">Run</th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           {persons.map(\r\n                                (person, i) =>\r\n                                    <tr className=\"text-center\" key={person.person_id}>\r\n                                        <td>{i + 1}</td>\r\n                                        <td>{person.names}</td>\r\n                                        <td>{person.lastnames}</td>\r\n                                        <td>{person.run}</td>\r\n                                        <td>\r\n                                            <Button color=\"primary\" onClick={() => showModal(person)}>Editar</Button>\r\n                                            <Modal size=\"lg\" isOpen={displayModal}>\r\n                                                <Form id=\"id-form-update\" role=\"form\" onSubmit={e => updatePerson(e)}>\r\n                                                    <ModalHeader toggle={() => {setDisplayModal(!displayModal)}}>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'person' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('person')}>Paciente</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'carer' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('carer')}>Cuidador</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'motive' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('motive')}>Motivo consulta</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'sociodemo' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('sociodemo')}>Sociodemográficos</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'consent' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('consent')}>Consentimiento</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'covid' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('covid')}>Covid</a>\r\n                                                    </ModalHeader>\r\n                                                    <ModalBody className=\"pt-1\">\r\n                                                        {group === 'person' && <>\r\n                                                            <h5 style={{color: \"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Nombres {reqTag}</Label>\r\n                                                                    <Input\r\n                                                                        required autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        value={currentPerson.names}\r\n                                                                        name=\"names\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Apellidos {reqTag}</Label>\r\n                                                                    <Input\r\n                                                                        required autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        value={currentPerson.lastnames}\r\n                                                                        name=\"lastnames\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Número de Identidad {reqTag}</Label>\r\n                                                                    <InputGroup>\r\n                                                                        <Input\r\n                                                                            required autoComplete=\"off\"\r\n                                                                            type=\"text\"\r\n                                                                            value={currentPerson.run}\r\n                                                                            name=\"run\"\r\n                                                                            onChange={e => {handleInputChange(e)}}\r\n                                                                        />\r\n                                                                    </InputGroup>\r\n                                                                    <Label className=\"form-control-label pt-3\">Fecha de nacimiento {reqTag}</Label>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        type=\"date\"\r\n                                                                        value={moment(currentPerson.birthdate).format('YYYY-MM-DD')}\r\n                                                                        name=\"birthdate\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Dirección</Label>\r\n                                                                    <Input\r\n                                                                        type=\"text\" maxLength=\"250\" autoComplete=\"off\"\r\n                                                                        placeholder=\"Dirección\"\r\n                                                                        name=\"address\"\r\n                                                                        value={currentPerson.address}\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Region {reqTag}</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"region_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.region_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {regions.map(e => (<option key={e.region_id} value={e.region_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Comuna de procedencia {reqTag}</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"town_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.town_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {towns.map(e => (<option key={e.town_id} value={e.town_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Enrolado por {reqTag}</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"registered_by_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.registered_by_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {registereds.map(e => (<option key={e.registered_by_id} value={e.registered_by_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono fijo</Label>\r\n                                                                    <Input\r\n                                                                        type=\"tel\" autoComplete=\"off\"\r\n                                                                        value={currentPerson.phone}\r\n                                                                        name=\"phone\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono celular</Label>\r\n                                                                    <Input\r\n                                                                        type=\"tel\" autoComplete=\"off\"\r\n                                                                        value={currentPerson.cellphone}\r\n                                                                        name=\"cellphone\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Email</Label>\r\n                                                                    <Input\r\n                                                                        name=\"email\" autoComplete=\"off\"\r\n                                                                        value={currentPerson.email}\r\n                                                                        type=\"email\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <br/><br/>\r\n                                                                    <Col className=\"d-flex p-0\">\r\n                                                                        <Label className=\"form-control-label\">¿Paciente esta pensionado?</Label>\r\n                                                                        <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                                                            <Input \r\n                                                                                type=\"checkbox\"\r\n                                                                                name=\"is_retired\"\r\n                                                                                checked={currentPerson.is_retired}\r\n                                                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                            />\r\n                                                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                                        </label>\r\n                                                                    </Col>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'carer' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Nombres</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_names\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_names}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Apellidos</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_lastnames\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_lastnames}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Comuna de procedencia</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"carer_town_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.carer_town_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {towns.map(e => (<option key={e.town_id} value={e.town_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono fijo</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_phone\" autoComplete=\"off\"\r\n                                                                        type=\"tel\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_phone}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono celular</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_cellphone\" autoComplete=\"off\"\r\n                                                                        type=\"tel\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_cellphone}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Email</Label>\r\n                                                                    <Input\r\n                                                                        type=\"email\" autoComplete=\"off\"\r\n                                                                        name=\"carer_email\"\r\n                                                                        value={currentPerson.carer_email}\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'motive' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col className=\"d-flex\">\r\n                                                                        <Label className=\"form-control-label pt-3\">¿Urgencia dental?</Label>\r\n                                                                        <label className=\"custom-toggle custom-toggle-warning ml-3 mt-3\">\r\n                                                                            <Input \r\n                                                                                type=\"checkbox\"\r\n                                                                                name=\"urgency\"\r\n                                                                                checked={currentPerson.urgency}\r\n                                                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                            />\r\n                                                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                                        </label>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label\">Motivo</Label>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"pain\"   \r\n                                                                            name=\"pain\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.pain}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"pain\"><strong>Dolor severo de causa dentaria</strong>, que no ceda a analgésicos.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"cavities\"  \r\n                                                                            name=\"cavities\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.cavities}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"cavities\"><strong>Manchas o heridas en cualquier parte de la boca</strong> que no desaparecen en 1 mes.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"wounds\"  \r\n                                                                            name=\"wounds\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.wounds}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"wounds\"><strong>Lesiones en mucosa/encía</strong>, debido a desajuste de prótesis dental.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"bleeding\"   \r\n                                                                            name=\"bleeding\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.bleeding}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"bleeding\"><strong>Hemorragia bucal.</strong></label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"fracture\"   \r\n                                                                            name=\"fracture\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.fracture}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"fracture\"><strong>Pérdida o fractura de restauraciones</strong> (tapaduras) o <strong>prótesis dentales.</strong></label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"trauma\"   \r\n                                                                            name=\"trauma\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.trauma}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"trauma\"><strong>Trauma reciente.</strong></label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"swelling\"   \r\n                                                                            name=\"swelling\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.swelling}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"swelling\"><strong>Hinchazón importante de boca</strong>, cara o cuello.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"treatment\"   \r\n                                                                            name=\"treatment\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.treatment}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"treatment\"><strong>Tratamiento dental requerido previo a procedimientos médicos</strong> críticos impostergables.</label>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label\">Otro</Label>\r\n                                                                    <Input\r\n                                                                        name=\"other\" maxLength=\"250\" autoComplete=\"off\"\r\n                                                                        type=\"textarea\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.other}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <br/>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\">\r\n                                                                        Encuesta OHIP-14Sp (\r\n                                                                            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSetI2HQMrH1lhqeQBUZT1ks2KKpxrhIpL-ceOm3jYEyIY_gwQ/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        max=\"9999\" min=\"-9999\"\r\n                                                                        value={currentPerson.ohip14sp_result}\r\n                                                                        name=\"ohip14sp_result\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\">\r\n                                                                        Índice de Barthel (\r\n                                                                            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        max=\"9999\" min=\"-9999\"\r\n                                                                        value={currentPerson.dependency_level}\r\n                                                                        name=\"dependency_level\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n\r\n                                                        </>}\r\n                                                        {group === 'sociodemo' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Ocupacion</Label>\r\n                                                                    <Input\r\n                                                                        name=\"occupation\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.occupation}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Previsión</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"prevision_id\"\r\n                                                                        value={currentPerson.prevision_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {previsions.map(e=> (<option key={e.prevision_id} value={e.prevision_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Estado conyugal</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"marital_status_id\"\r\n                                                                        value={currentPerson.marital_status_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {maritalStatus.map(e=> (<option key={e.marital_status_id} value={e.marital_status_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Comuna de nacimiento</Label>\r\n                                                                    <Input\r\n                                                                        name=\"birth_commune\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.birth_commune}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Pueblo Originario</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"native_origin_id\"\r\n                                                                        value={currentPerson.native_origin_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {nativeOrigins.map(e=> (<option key={e.native_origin_id} value={e.native_origin_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Nivel educacional</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"educational_level_id\"\r\n                                                                        value={currentPerson.educational_level_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {educationLevels.map(e=> (<option key={e.educational_level_id} value={e.educational_level_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Red familiar</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"lives_with_id\"\r\n                                                                        value={currentPerson.lives_with_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {livesWith.map(e=> (<option key={e.lives_with_id} value={e.lives_with_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'consent' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col className=\"d-flex\">\r\n                                                                    <Label className=\"form-control-label pt-3\">¿Leyo el consentimiento?</Label>\r\n                                                                    <label className=\"custom-toggle custom-toggle-warning ml-3 mt-3\">\r\n                                                                        <Input \r\n                                                                            type=\"checkbox\"\r\n                                                                            name=\"consent_read\"\r\n                                                                            checked={currentPerson.consent_read}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                                    </label>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label pt-3\">¿Acepta el consentimiento? (\r\n                                                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"informed_consent_answer_id\"\r\n                                                                        value={currentPerson.informed_consent_answer_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {acceptedConcents.map(e=> (<option key={e.informed_consent_answer_id} value={e.informed_consent_answer_id}>{e.answer}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Observaciones</Label>\r\n                                                                    <Input\r\n                                                                        name=\"observations\" autoComplete=\"off\" maxLength=\"250\"\r\n                                                                        type=\"textarea\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.observations}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'covid' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label pt-3\">Encuesta caso COVID (\r\n                                                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSf7GsvK4AVlSlzQ8dFXcouJeNhKWzbHkjU78WTD7p92gNUpYg/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"covid19_risk_id\"\r\n                                                                        value={currentPerson.covid19_risk_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {covidRisks.map(e=> (<option key={e.covid19_risk_id} value={e.covid19_risk_id}>{e.covid_risk}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Temperatura</Label>\r\n                                                                    <Input\r\n                                                                        step=\"0.1\"\r\n                                                                        name=\"temperature\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.temperature}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        <div className= \"float-right mb-4 mr-2\">\r\n                                                            <Button type=\"submit\" id=\"id-btn-save\" color=\"primary\">Guardar</Button>{' '}\r\n                                                            <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Cancelar</Button>\r\n                                                        </div>\r\n                                                    </ModalBody>\r\n                                                </Form>\r\n                                            </Modal>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button color=\"primary\">\r\n                                                <Link \r\n                                                    style={{color: \"white\"}} \r\n                                                    to={{\r\n                                                        pathname: \"/admin/covid-risk-reception\",\r\n                                                        state: {id: person.person_id, run: person.run, name: person.names, apellido: person.lastnames}\r\n                                                    }}>Recepcionar\r\n                                                </Link>                \r\n                                            </Button>\r\n                                        </td> \r\n                                        <td>\r\n                                            <SimpleModal ref={modalRef}/>\r\n                                            <Button color=\"danger\" size=\"sm\" onClick={() => setModal({title: 'Paciente', text: 'Desea eliminar al paciente ' + person.run + '?', type: 2, fx: () => updateStatePerson(person.run)})}>\r\n                                                <i className=\"far fa-trash-alt\"></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                        </tbody>\r\n                    </Table>\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ListPatient;"]},"metadata":{},"sourceType":"module"}