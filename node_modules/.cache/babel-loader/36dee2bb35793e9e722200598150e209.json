{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\src\\\\views\\\\pages\\\\patient\\\\general-anamnesis-u.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Col, Container, Form, FormGroup, Input, Card, CardBody, ModalHeader, Label } from 'reactstrap';\nimport axios from '../../../helpers/axiosConfig';\nimport { getList } from 'helpers/ListHelper';\nimport useList from 'hooks/useList';\n\nvar GeneralAnamnesis = function GeneralAnamnesis(_ref) {\n  var location = _ref.location;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      has = _useState2[0],\n      setHas = _useState2[1]; //LOCATION###############################################################\n\n\n  useEffect(function () {\n    var _location$state;\n\n    if (!(location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.id)) {\n      //location.state.id = 11;\n      fetchLastGeneral(0);\n    } else {\n      fetchLastGeneral(location.state.id);\n    }\n\n    ;\n  }, []); //GENERAL###############################################################\n\n  var defaultGeneral = {\n    general_anamnesis_id: 0,\n    person_id: 0,\n    allergies: \"\",\n    other_disease: \"\",\n    under_treatment: 0,\n    previous_surgeries: \"\",\n    medicine_dose: \"\",\n    medicine_allergies: \"\",\n    radio_chemo_therapy: \"\",\n    consult_motive: \"\",\n    consult_motive_history: \"\",\n    medic_alert: \"\"\n  };\n\n  var _useState3 = useState(defaultGeneral),\n      _useState4 = _slicedToArray(_useState3, 2),\n      general = _useState4[0],\n      setGeneral = _useState4[1];\n\n  var fetchLastGeneral = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(person_id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getList(\"general-anamnesis/\" + person_id);\n\n            case 2:\n              res = _context.sent;\n\n              if (res.length === 1) {\n                setGeneral(res[0]);\n                fetchDiseases(res[0].general_anamnesis_id);\n                setHas(true);\n              }\n\n              ;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchLastGeneral(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleInputChange = function handleInputChange(e) {\n    setGeneral(_objectSpread(_objectSpread({}, general), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  var handleInputCheckedChange = function handleInputCheckedChange(e) {\n    setGeneral(_objectSpread(_objectSpread({}, general), {}, {\n      [e.target.name]: e.target.checked\n    }));\n  };\n\n  var handleCurrentDiseases = function handleCurrentDiseases(e) {\n    setDiseases(_objectSpread(_objectSpread({}, diseases), {}, {\n      [e.target.name]: e.target.checked\n    }));\n  }; //DISEASES##############################################################\n\n\n  var prmDiseases = useList(\"list/diseases\");\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      diseases = _useState6[0],\n      setDiseases = _useState6[1];\n\n  var fetchDiseases = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(general_anamnesis_id) {\n      var obj, res, i;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              obj = {};\n              _context2.next = 3;\n              return getList(\"general-anamnesis/crud/\" + general_anamnesis_id);\n\n            case 3:\n              res = _context2.sent;\n\n              for (i = 0; i < res.length; i++) {\n                obj[res[i]['disease_id']] = res[i]['has_disease'];\n              }\n\n              setDiseases(obj);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function fetchDiseases(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //CRUD##################################################################\n\n\n  var saveChanges = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var d, i, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              d = [];\n\n              for (i in diseases) {\n                if (diseases[i]) {\n                  d.push(i);\n                }\n\n                ;\n              }\n\n              ;\n              _context3.prev = 4;\n              _context3.next = 7;\n              return axios.post(\"general-anamnesis/crud\", _objectSpread(_objectSpread({}, general), {}, {\n                d\n              }));\n\n            case 7:\n              res = _context3.sent;\n\n              if (!res.data.error) {\n                console.log('Cambios guardados correctamente!');\n              } else {\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\n              }\n\n              ;\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](4);\n              console.log('Err: ' + _context3.t0);\n\n            case 15:\n              ;\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[4, 12]]);\n    }));\n\n    return function saveChanges(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); //GROUP#################################################################\n\n\n  var _useState7 = useState('motive'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      group = _useState8[0],\n      setGroup = _useState8[1]; //JSX##################################################################\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Anamnesis general\"), !has ? /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"El paciente no tiene registros en Anamnesis general.\")) : /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pb-0 pt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"pb-5 pl-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: _objectSpread({\n      paddingRight: \"15px\",\n      cursor: \"pointer\"\n    }, group === 'motive' ? {\n      color: \"#11cdef\"\n    } : {}),\n    onClick: function onClick() {\n      return setGroup('motive');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, \"Motivo de consulta\"), /*#__PURE__*/React.createElement(\"a\", {\n    style: _objectSpread({\n      paddingRight: \"15px\",\n      cursor: \"pointer\"\n    }, group === 'background' ? {\n      color: \"#11cdef\"\n    } : {}),\n    onClick: function onClick() {\n      return setGroup('background');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, \"Antecedentes m\\xF3rbidos personales\")), /*#__PURE__*/React.createElement(Form, {\n    id: \"id-form-update\",\n    onSubmit: function onSubmit(e) {\n      return saveChanges(e);\n    },\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, group === 'motive' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 45\n    }\n  }, \"Motivo Consulta\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    type: \"text\",\n    name: \"consult_motive\",\n    value: general.consult_motive,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 45\n    }\n  }, \"Historial del motivo de Consulta\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    type: \"text\",\n    name: \"consult_motive_history\",\n    value: general.consult_motive_history,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 45\n    }\n  }, \"Alerta m\\xE9dica especial y comentarios relevantes sobre el paciente\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    type: \"text\",\n    name: \"medic_alert\",\n    value: general.medic_alert,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, \"Est\\xE1 bajo tratamiento\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-toggle custom-toggle-warning ml-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    name: \"under_treatment\",\n    checked: general.under_treatment,\n    onChange: function onChange(e) {\n      handleInputCheckedChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"custom-toggle-slider rounded-circle\",\n    \"data-label-off\": \"No\",\n    \"data-label-on\": \"S\\xED\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 45\n    }\n  }, \"Alergias\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    type: \"text\",\n    name: \"allergies\",\n    value: general.allergies,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 45\n    }\n  }, \"Cirug\\xEDas previas/ Hospitalizaci\\xF3n/\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    type: \"text\",\n    name: \"previous_surgeries\",\n    value: general.previous_surgeries,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 45\n    }\n  }, \"F\\xE1rmacos y Posolog\\xEDa\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    type: \"text\",\n    name: \"medicine_dose\",\n    value: general.medicine_dose,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 45\n    }\n  }, \"Alergia a F\\xE1rmacos (especificar cu\\xE1l)\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    type: \"text\",\n    name: \"medicine_allergies\",\n    value: general.medicine_allergies,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 45\n    }\n  }, \"Radioterapia / Quimioterapia\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    type: \"text\",\n    name: \"radio_chemo_therapy\",\n    value: general.radio_chemo_therapy,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 45\n    }\n  })))), group === 'background' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 41\n    }\n  }, prmDiseases.map(function (prm) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: prm.disease_id,\n      className: \"custom-control custom-checkbox custom-checkbox-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      id: prm.disease_id,\n      name: prm.disease_id,\n      className: \"custom-control-input\",\n      checked: diseases[prm.disease_id],\n      onChange: function onChange(e) {\n        return handleCurrentDiseases(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: prm.disease_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 53\n      }\n    }, prm.name));\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 45\n    }\n  }, \"Otros / Observaciones\"), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    type: \"text\",\n    name: \"other_disease\",\n    value: general.other_disease,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right mb-4 mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    id: \"id-btn-save\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 37\n    }\n  }, \"Guardar\"), ' ')))));\n};\n\nexport default GeneralAnamnesis;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/views/pages/patient/general-anamnesis-u.js"],"names":["React","useState","useEffect","Button","Col","Container","Form","FormGroup","Input","Card","CardBody","ModalHeader","Label","axios","getList","useList","GeneralAnamnesis","location","has","setHas","state","id","fetchLastGeneral","defaultGeneral","general_anamnesis_id","person_id","allergies","other_disease","under_treatment","previous_surgeries","medicine_dose","medicine_allergies","radio_chemo_therapy","consult_motive","consult_motive_history","medic_alert","general","setGeneral","res","length","fetchDiseases","handleInputChange","e","target","name","value","handleInputCheckedChange","checked","handleCurrentDiseases","setDiseases","diseases","prmDiseases","obj","i","saveChanges","preventDefault","d","push","post","data","error","console","log","result","code","sqlMessage","group","setGroup","paddingRight","cursor","color","map","prm","disease_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, ModalHeader, Label} from 'reactstrap';\r\nimport axios from '../../../helpers/axiosConfig';\r\nimport {getList} from 'helpers/ListHelper'; \r\nimport useList from 'hooks/useList';\r\n\r\nconst GeneralAnamnesis = ({location}) => {\r\n    const [has, setHas] = useState(false);\r\n    //LOCATION###############################################################\r\n    useEffect(() => {\r\n        if (!location?.state?.id) { \r\n            //location.state.id = 11;\r\n            fetchLastGeneral(0);\r\n        } else {\r\n            fetchLastGeneral(location.state.id);\r\n        };        \r\n    }, []);\r\n\r\n    //GENERAL###############################################################\r\n    const defaultGeneral = {general_anamnesis_id: 0, person_id: 0, allergies: \"\", other_disease: \"\", under_treatment: 0, previous_surgeries: \"\", medicine_dose: \"\", medicine_allergies: \"\", radio_chemo_therapy: \"\", consult_motive: \"\", consult_motive_history: \"\", medic_alert: \"\"};\r\n    const [general, setGeneral] = useState(defaultGeneral);\r\n    const fetchLastGeneral = async (person_id) => {\r\n        const res = await getList(\"general-anamnesis/\" + person_id);\r\n        if (res.length === 1) {\r\n            setGeneral(res[0]);\r\n            fetchDiseases(res[0].general_anamnesis_id);\r\n            setHas(true);\r\n        }; \r\n    }; \r\n\r\n    const handleInputChange = e => {\r\n        setGeneral({\r\n            ...general,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputCheckedChange = e => {\r\n        setGeneral({\r\n            ...general,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    const handleCurrentDiseases = e => {\r\n        setDiseases({\r\n            ...diseases,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    //DISEASES##############################################################\r\n    const prmDiseases = useList(\"list/diseases\");\r\n    const [diseases, setDiseases] = useState([]);\r\n    const fetchDiseases = async (general_anamnesis_id) => {\r\n        const obj = {};\r\n        const res = await getList(\"general-anamnesis/crud/\" + general_anamnesis_id);\r\n        for (let i = 0; i < res.length; i++) {\r\n            obj[res[i]['disease_id']] = res[i]['has_disease'];\r\n        }\r\n        setDiseases(obj);\r\n    };  \r\n    \r\n    //CRUD##################################################################\r\n    const saveChanges = async (e) => {\r\n        e.preventDefault();\r\n        const d = [];\r\n        for(var i in diseases){\r\n            if(diseases[i]) {\r\n                d.push(i);\r\n            }; \r\n        };\r\n        try {\r\n            const res = await axios.post(\"general-anamnesis/crud\", {...general, d});\r\n            if (!res.data.error) {\r\n                console.log('Cambios guardados correctamente!');\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    //GROUP#################################################################\r\n    const [group, setGroup] = useState('motive');\r\n\r\n    //JSX##################################################################\r\n    return (\r\n        <Container>\r\n            <h1>Anamnesis general</h1>\r\n                {!has \r\n                    ? <Card><h4>El paciente no tiene registros en Anamnesis general.</h4></Card> \r\n                    : <Card>\r\n                        <CardBody className=\"pb-0 pt-1\">\r\n                            <ModalHeader className=\"pb-5 pl-0\">\r\n                                <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'motive' ? {color:\"#11cdef\"} : {})}} onClick={() => setGroup('motive')}>Motivo de consulta</a>\r\n                                <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'background' ? {color:\"#11cdef\"} : {})}} onClick={() => setGroup('background')}>Antecedentes mórbidos personales</a>\r\n                            </ModalHeader>\r\n                            <Form id=\"id-form-update\" onSubmit={(e) => saveChanges(e)} role=\"form\">\r\n                                {group === 'motive' && <>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Motivo Consulta</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"consult_motive\"\r\n                                                value={general.consult_motive}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Historial del motivo de Consulta</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"consult_motive_history\"\r\n                                                value={general.consult_motive_history}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Alerta médica especial y comentarios relevantes sobre el paciente</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"medic_alert\"\r\n                                                value={general.medic_alert}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col className=\"d-flex\">\r\n                                            <Label className=\"form-control-label\">Está bajo tratamiento</Label>\r\n                                            <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                                <Input\r\n                                                    type=\"checkbox\"\r\n                                                    name=\"under_treatment\"\r\n                                                    checked={general.under_treatment}\r\n                                                    onChange={e => {handleInputCheckedChange(e)}}\r\n                                                />\r\n                                                <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                            </label>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Alergias</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"allergies\"\r\n                                                value={general.allergies}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Cirugías previas/ Hospitalización/</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"previous_surgeries\"\r\n                                                value={general.previous_surgeries}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Fármacos y Posología</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"medicine_dose\"\r\n                                                value={general.medicine_dose}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Alergia a Fármacos (especificar cuál)</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"medicine_allergies\"\r\n                                                value={general.medicine_allergies}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Radioterapia / Quimioterapia</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"radio_chemo_therapy\"\r\n                                                value={general.radio_chemo_therapy}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </>}    \r\n                                {group === 'background' && <>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col md=\"10\">\r\n                                            {prmDiseases.map(prm => (\r\n                                                <div key={prm.disease_id} className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                    <Input\r\n                                                        type=\"checkbox\"\r\n                                                        id={prm.disease_id}\r\n                                                        name={prm.disease_id}\r\n                                                        className=\"custom-control-input\"\r\n                                                        checked={diseases[prm.disease_id]}\r\n                                                        onChange={e => handleCurrentDiseases(e)}\r\n                                                    />\r\n                                                    <label className=\"custom-control-label\" htmlFor={prm.disease_id}>{prm.name}</label>\r\n                                                </div>\r\n                                            ))}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Otros / Observaciones</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"other_disease\"\r\n                                                value={general.other_disease}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </>}\r\n                                <div className= \"float-right mb-4 mr-2\">\r\n                                    <Button type=\"submit\" id=\"id-btn-save\" color=\"primary\">Guardar</Button>{' '}\r\n                                    {/* <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Cancelar</Button> */}\r\n                                </div>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default GeneralAnamnesis;\r\n"]},"metadata":{},"sourceType":"module"}