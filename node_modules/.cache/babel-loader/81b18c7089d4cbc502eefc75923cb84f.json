{"ast":null,"code":"import Axios from'axios';var inMemoryToken;var names;var TOKEN=\"tdrToken\";export var loginURL=process.env.REACT_APP_API_URL+'session/login';var refreshURL=process.env.REACT_APP_API_URL+'session';var verifyURL=process.env.REACT_APP_API_URL+'session/verify';export var getNames=function getNames(){return names;};export var setNames=function setNames(Names){names=Names;};export var getToken=function getToken(){return inMemoryToken;};export var setToken=function setToken(token){inMemoryToken=token;};export var getRefreshToken=function getRefreshToken(){return localStorage.getItem(TOKEN);};export var setRefreshToken=function setRefreshToken(refreshToken){localStorage.setItem(TOKEN,refreshToken);};export var deleteTokens=function deleteTokens(){inMemoryToken=null;localStorage.removeItem(TOKEN);names=null;};export var refreshToken=function refreshToken(){Axios.post(refreshURL,{token:getToken(),refreshToken:getRefreshToken(),names:getNames()}).then(function(res){if(!res.data.error){setTokens(res);}});};export var setTokens=function setTokens(res){setToken(res.data.result.token);setRefreshToken(res.data.result.refreshToken);setNames(res.data.result.names);};export var verify=function verify(reqRole){var token=getToken();var error=false;var role=\"\";if(!token){error=true;}else{Axios.post(verifyURL,{token:token}).then(function(res){if(res.data.error){error=true;}else{role=res.data.result.role;}});}if(error){alert(\"Por favor, inicie sesión para continuar.\\n\"+\"Si ya inició sesión, ingrese nuevamente.\");return 401;}else{if(role===reqRole){alert(\"Ud. no tiene permiso para acceder a este contenido.\");}return role===reqRole?200:403;}};export var initAxiosInterceptor=function initAxiosInterceptor(){Axios.interceptors.request.use(function(config){var token=getToken();if(token){config.headers.Authorization='Bearer '+token;}return config;});};","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/helpers/AuthHelper2.js"],"names":["Axios","inMemoryToken","names","TOKEN","loginURL","process","env","REACT_APP_API_URL","refreshURL","verifyURL","getNames","setNames","Names","getToken","setToken","token","getRefreshToken","localStorage","getItem","setRefreshToken","refreshToken","setItem","deleteTokens","removeItem","post","then","res","data","error","setTokens","result","verify","reqRole","role","alert","initAxiosInterceptor","interceptors","request","use","config","headers","Authorization"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\n\r\nlet inMemoryToken;\r\nlet names;\r\n\r\nconst TOKEN = \"tdrToken\";\r\nexport const loginURL = process.env.REACT_APP_API_URL + 'session/login';\r\nconst refreshURL = process.env.REACT_APP_API_URL + 'session';\r\nconst verifyURL = process.env.REACT_APP_API_URL + 'session/verify';\r\n\r\nexport const getNames = () => names;\r\nexport const setNames = (Names) => { names = Names; }\r\nexport const getToken = () => inMemoryToken;\r\nexport const setToken = (token) => { inMemoryToken = token; }\r\nexport const getRefreshToken = () => localStorage.getItem(TOKEN);\r\nexport const setRefreshToken = (refreshToken) => { localStorage.setItem(TOKEN, refreshToken); }\r\nexport const deleteTokens = () => {\r\n    inMemoryToken = null; \r\n    localStorage.removeItem(TOKEN);\r\n    names = null;\r\n}\r\nexport const refreshToken = () => {\r\n    Axios.post(refreshURL, {\r\n        token: getToken(),\r\n        refreshToken: getRefreshToken(),\r\n        names: getNames()\r\n    }).then(res => { if (!res.data.error) { setTokens(res) } });\r\n}\r\nexport const setTokens = (res) => {\r\n    setToken(res.data.result.token);\r\n    setRefreshToken(res.data.result.refreshToken);\r\n    setNames(res.data.result.names);\r\n}\r\nexport const verify = reqRole => {\r\n    let token = getToken();\r\n    let error = false;\r\n    let role = \"\";\r\n    if (!token) {\r\n        error = true;\r\n    } else {\r\n        Axios.post(verifyURL, {\r\n            token: token\r\n        }).then(res => {\r\n            if (res.data.error) {\r\n                error = true;\r\n            } else {\r\n                role = res.data.result.role;\r\n            }\r\n        });\r\n    }\r\n    if (error) {\r\n        alert(\"Por favor, inicie sesión para continuar.\\n\" +\r\n                \"Si ya inició sesión, ingrese nuevamente.\");\r\n        return 401;\r\n    } else {\r\n        if (role === reqRole) {\r\n            alert(\"Ud. no tiene permiso para acceder a este contenido.\");\r\n        }\r\n        return (role === reqRole) ? 200 : 403;\r\n    }\r\n}\r\nexport const initAxiosInterceptor = () => {\r\n    Axios.interceptors.request.use((config) => {\r\n        const token = getToken()\r\n        if (token) {\r\n            config.headers.Authorization = 'Bearer ' + token;\r\n        }\r\n        return config;\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}