{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\src\\\\views\\\\pages\\\\patient\\\\list-records.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, Card, CardBody, Table, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport '../../../assets/css/loading.css';\nimport { getList } from 'helpers/ListHelper';\n\nvar ListRecords = function ListRecords() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      persons = _useState2[0],\n      setPersons = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchTerm = _useState4[0],\n      setSearchTerm = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var fetchPersons = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getList(\"list/person\");\n\n            case 2:\n              res = _context.sent;\n              setLoading(false);\n              setPersons(res);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchPersons() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchPersons();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Fichas Clinicas\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Buscar...\",\n    autoComplete: \"off\",\n    name: \"look_for\",\n    value: searchTerm,\n    onChange: function onChange(e) {\n      return setSearchTerm(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(Table, {\n    className: \"align-items-center\",\n    responsive: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }, \"Run\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }, \"Nombre\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }, \"Apellidos\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, \"Ficha Clinica\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, persons.filter(function (val) {\n    if (searchTerm == \"\") {\n      return val;\n    } else if (val.run.includes(searchTerm) || val.fullname.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return val;\n    }\n  }).map(function (e_person) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"text-center\",\n      key: e_person.person_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }\n    }, e_person.person_id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    }, e_person.run), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }\n    }, e_person.names), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    }, e_person.lastnames), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/admin/clinical-record\",\n        state: {\n          id: e_person.person_id,\n          run: e_person.run,\n          name: e_person.names,\n          apellido: e_person.lastnames\n        }\n      },\n      style: {\n        color: \"white\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }\n    }, \"Ver\"))));\n  }))))));\n};\n\nexport default ListRecords;","map":{"version":3,"sources":["C:/Users/Christian/WebstormProjects/teleodontoweb/src/views/pages/patient/list-records.js"],"names":["React","useState","useEffect","Button","Container","Card","CardBody","Table","Input","Link","getList","ListRecords","persons","setPersons","searchTerm","setSearchTerm","loading","setLoading","fetchPersons","res","e","target","value","filter","val","run","includes","fullname","toLowerCase","map","e_person","person_id","names","lastnames","pathname","state","id","name","apellido","color"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Button, Container, Card, CardBody, Table, Input} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../../assets/css/loading.css'\r\nimport {getList} from 'helpers/ListHelper';\r\n\r\nconst ListRecords = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchPersons = async () => {\r\n        const res = await getList(\"list/person\");\r\n        setLoading(false)\r\n        setPersons(res);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPersons();\r\n    }, []);\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Card>\r\n                <CardBody>\r\n                    <h1>Fichas Clinicas</h1>\r\n                    <Input type=\"text\" placeholder=\"Buscar...\" autoComplete=\"off\" name=\"look_for\" \r\n                        value={searchTerm}\r\n                        onChange={e => setSearchTerm(e.target.value)}\r\n                    />\r\n                    <br/>\r\n                    {loading \r\n                        ?<div className=\"w-100 d-flex justify-content-center\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                        :<Table className=\"align-items-center\" responsive>\r\n                            <thead className=\"thead-light\">\r\n                                <tr className=\"text-center\">\r\n                                    <th scope=\"col\">ID</th>\r\n                                    <th scope=\"col\">Run</th>\r\n                                    <th scope=\"col\">Nombre</th>\r\n                                    <th scope=\"col\">Apellidos</th>\r\n                                    <th scope=\"col\">Ficha Clinica</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {/* {loading && <div className=\"loader align-self-center text-center justify-content-center\"></div>} */}\r\n                            <tbody>\r\n                                {persons.filter(val => {\r\n                                    if(searchTerm == \"\") {\r\n                                        return val;\r\n                                    } else if (val.run.includes(searchTerm) || val.fullname.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                        return val;\r\n                                    }\r\n                                }).map(e_person => (\r\n                                    <tr className=\"text-center\" key={e_person.person_id}>\r\n                                        <td>{e_person.person_id}</td>\r\n                                        <td>{e_person.run}</td>\r\n                                        <td>{e_person.names}</td>\r\n                                        <td>{e_person.lastnames}</td>\r\n                                        <td>\r\n                                            {/* <Button onClick={() => showModalAppointments(e_person)}>Listar</Button> */}\r\n                                            <Button color=\"primary\">\r\n                                                <Link to={{\r\n                                                    pathname: \"/admin/clinical-record\",\r\n                                                    state: {\r\n                                                        id: e_person.person_id,\r\n                                                        run: e_person.run,\r\n                                                        name: e_person.names,\r\n                                                        apellido: e_person.lastnames\r\n                                                    }\r\n                                                }} style={{color: \"white\"}}>Ver</Link>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ListRecords;\r\n"]},"metadata":{},"sourceType":"module"}