{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\src\\\\components\\\\Fantoma\\\\MouseHelper.jsx\";\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useThree } from 'react-three-fiber';\n\nvar MouseHelper = function MouseHelper(props) {\n  var _useThree = useThree(),\n      intersect = _useThree.intersect;\n\n  var helper = useRef();\n\n  var onMouseMove = function onMouseMove() {\n    if (intersect()[0] === undefined) {\n      return;\n    }\n\n    if (intersect().length > 0 && intersect()[0].object.name !== \"marker\") {\n      var p = helper.current.position.copy(intersect()[0].point);\n      var n = intersect()[0].face.normal.clone();\n      var mesh = intersect()[0].object;\n      n.transformDirection(mesh.matrixWorld);\n      n.multiplyScalar(10);\n      n.add(intersect()[0].point);\n      helper.current.lookAt(n);\n\n      if (props.typeExam === \"soft-tissues-exam\") {\n        props.handleOrientation(helper.current.rotation);\n      }\n\n      props.handlePosition(helper.current.position); //console.log(helper.current.rotation)\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener('mousemove', onMouseMove);\n    return function () {\n      window.removeEventListener('mousemove', onMouseMove);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    name: 'mouseHelper',\n    ref: helper,\n    visible: false,\n    position: [0, 0, 0],\n    rotation: [0, 0, 0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    attach: \"geometry\",\n    args: [0.01, 0.01, 0.02],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default MouseHelper;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/components/Fantoma/MouseHelper.jsx"],"names":["React","useState","useRef","useEffect","useThree","MouseHelper","props","intersect","helper","onMouseMove","undefined","length","object","name","p","current","position","copy","point","n","face","normal","clone","mesh","transformDirection","matrixWorld","multiplyScalar","add","lookAt","typeExam","handleOrientation","rotation","handlePosition","window","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,kBAEPF,QAAQ,EAFD;AAAA,MAEpBG,SAFoB,aAEpBA,SAFoB;;AAI3B,MAAMC,MAAM,GAAGN,MAAM,EAArB;;AAEA,MAAMO,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAIF,SAAS,GAAG,CAAH,CAAT,KAAkBG,SAAtB,EAAiC;AAAC;AAAO;;AACzC,QAAIH,SAAS,GAAGI,MAAZ,GAAqB,CAArB,IAA0BJ,SAAS,GAAG,CAAH,CAAT,CAAeK,MAAf,CAAsBC,IAAtB,KAA+B,QAA7D,EAAuE;AACnE,UAAMC,CAAC,GAAGN,MAAM,CAACO,OAAP,CAAeC,QAAf,CAAwBC,IAAxB,CAA6BV,SAAS,GAAG,CAAH,CAAT,CAAeW,KAA5C,CAAV;AACA,UAAMC,CAAC,GAAGZ,SAAS,GAAG,CAAH,CAAT,CAAea,IAAf,CAAoBC,MAApB,CAA2BC,KAA3B,EAAV;AACA,UAAMC,IAAI,GAAEhB,SAAS,GAAG,CAAH,CAAT,CAAeK,MAA3B;AACAO,MAAAA,CAAC,CAACK,kBAAF,CAAsBD,IAAI,CAACE,WAA3B;AAEAN,MAAAA,CAAC,CAACO,cAAF,CAAkB,EAAlB;AACAP,MAAAA,CAAC,CAACQ,GAAF,CAAOpB,SAAS,GAAG,CAAH,CAAT,CAAeW,KAAtB;AAGAV,MAAAA,MAAM,CAACO,OAAP,CAAea,MAAf,CAAuBT,CAAvB;;AAGA,UAAGb,KAAK,CAACuB,QAAN,KAAmB,mBAAtB,EACC;AAACvB,QAAAA,KAAK,CAACwB,iBAAN,CAAwBtB,MAAM,CAACO,OAAP,CAAegB,QAAvC;AAAiD;;AAGnDzB,MAAAA,KAAK,CAAC0B,cAAN,CAAqBxB,MAAM,CAACO,OAAP,CAAeC,QAApC,EAjBmE,CAmBnE;AAEH;AACJ,GAxBD;;AA0BAb,EAAAA,SAAS,CAAC,YAAM;AACZ8B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCzB,WAArC;AACA,WAAO,YAAM;AACbwB,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwC1B,WAAxC;AACC,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAUA,sBACI;AAAM,IAAA,IAAI,EAAE,aAAZ;AAA2B,IAAA,GAAG,EAAED,MAAhC;AAAwC,IAAA,OAAO,EAAE,KAAjD;AAAwD,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlE;AAA6E,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAa,IAAA,MAAM,EAAC,UAApB;AAA+B,IAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AACI,IAAA,MAAM,EAAC,UADX;AAEI,IAAA,KAAK,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAUH,CApDD;;AAuDA,eAAeH,WAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { useThree } from 'react-three-fiber'\r\n\r\nconst MouseHelper = (props) => {\r\n\r\n    const {intersect} = useThree();\r\n\r\n    const helper = useRef();\r\n\r\n    const onMouseMove = () => {\r\n        if (intersect()[0]=== undefined) {return}\r\n        if (intersect().length > 0 && intersect()[0].object.name !== \"marker\") {\r\n            const p = helper.current.position.copy(intersect()[0].point)\r\n            const n = intersect()[0].face.normal.clone()\r\n            const mesh= intersect()[0].object\r\n            n.transformDirection( mesh.matrixWorld )\r\n            \r\n            n.multiplyScalar( 10 );\r\n            n.add( intersect()[0].point );\r\n            \r\n\r\n            helper.current.lookAt( n )\r\n            \r\n\r\n            if(props.typeExam === \"soft-tissues-exam\")\r\n             {props.handleOrientation(helper.current.rotation)}\r\n            \r\n    \r\n            props.handlePosition(helper.current.position)\r\n            \r\n            //console.log(helper.current.rotation)\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousemove', onMouseMove);        \r\n        return () => {\r\n        window.removeEventListener('mousemove', onMouseMove);\r\n        }\r\n    }, [])\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <mesh name={'mouseHelper'} ref={helper} visible={false} position={[0, 0, 0]} rotation={[0, 0, 0]}  >\r\n            <boxGeometry attach=\"geometry\" args={[0.01, 0.01, 0.02]} />\r\n            <meshStandardMaterial\r\n                attach=\"material\"\r\n                color=\"green\"\r\n            />\r\n            {/* <axesHelper args={[0.3, 0.3, 0.3]} /> */}\r\n        </mesh>\r\n    );\r\n}\r\n\r\n\r\nexport default MouseHelper;"]},"metadata":{},"sourceType":"module"}