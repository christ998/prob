{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,forwardRef,useImperativeHandle}from\"react\";import{Button,Modal,ModalHeader,ModalBody,ModalFooter}from'reactstrap';var SimpleModal=forwardRef(function(props,ref){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),display=_useState2[0],setDisplay=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),modalOptions=_useState4[0],setModalOptions=_useState4[1];useImperativeHandle(ref,function(){return{setModal:function setModal(options){return _setModal(options);}};});var _setModal=function _setModal(options){var state=false;if(options===null||options===void 0?void 0:options.title){state=true;}setModalOptions(options);setDisplay(state);};if(display){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{isOpen:display},/*#__PURE__*/React.createElement(ModalHeader,{toggle:function toggle(){return _setModal({});}},modalOptions.title),/*#__PURE__*/React.createElement(ModalBody,null,modalOptions.text),/*#__PURE__*/React.createElement(ModalFooter,null,modalOptions.type===1?/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:function onClick(){return _setModal({});}},\"Cerrar\"):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:function onClick(){return modalOptions.fx();}},\"Confirmar\"),' ',/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:function onClick(){return _setModal({});}},\"Cancelar\")))));};return null;});export default SimpleModal;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/views/pages/components/SimpleModal.jsx"],"names":["React","useState","forwardRef","useImperativeHandle","Button","Modal","ModalHeader","ModalBody","ModalFooter","SimpleModal","props","ref","display","setDisplay","modalOptions","setModalOptions","setModal","options","state","title","text","type","fx"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,mBAAtC,KAAiE,OAAjE,CACA,OAAQC,MAAR,CAAgBC,KAAhB,CAAuBC,WAAvB,CAAoCC,SAApC,CAA+CC,WAA/C,KAAiE,YAAjE,CAEA,GAAMC,CAAAA,WAAW,CAAGP,UAAU,CAAC,SAACQ,KAAD,CAAQC,GAAR,CAAgB,eACbV,QAAQ,CAAC,KAAD,CADK,wCACpCW,OADoC,eAC3BC,UAD2B,8BAEHZ,QAAQ,CAAC,EAAD,CAFL,yCAEpCa,YAFoC,eAEtBC,eAFsB,eAI3CZ,mBAAmB,CAACQ,GAAD,CAAM,UAAM,CAC3B,MAAO,CACHK,QAAQ,CAAE,kBAACC,OAAD,QAAaD,CAAAA,SAAQ,CAACC,OAAD,CAArB,EADP,CAAP,CAGH,CAJkB,CAAnB,CAMA,GAAMD,CAAAA,SAAQ,CAAG,QAAXA,CAAAA,SAAW,CAACC,OAAD,CAAa,CAC1B,GAAIC,CAAAA,KAAK,CAAG,KAAZ,CACA,GAAID,OAAJ,SAAIA,OAAJ,iBAAIA,OAAO,CAAEE,KAAb,CAAoB,CAChBD,KAAK,CAAG,IAAR,CACH,CACDH,eAAe,CAACE,OAAD,CAAf,CACAJ,UAAU,CAACK,KAAD,CAAV,CACH,CAPD,CASA,GAAIN,OAAJ,CAAa,CACT,mBACI,4CACI,oBAAC,KAAD,EAAO,MAAM,CAAEA,OAAf,eACI,oBAAC,WAAD,EAAa,MAAM,CAAE,wBAAMI,CAAAA,SAAQ,CAAC,EAAD,CAAd,EAArB,EACKF,YAAY,CAACK,KADlB,CADJ,cAII,oBAAC,SAAD,MACKL,YAAY,CAACM,IADlB,CAJJ,cAOI,oBAAC,WAAD,MACKN,YAAY,CAACO,IAAb,GAAsB,CAAtB,cACK,oBAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,OAAO,CAAE,yBAAML,CAAAA,SAAQ,CAAC,EAAD,CAAd,EAAnC,WADL,cAEK,4CAAK,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,OAAO,CAAE,yBAAMF,CAAAA,YAAY,CAACQ,EAAb,EAAN,EAAjC,cAAL,CAAkF,GAAlF,cAAsF,oBAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,OAAO,CAAE,yBAAMN,CAAAA,SAAQ,CAAC,EAAD,CAAd,EAAnC,aAAtF,CAHV,CAPJ,CADJ,CADJ,CAkBH,EACD,MAAO,KAAP,CACH,CAxC6B,CAA9B,CA0CA,cAAeP,CAAAA,WAAf","sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap'\r\n\r\nconst SimpleModal = forwardRef((props, ref) => {\r\n    const [display, setDisplay] = useState(false);\r\n    const [modalOptions, setModalOptions] = useState({});\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            setModal: (options) => setModal(options)\r\n        }\r\n    });\r\n\r\n    const setModal = (options) => {\r\n        let state = false\r\n        if (options?.title) {\r\n            state = true;\r\n        }\r\n        setModalOptions(options);\r\n        setDisplay(state);\r\n    }\r\n\r\n    if (display) {\r\n        return (\r\n            <div>\r\n                <Modal isOpen={display}>\r\n                    <ModalHeader toggle={() => setModal({})}>\r\n                        {modalOptions.title}\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        {modalOptions.text}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        {modalOptions.type === 1 \r\n                            ? <Button color=\"secondary\" onClick={() => setModal({})}>Cerrar</Button> \r\n                            : <div><Button color=\"primary\" onClick={() => modalOptions.fx()}>Confirmar</Button>{' '}<Button color=\"secondary\" onClick={() => setModal({})}>Cancelar</Button></div>\r\n                        }\r\n                    </ModalFooter>\r\n                </Modal> \r\n            </div>\r\n        );\r\n    };\r\n    return null;\r\n});\r\n\r\nexport default SimpleModal;"]},"metadata":{},"sourceType":"module"}