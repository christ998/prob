{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Button,FormGroup,Form,Input,Modal,Label,Col,Row,ModalHeader,ModalBody,ModalFooter,InputGroup,InputGroupAddon}from\"reactstrap\";import{getList}from'helpers/ListHelper';var AddMarkerForm=function AddMarkerForm(props){var initialFormState={id:null,idAnamnesis:null,form:1,length:0,width:0,height:0,color:1,surface:1,consistency:1,evolution_time:null,evolution_form:1,symptomatology:1,edge:1,localization:1,observation:'',position_x:0,position_y:0,position_z:0};var _useState=useState(initialFormState),_useState2=_slicedToArray(_useState,2),marker=_useState2[0],setMarker=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),colorData=_useState6[0],setColorData=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),surfaceData=_useState8[0],setSurfaceData=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),consistencyData=_useState10[0],setConsistencyData=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),evolutionFormData=_useState12[0],setEvolutionFormData=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),symptomatologyData=_useState14[0],setSymptomatologyData=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),edgeData=_useState16[0],setEdgeData=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),localizationData=_useState18[0],setLocalizationData=_useState18[1];var getData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(set,route){var e;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getList(route);case 2:e=_context.sent;set(e);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getData(_x,_x2){return _ref.apply(this,arguments);};}();useEffect(function(){getData(setFormData,\"list/forms\");getData(setColorData,\"list/colors\");getData(setSurfaceData,\"list/surfaces\");getData(setConsistencyData,\"list/consistencies\");getData(setEvolutionFormData,\"list/evolution-forms\");getData(setSymptomatologyData,\"list/symptomatologies\");getData(setEdgeData,\"list/edges\");getData(setLocalizationData,\"list/localizations\");},[]);var handleInputChange=function handleInputChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setMarker(_objectSpread(_objectSpread({},marker),{},{[name]:value}));console.log(marker.orientation_x);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Modal,{className:\"modal-dialog-centered\",isOpen:props.adding,size:\"xl\"},/*#__PURE__*/React.createElement(ModalHeader,null,\"Descripci\\xF3n de la lesi\\xF3n\"),/*#__PURE__*/React.createElement(ModalBody,{className:\"pt-1\"},/*#__PURE__*/React.createElement(Form,{onSubmit:function onSubmit(event){event.preventDefault();props.addMarker(marker);setMarker(initialFormState);},role:\"form\"},/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Forma\"),/*#__PURE__*/React.createElement(Input,{id:\"form\",type:\"select\",name:\"form\",defaultValue:marker.form,onChange:handleInputChange},formData.map(function(form){return/*#__PURE__*/React.createElement(\"option\",{key:form.name,value:form.form_id,onFocus:function onFocus(e){return console.log(e.target);},id:form.name,\"data-toggle\":\"tooltip\",title:form.description},form.name);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Color\"),/*#__PURE__*/React.createElement(Input,{id:\"color\",type:\"select\",name:\"color\",defaultValue:marker.color,onChange:handleInputChange},colorData.map(function(color){return/*#__PURE__*/React.createElement(\"option\",{key:color.value,value:color.color_id,id:color.value},color.value);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Superficie\"),/*#__PURE__*/React.createElement(Input,{id:\"surface\",type:\"select\",name:\"surface\",defaultValue:marker.surface,onChange:handleInputChange},surfaceData.map(function(surface){return/*#__PURE__*/React.createElement(\"option\",{key:surface.value,value:surface.surface_id},surface.value);})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Tama\\xF1o\"),/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{type:\"number\",min:1,max:150,step:\"1\",name:\"length\",placeholder:\"largo\"/* defaultValue={0} */,onChange:function onChange(e){handleInputChange(e);},required:true}),/*#__PURE__*/React.createElement(Input,{type:\"number\",min:1,max:150,step:\"1\",name:\"width\",placeholder:\"ancho\"/* defaultValue={0} */,onChange:function onChange(e){handleInputChange(e);},required:true}),/*#__PURE__*/React.createElement(Input,{type:\"number\",min:0,max:150,step:\"1\",name:\"height\",placeholder:\"alto\"/* defaultValue={0} */,onChange:function onChange(e){handleInputChange(e);}}),/*#__PURE__*/React.createElement(InputGroupAddon,{addonType:\"append\"},\"mm\"))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Consistencia\"),/*#__PURE__*/React.createElement(Input,{id:\"consistency\",type:\"select\",name:\"consistency\",defaultValue:marker.consistency,onChange:handleInputChange},consistencyData.map(function(consistency){return/*#__PURE__*/React.createElement(\"option\",{key:consistency.name,value:consistency.consistency_id},consistency.name);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Bordes\"),/*#__PURE__*/React.createElement(Input,{id:\"edge\",type:\"select\",name:\"edge\",defaultValue:marker.edge,onChange:handleInputChange},edgeData.map(function(edge){return/*#__PURE__*/React.createElement(\"option\",{key:edge.name,value:edge.edge_id},edge.name);})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Sintomatolog\\xEDa\"),/*#__PURE__*/React.createElement(Input,{id:\"symptomatology\",type:\"select\",name:\"symptomatology\",defaultValue:marker.symptomatology,onChange:handleInputChange},symptomatologyData.map(function(symptomatology){return/*#__PURE__*/React.createElement(\"option\",{key:symptomatology.value,value:symptomatology.symptomatology_id},symptomatology.value);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Forma de evoluci\\xF3n\"),/*#__PURE__*/React.createElement(Input,{id:\"evolution_form\",type:\"select\",name:\"evolution_form\",defaultValue:marker.evolution_form,onChange:handleInputChange},evolutionFormData.map(function(evolutionForm){return/*#__PURE__*/React.createElement(\"option\",{key:evolutionForm.value,value:evolutionForm.evolution_form_id},evolutionForm.value);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Tiempo de evoluci\\xF3n\"),/*#__PURE__*/React.createElement(Input,{id:\"evolution_time\",type:\"text\",name:\"evolution_time\",maxLength:\"20\",defaultValue:marker.evolution_time//pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n//required\n,onChange:handleInputChange}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Localizaci\\xF3n\"),/*#__PURE__*/React.createElement(Input,{id:\"localization\",type:\"select\",name:\"localization\",defaultValue:marker.localization//pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n//required\n,onChange:handleInputChange},localizationData.map(function(localization){return/*#__PURE__*/React.createElement(\"option\",{key:localization.value,value:localization.localization_id},localization.value);}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\"},\"Observaciones\"),/*#__PURE__*/React.createElement(Input,{id:\"example-text-input1\",type:\"textarea\",name:\"observation\",maxLength:\"200\",defaultValue:marker.observation//pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n//required\n,onChange:handleInputChange}))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\"},\"Guardar\"),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:function onClick(){return props.setAdding(false);}},\"Cancelar\"))))));};export default AddMarkerForm;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/components/Fantoma/FormsExams/AddMarkerForm.jsx"],"names":["React","useState","useEffect","Button","FormGroup","Form","Input","Modal","Label","Col","Row","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","getList","AddMarkerForm","props","initialFormState","id","idAnamnesis","form","length","width","height","color","surface","consistency","evolution_time","evolution_form","symptomatology","edge","localization","observation","position_x","position_y","position_z","marker","setMarker","formData","setFormData","colorData","setColorData","surfaceData","setSurfaceData","consistencyData","setConsistencyData","evolutionFormData","setEvolutionFormData","symptomatologyData","setSymptomatologyData","edgeData","setEdgeData","localizationData","setLocalizationData","getData","set","route","e","handleInputChange","event","target","name","value","console","log","orientation_x","adding","preventDefault","addMarker","map","form_id","description","color_id","surface_id","consistency_id","edge_id","symptomatology_id","evolutionForm","evolution_form_id","localization_id","setAdding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    Row,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from \"reactstrap\";\r\nimport { getList } from 'helpers/ListHelper';\r\n\r\n\r\n\r\nconst AddMarkerForm = (props) => {\r\n    const initialFormState = {\r\n        id: null,\r\n        idAnamnesis: null,\r\n        form: 1,\r\n        length: 0,\r\n        width: 0,\r\n        height: 0,\r\n        color: 1,\r\n        surface: 1,\r\n        consistency: 1,\r\n        evolution_time: null,\r\n        evolution_form: 1,\r\n        symptomatology: 1,\r\n        edge: 1,\r\n        localization: 1,\r\n        observation: '',\r\n        position_x: 0,\r\n        position_y: 0,\r\n        position_z: 0,\r\n    }\r\n    const [marker, setMarker] = useState(initialFormState)\r\n\r\n    const [formData, setFormData] = useState([]);\r\n    const [colorData, setColorData] = useState([]);\r\n    const [surfaceData, setSurfaceData] = useState([]);\r\n    const [consistencyData, setConsistencyData] = useState([]);\r\n    const [evolutionFormData, setEvolutionFormData] =useState([]);\r\n    const [symptomatologyData, setSymptomatologyData] = useState([]);\r\n    const [edgeData, setEdgeData] = useState([]);\r\n    const [localizationData, setLocalizationData] = useState([]);\r\n\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(setFormData, \"list/forms\")\r\n        getData(setColorData, \"list/colors\")\r\n        getData(setSurfaceData, \"list/surfaces\")\r\n        getData(setConsistencyData, \"list/consistencies\")\r\n        getData(setEvolutionFormData, \"list/evolution-forms\")\r\n        getData(setSymptomatologyData, \"list/symptomatologies\")\r\n        getData(setEdgeData, \"list/edges\")\r\n        getData(setLocalizationData, \"list/localizations\")\r\n    }, [])\r\n\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n        console.log(marker.orientation_x)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.adding}\r\n                size=\"xl\"\r\n            >\r\n                <ModalHeader >\r\n                   Descripción de la lesión\r\n                </ModalHeader>\r\n                <ModalBody className=\"pt-1\">\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.addMarker(marker)\r\n                        setMarker(initialFormState)\r\n                    }}\r\n                        role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma</Label>\r\n                                <Input\r\n                                    id=\"form\"\r\n                                    type=\"select\"\r\n                                    name=\"form\"\r\n                                    defaultValue={marker.form}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {formData.map(form => (\r\n                                        <option \r\n                                            key={form.name} \r\n                                            value={form.form_id} \r\n                                            onFocus={(e)=>console.log(e.target) } \r\n                                            id={form.name}  \r\n                                            data-toggle=\"tooltip\" \r\n                                            title={form.description}\r\n                                            >\r\n                                                {form.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Color</Label>\r\n                                <Input\r\n                                    id=\"color\"\r\n                                    type=\"select\"\r\n                                    name=\"color\"\r\n                                    defaultValue={marker.color}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {colorData.map(color => (\r\n                                        <option key={color.value} value={color.color_id} id={color.value} >{color.value}</option>\r\n                                    ))}\r\n                                    \r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Superficie</Label>\r\n                                <Input\r\n                                    id=\"surface\"\r\n                                    type=\"select\"\r\n                                    name=\"surface\"\r\n                                    defaultValue={marker.surface}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {surfaceData.map(surface => (\r\n                                        <option key={surface.value} value={surface.surface_id}>{surface.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup> \r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" >Tamaño</Label>\r\n                                <InputGroup>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        min={1}\r\n                                        max={150}\r\n                                        step=\"1\"\r\n                                        name=\"length\"\r\n                                        placeholder=\"largo\"\r\n                                        /* defaultValue={0} */\r\n                                        onChange={(e) => { handleInputChange(e) }}\r\n                                        required\r\n                                    />\r\n                                        <Input\r\n                                        type=\"number\"\r\n                                        min={1}\r\n                                        max={150}\r\n                                        step=\"1\"\r\n                                        name=\"width\"\r\n                                        placeholder=\"ancho\"\r\n                                        /* defaultValue={0} */\r\n                                        onChange={(e) => { handleInputChange(e) }}\r\n                                        required\r\n                                    />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        min={0}\r\n                                        max={150}\r\n                                        step=\"1\"\r\n                                        name=\"height\"\r\n                                        placeholder=\"alto\"\r\n                                        /* defaultValue={0} */\r\n                                        onChange={(e) => { handleInputChange(e) }}\r\n                                    />\r\n                                    <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Consistencia</Label>\r\n                                <Input\r\n                                    id=\"consistency\"\r\n                                    type=\"select\"\r\n                                    name=\"consistency\"\r\n                                    defaultValue={marker.consistency}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {consistencyData.map(consistency => (\r\n                                        <option key={consistency.name} value={consistency.consistency_id}>{consistency.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Bordes</Label>\r\n                                <Input\r\n                                    id=\"edge\"\r\n                                    type=\"select\"\r\n                                    name=\"edge\"\r\n                                    defaultValue={marker.edge}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {edgeData.map(edge => (\r\n                                        <option key={edge.name} value={edge.edge_id}>{edge.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Sintomatología</Label>\r\n                                <Input\r\n                                    id=\"symptomatology\"\r\n                                    type=\"select\"\r\n                                    name=\"symptomatology\"\r\n                                    defaultValue={marker.symptomatology}\r\n                                    onChange={handleInputChange}>\r\n                                    {symptomatologyData.map(symptomatology => (\r\n                                        <option key={symptomatology.value} value={symptomatology.symptomatology_id}>{symptomatology.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma de evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_form\"\r\n                                    type=\"select\"\r\n                                    name=\"evolution_form\"\r\n                                    defaultValue={marker.evolution_form}\r\n                                    onChange={handleInputChange}>\r\n                                     {evolutionFormData.map(evolutionForm => (\r\n                                        <option key={evolutionForm.value} value={evolutionForm.evolution_form_id}>{evolutionForm.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Tiempo de evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_time\"\r\n                                    type=\"text\"\r\n                                    name=\"evolution_time\"\r\n                                    maxLength=\"20\"\r\n                                    defaultValue={marker.evolution_time}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}>\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>               \r\n                        <FormGroup className=\"row\"> \r\n                           \r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Localización</Label>\r\n                                <Input\r\n                                    id=\"localization\"\r\n                                    type=\"select\"\r\n                                    name=\"localization\"\r\n                                    defaultValue={marker.localization}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                {localizationData.map(localization => (\r\n                                        <option key={localization.value} value={localization.localization_id}>{localization.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Observaciones</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"textarea\"\r\n                                    name=\"observation\"\r\n                                    maxLength=\"200\"\r\n                                    defaultValue={marker.observation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                           \r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setAdding(false)}>Cancelar\r\n                             </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default AddMarkerForm"]},"metadata":{},"sourceType":"module"}