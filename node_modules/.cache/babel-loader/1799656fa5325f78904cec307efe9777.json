{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\src\\\\components\\\\Fantoma\\\\FantomaOdontogram.jsx\";\nimport React, { useRef, useState } from 'react';\nimport { useGLTF } from '@react-three/drei/useGLTF';\nimport * as THREE from 'three';\nexport default function Model(props) {\n  var _this = this;\n\n  var group = useRef();\n\n  var _useGLTF = useGLTF('/mesh/fantoma.gltf'),\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials;\n\n  console.log(props.teeth);\n\n  var TeethMeshes = function TeethMeshes(e) {\n    if (typeof props.teeth !== 'undefined') {\n      return Object.keys(props.teeth).map(function (item, i) {\n        return function () {\n          switch (Object.values(props.teeth)[i].teeth_state_id) {\n            case 1:\n              return console.log('Ausente');\n              break;\n\n            case 2:\n              return /*#__PURE__*/React.createElement(\"mesh\", {\n                key: Object.values(props.teeth)[i].fdi_name,\n                material: materials.esmalte,\n                geometry: nodes[Object.values(props.teeth)[i].fdi_name].geometry,\n                position: nodes[Object.values(props.teeth)[i].fdi_name].position,\n                rotation: nodes[Object.values(props.teeth)[i].fdi_name].rotation,\n                scale: nodes[Object.values(props.teeth)[i].fdi_name].scale,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 42\n                }\n              });\n              break;\n\n            case 3:\n              return /*#__PURE__*/React.createElement(\"mesh\", {\n                key: Object.values(props.teeth)[i].fdi_name + 'DF',\n                material: materials.esmalte,\n                geometry: nodes[Object.values(props.teeth)[i].fdi_name + 'DF'].geometry,\n                position: nodes[Object.values(props.teeth)[i].fdi_name + 'DF'].position,\n                rotation: nodes[Object.values(props.teeth)[i].fdi_name + 'DF'].rotation,\n                scale: nodes[Object.values(props.teeth)[i].fdi_name + 'DF'].scale,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 41\n                }\n              });\n              break;\n\n            case 4:\n              return /*#__PURE__*/React.createElement(\"mesh\", {\n                key: Object.values(props.teeth)[i].fdi_name + 'RR',\n                material: materials.esmalte,\n                geometry: nodes[Object.values(props.teeth)[i].fdi_name + 'RR'].geometry,\n                position: nodes[Object.values(props.teeth)[i].fdi_name + 'RR'].position,\n                rotation: nodes[Object.values(props.teeth)[i].fdi_name + 'RR'].rotation,\n                scale: nodes[Object.values(props.teeth)[i].fdi_name + 'RR'].scale,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 41\n                }\n              });\n              break;\n\n            case 5:\n              return console.log('Implante');\n              break;\n\n            default:\n              return console.log('Default');\n          }\n        }();\n      });\n    }\n\n    e.stopPropagation();\n  };\n\n  return /*#__PURE__*/React.createElement(\"group\", Object.assign({\n    ref: group\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    material: materials.encia,\n    geometry: nodes.reb_alv_inf_papilas.geometry,\n    position: [-0.000799172383267432, -0.009652681648731232, 0.03410725295543671],\n    rotation: [1.8928228644193699, 0, 0],\n    scale: [0.2582273781299591, 0.2582273781299591, 0.2582273781299591],\n    \"material-opacity\": props.opacity,\n    \"material-transparent\": true,\n    \"material-side\": THREE.FrontSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    material: materials.encia,\n    geometry: nodes.reb_alv_sup_papilas.geometry,\n    position: [0.000345383945386857, 0.025681160390377045, 0.050578609108924866],\n    rotation: [1.7410711657057512, 0, 0],\n    scale: [0.27773573994636536, 0.35650089383125305, 0.2803818881511688],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TeethMeshes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }));\n}\nuseGLTF.preload('/mesh/fantoma.gltf');","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/components/Fantoma/FantomaOdontogram.jsx"],"names":["React","useRef","useState","useGLTF","THREE","Model","props","group","nodes","materials","console","log","teeth","TeethMeshes","e","Object","keys","map","item","i","values","teeth_state_id","fdi_name","esmalte","geometry","position","rotation","scale","stopPropagation","encia","reb_alv_inf_papilas","opacity","FrontSide","reb_alv_sup_papilas","preload"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { useGLTF } from '@react-three/drei/useGLTF'\r\nimport * as THREE from 'three'\r\n\r\nexport default function Model(props) {\r\n\r\n    const group = useRef()\r\n\r\n    const { nodes, materials } = useGLTF('/mesh/fantoma.gltf')\r\n    console.log(props.teeth)\r\n    \r\n    const TeethMeshes =(e) =>{\r\n        if (typeof props.teeth  !== 'undefined' ){\r\n            return(\r\n                Object.keys(props.teeth).map((item, i) => ( \r\n                        (() => {\r\n                            switch (Object.values(props.teeth)[i].teeth_state_id) {\r\n                \r\n                                case 1:\r\n                                    return (console.log('Ausente'))\r\n                                    break;\r\n                                case 2:\r\n                                    return (\r\n                                         <mesh\r\n                                            key={Object.values(props.teeth)[i].fdi_name}\r\n                                            material={materials.esmalte}\r\n                                            geometry={nodes[Object.values(props.teeth)[i].fdi_name].geometry}\r\n                                            position={nodes[Object.values(props.teeth)[i].fdi_name].position}\r\n                                            rotation={nodes[Object.values(props.teeth)[i].fdi_name].rotation}\r\n                                            scale={nodes[Object.values(props.teeth)[i].fdi_name].scale}\r\n                                        /> \r\n                                    )\r\n                                    break\r\n                                case 3:\r\n                                    return (\r\n                                        <mesh\r\n                                            key={Object.values(props.teeth)[i].fdi_name+'DF'}\r\n                                            material={materials.esmalte}\r\n                                            geometry={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].geometry}\r\n                                            position={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].position}\r\n                                            rotation={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].rotation}\r\n                                            scale={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].scale}\r\n                                        />\r\n                                    )\r\n                                    break\r\n                                case 4:\r\n                                    return (\r\n                                        <mesh\r\n                                            key={Object.values(props.teeth)[i].fdi_name+'RR'}\r\n                                            material={materials.esmalte}\r\n                                            geometry={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].geometry}\r\n                                            position={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].position}\r\n                                            rotation={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].rotation}\r\n                                            scale={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].scale}\r\n                                        />\r\n                                    )\r\n                                    break;\r\n                                case 5:\r\n                                    return (console.log('Implante'))\r\n                                    break;\r\n                                default:\r\n                                    return (console.log('Default'))\r\n                                \r\n                            }\r\n                        })()\r\n                    )\r\n                ) \r\n            )\r\n        }\r\n        e.stopPropagation()\r\n    }  \r\n\r\n    return (\r\n\r\n        <group ref={group} {...props}>        \r\n\r\n            <mesh\r\n                material={materials.encia}\r\n                geometry={nodes.reb_alv_inf_papilas.geometry}\r\n                position={[-0.000799172383267432, -0.009652681648731232, 0.03410725295543671]}\r\n                rotation={[1.8928228644193699, 0, 0]}\r\n                scale={[0.2582273781299591, 0.2582273781299591, 0.2582273781299591]}\r\n                material-opacity={props.opacity}\r\n                material-transparent={true}\r\n                material-side={THREE.FrontSide}\r\n            />\r\n            <mesh\r\n                material={materials.encia}\r\n                geometry={nodes.reb_alv_sup_papilas.geometry}\r\n                position={[0.000345383945386857, 0.025681160390377045, 0.050578609108924866]}\r\n                rotation={[1.7410711657057512, 0, 0]}\r\n                scale={[0.27773573994636536, 0.35650089383125305, 0.2803818881511688]}\r\n            />\r\n            {\r\n            <TeethMeshes/>\r\n            }\r\n        </group>\r\n    )\r\n\r\n}\r\n\r\nuseGLTF.preload('/mesh/fantoma.gltf')\r\n"]},"metadata":{},"sourceType":"module"}