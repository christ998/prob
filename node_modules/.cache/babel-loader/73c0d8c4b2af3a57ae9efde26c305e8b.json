{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\src\\\\views\\\\pages\\\\forms\\\\Validation.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classnames from \"classnames\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Container, Row, Col } from \"reactstrap\"; // core components\n\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\n\nvar Validation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Validation, _React$Component);\n\n  var _super = _createSuper(Validation);\n\n  function Validation() {\n    var _this;\n\n    _classCallCheck(this, Validation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      customStyles: {\n        firstName: \"Mark\",\n        firstNameState: null,\n        lastName: \"Otto\",\n        lastNameState: null,\n        username: \"\",\n        usernameState: null,\n        city: \"\",\n        cityState: null,\n        state: \"\",\n        stateState: null,\n        zip: \"\",\n        zipState: null,\n        checkbox: false,\n        checkboxState: null\n      }\n    };\n\n    _this.validateCustomStylesForm = function () {\n      var newState = _this.state.customStyles;\n\n      if (newState.firstName === \"\") {\n        newState.firstNameState = \"invalid\";\n      } else {\n        newState.firstNameState = \"valid\";\n      }\n\n      if (newState.lastName === \"\") {\n        newState.lastNameState = \"invalid\";\n      } else {\n        newState.lastNameState = \"valid\";\n      }\n\n      if (newState.username === \"\") {\n        newState.usernameState = \"invalid\";\n      } else {\n        newState.usernameState = \"valid\";\n      }\n\n      if (newState.city === \"\") {\n        newState.cityState = \"invalid\";\n      } else {\n        newState.cityState = \"valid\";\n      }\n\n      if (newState.state === \"\") {\n        newState.stateState = \"invalid\";\n      } else {\n        newState.stateState = \"valid\";\n      }\n\n      if (newState.zip === \"\") {\n        newState.zipState = \"invalid\";\n      } else {\n        newState.zipState = \"valid\";\n      }\n\n      if (newState.checkbox === false) {\n        newState.checkboxState = \"invalid\";\n      } else {\n        newState.checkboxState = \"valid\";\n      }\n\n      _this.setState({\n        customStyles: newState\n      });\n    };\n\n    _this.customStylesForm = function (e, stateName) {\n      var newState = _this.state.customStyles;\n      newState[stateName] = e.target.value;\n\n      if (stateName === \"checkbox\") {\n        if (e.target.value) {\n          newState.checkboxState = \"valid\";\n        } else {\n          newState.checkboxState = \"invalid\";\n        }\n      } else {\n        if (e.target.value === \"\") {\n          newState[stateName + \"State\"] = \"invalid\";\n        } else {\n          newState[stateName + \"State\"] = \"valid\";\n        }\n      }\n\n      _this.setState({\n        customStyles: newState\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Validation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SimpleHeader, {\n        name: \"Form validation\",\n        parentName: \"Forms\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Container, {\n        className: \"mt--6\",\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, \"Custom styles\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }, \"For custom form validation messages, you\\u2019ll need to add the novalidate boolean attribute to your\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 27\n        }\n      }, \"<form>\"), \". This disables the browser default feedback tooltips, but still provides access to the form validation APIs in JavaScript. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 70\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 27\n        }\n      }), \"When attempting to submit, you\\u2019ll see the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 27\n        }\n      }, \":invalid\"), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 53\n        }\n      }, \":valid\"), \" styles applied to your form controls.\"))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        className: \"needs-validation\",\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationCustom01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 27\n        }\n      }, \"First name\"), /*#__PURE__*/React.createElement(Input, {\n        defaultValue: \"Mark\",\n        id: \"validationCustom01\",\n        placeholder: \"First name\",\n        type: \"text\",\n        valid: this.state.customStyles.firstNameState === \"valid\",\n        invalid: this.state.customStyles.firstNameState === \"invalid\",\n        onChange: function onChange(e) {\n          return _this2.customStylesForm(e, \"firstName\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 27\n        }\n      }, \"Looks good!\")), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationCustom02\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 27\n        }\n      }, \"Last name\"), /*#__PURE__*/React.createElement(Input, {\n        defaultValue: \"Otto\",\n        id: \"validationCustom02\",\n        placeholder: \"Last name\",\n        type: \"text\",\n        valid: this.state.customStyles.lastNameState === \"valid\",\n        invalid: this.state.customStyles.lastNameState === \"invalid\",\n        onChange: function onChange(e) {\n          return _this2.customStylesForm(e, \"lastName\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 27\n        }\n      }, \"Looks good!\")), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationCustomUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 27\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n        \"aria-describedby\": \"inputGroupPrepend\",\n        id: \"validationCustomUsername\",\n        placeholder: \"Username\",\n        type: \"text\",\n        valid: this.state.customStyles.usernameState === \"valid\",\n        invalid: this.state.customStyles.usernameState === \"invalid\",\n        onChange: function onChange(e) {\n          return _this2.customStylesForm(e, \"username\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 27\n        }\n      }, \"Please choose a username.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationCustom03\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 27\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"validationCustom03\",\n        placeholder: \"City\",\n        type: \"text\",\n        valid: this.state.customStyles.cityState === \"valid\",\n        invalid: this.state.customStyles.cityState === \"invalid\",\n        onChange: function onChange(e) {\n          return _this2.customStylesForm(e, \"city\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 27\n        }\n      }, \"Please provide a valid city.\")), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationCustom04\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 27\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"validationCustom04\",\n        placeholder: \"State\",\n        type: \"text\",\n        valid: this.state.customStyles.stateState === \"valid\",\n        invalid: this.state.customStyles.stateState === \"invalid\",\n        onChange: function onChange(e) {\n          return _this2.customStylesForm(e, \"state\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 27\n        }\n      }, \"Please provide a valid state.\")), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationCustom05\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 27\n        }\n      }, \"Zip\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"validationCustom05\",\n        placeholder: \"Zip\",\n        type: \"text\",\n        valid: this.state.customStyles.zipState === \"valid\",\n        invalid: this.state.customStyles.zipState === \"invalid\",\n        onChange: function onChange(e) {\n          return _this2.customStylesForm(e, \"zip\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 27\n        }\n      }, \"Please provide a valid zip.\"))), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"custom-control-input\",\n        defaultValue: \"\",\n        id: \"invalidCheck\",\n        type: \"checkbox\",\n        valid: (this.state.customStyles.checkboxState === \"valid\").toString(),\n        invalid: (this.state.customStyles.checkboxState === \"invalid\").toString(),\n        onChange: function onChange(e) {\n          return _this2.customStylesForm(e, \"checkbox\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"invalidCheck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 27\n        }\n      }, \"Agree to terms and conditions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 27\n        }\n      }, \"You must agree before submitting.\"))), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.validateCustomStylesForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 23\n        }\n      }, \"Submit form\")))), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }\n      }, \"Browser defaults\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }\n      }, \"Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you\\u2019ll see a slightly different style of feedback.\", \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 27\n        }\n      }), \"While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.\"))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationDefault01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }\n      }, \"First name\"), /*#__PURE__*/React.createElement(Input, {\n        defaultValue: \"Mark\",\n        id: \"validationDefault01\",\n        placeholder: \"First name\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationDefault02\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 29\n        }\n      }, \"Last name\"), /*#__PURE__*/React.createElement(Input, {\n        defaultValue: \"Otto\",\n        id: \"validationDefault02\",\n        placeholder: \"Last name\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: classnames({\n          focused: this.state.focused\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationDefaultUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 29\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(InputGroupText, {\n        id: \"inputGroupPrepend2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 33\n        }\n      }, \"@\")), /*#__PURE__*/React.createElement(Input, {\n        \"aria-describedby\": \"inputGroupPrepend2\",\n        id: \"validationDefaultUsername\",\n        placeholder: \"Username\",\n        required: true,\n        type: \"text\",\n        onFocus: function onFocus() {\n          return _this2.setState({\n            focused: true\n          });\n        },\n        onBlur: function onBlur() {\n          return _this2.setState({\n            focused: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 31\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationDefault03\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 29\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"validationDefault03\",\n        placeholder: \"City\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationDefault04\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 29\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"validationDefault04\",\n        placeholder: \"State\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationDefault05\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 29\n        }\n      }, \"Zip\"), /*#__PURE__*/React.createElement(Input, {\n        id: \"validationDefault05\",\n        placeholder: \"Zip\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"custom-control-input\",\n        defaultValue: \"\",\n        id: \"invalidCheck2\",\n        required: true,\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"invalidCheck2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 27\n        }\n      }, \"Agree to terms and conditions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 27\n        }\n      }, \"You must agree before submitting.\"))), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 23\n        }\n      }, \"Submit form\")))), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 21\n        }\n      }, \"Server side\")), /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 25\n        }\n      }, \"We recommend using client side validation, but in case you require server side, you can indicate invalid and valid form fields with \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 50\n        }\n      }, \".is-invalid\"), \" and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 27\n        }\n      }, \".is-valid\"), \". Note that\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 27\n        }\n      }, \".invalid-feedback\"), \" is also supported with these classes.\"))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationServer01\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 29\n        }\n      }, \"First name\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"is-valid\",\n        defaultValue: \"Mark\",\n        id: \"validationServer01\",\n        placeholder: \"First name\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 29\n        }\n      }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationServer02\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 29\n        }\n      }, \"Last name\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"is-valid\",\n        defaultValue: \"Otto\",\n        id: \"validationServer02\",\n        placeholder: \"Last name\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"valid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 29\n        }\n      }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationServerUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 29\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n        \"aria-describedby\": \"inputGroupPrepend3\",\n        className: \"is-invalid\",\n        id: \"validationServerUsername\",\n        placeholder: \"Username\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationServer03\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 29\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"is-invalid\",\n        id: \"validationServer03\",\n        placeholder: \"City\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 29\n        }\n      }, \"Please provide a valid city.\"))), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationServer04\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 29\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"is-invalid\",\n        id: \"validationServer04\",\n        placeholder: \"State\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 29\n        }\n      }, \"Please provide a valid state.\"))), /*#__PURE__*/React.createElement(Col, {\n        className: \"mb-3\",\n        md: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-control-label\",\n        htmlFor: \"validationServer05\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 29\n        }\n      }, \"Zip\"), /*#__PURE__*/React.createElement(Input, {\n        className: \"is-invalid\",\n        id: \"validationServer05\",\n        placeholder: \"Zip\",\n        required: true,\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 29\n        }\n      }, \"Please provide a valid zip.\")))), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"has-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-control custom-checkbox mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"custom-control-input is-invalid\",\n        defaultValue: \"\",\n        id: \"invalidCheck3\",\n        required: true,\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"custom-control-label\",\n        htmlFor: \"invalidCheck3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 27\n        }\n      }, \"Agree to terms and conditions\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 27\n        }\n      }, \"You must agree before submitting.\"))), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 23\n        }\n      }, \"Submit form\")))))))));\n    }\n  }]);\n\n  return Validation;\n}(React.Component);\n\nexport default Validation;","map":{"version":3,"sources":["C:/Users/Christian/WebstormProjects/teleodontoweb/src/views/pages/forms/Validation.js"],"names":["React","classnames","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Container","Row","Col","SimpleHeader","Validation","state","customStyles","firstName","firstNameState","lastName","lastNameState","username","usernameState","city","cityState","stateState","zip","zipState","checkbox","checkboxState","validateCustomStylesForm","newState","setState","customStylesForm","e","stateName","target","value","toString","focused","Component"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n// core components\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nclass Validation extends React.Component {\r\n  state = {\r\n    customStyles: {\r\n      firstName: \"Mark\",\r\n      firstNameState: null,\r\n      lastName: \"Otto\",\r\n      lastNameState: null,\r\n      username: \"\",\r\n      usernameState: null,\r\n      city: \"\",\r\n      cityState: null,\r\n      state: \"\",\r\n      stateState: null,\r\n      zip: \"\",\r\n      zipState: null,\r\n      checkbox: false,\r\n      checkboxState: null\r\n    }\r\n  };\r\n  validateCustomStylesForm = () => {\r\n    let newState = this.state.customStyles;\r\n    if (newState.firstName === \"\") {\r\n      newState.firstNameState = \"invalid\";\r\n    } else {\r\n      newState.firstNameState = \"valid\";\r\n    }\r\n    if (newState.lastName === \"\") {\r\n      newState.lastNameState = \"invalid\";\r\n    } else {\r\n      newState.lastNameState = \"valid\";\r\n    }\r\n    if (newState.username === \"\") {\r\n      newState.usernameState = \"invalid\";\r\n    } else {\r\n      newState.usernameState = \"valid\";\r\n    }\r\n    if (newState.city === \"\") {\r\n      newState.cityState = \"invalid\";\r\n    } else {\r\n      newState.cityState = \"valid\";\r\n    }\r\n    if (newState.state === \"\") {\r\n      newState.stateState = \"invalid\";\r\n    } else {\r\n      newState.stateState = \"valid\";\r\n    }\r\n    if (newState.zip === \"\") {\r\n      newState.zipState = \"invalid\";\r\n    } else {\r\n      newState.zipState = \"valid\";\r\n    }\r\n    if (newState.checkbox === false) {\r\n      newState.checkboxState = \"invalid\";\r\n    } else {\r\n      newState.checkboxState = \"valid\";\r\n    }\r\n    this.setState({\r\n      customStyles: newState\r\n    });\r\n  };\r\n  customStylesForm = (e, stateName) => {\r\n    let newState = this.state.customStyles;\r\n    newState[stateName] = e.target.value;\r\n    if (stateName === \"checkbox\") {\r\n      if (e.target.value) {\r\n        newState.checkboxState = \"valid\";\r\n      } else {\r\n        newState.checkboxState = \"invalid\";\r\n      }\r\n    } else {\r\n      if (e.target.value === \"\") {\r\n        newState[stateName + \"State\"] = \"invalid\";\r\n      } else {\r\n        newState[stateName + \"State\"] = \"valid\";\r\n      }\r\n    }\r\n    this.setState({\r\n      customStyles: newState\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <SimpleHeader name=\"Form validation\" parentName=\"Forms\" />\r\n        <Container className=\"mt--6\" fluid>\r\n          <Row>\r\n            <div className=\"col\">\r\n              <div className=\"card-wrapper\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <h3 className=\"mb-0\">Custom styles</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Row>\r\n                      <Col lg=\"8\">\r\n                        <p className=\"mb-0\">\r\n                          For custom form validation messages, you’ll need to\r\n                          add the novalidate boolean attribute to your{\" \"}\r\n                          <code>{`<form>`}</code>. This disables the browser\r\n                          default feedback tooltips, but still provides access\r\n                          to the form validation APIs in JavaScript. <br />\r\n                          <br />\r\n                          When attempting to submit, you’ll see the{\" \"}\r\n                          <code>:invalid</code> and <code>:valid</code> styles\r\n                          applied to your form controls.\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Form className=\"needs-validation\" noValidate>\r\n                      <div className=\"form-row\">\r\n                        <Col className=\"mb-3\" md=\"4\">\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"validationCustom01\"\r\n                          >\r\n                            First name\r\n                          </label>\r\n                          <Input\r\n                            defaultValue=\"Mark\"\r\n                            id=\"validationCustom01\"\r\n                            placeholder=\"First name\"\r\n                            type=\"text\"\r\n                            valid={\r\n                              this.state.customStyles.firstNameState === \"valid\"\r\n                            }\r\n                            invalid={\r\n                              this.state.customStyles.firstNameState ===\r\n                              \"invalid\"\r\n                            }\r\n                            onChange={e =>\r\n                              this.customStylesForm(e, \"firstName\")\r\n                            }\r\n                          />\r\n                          <div className=\"valid-feedback\">Looks good!</div>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"4\">\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"validationCustom02\"\r\n                          >\r\n                            Last name\r\n                          </label>\r\n                          <Input\r\n                            defaultValue=\"Otto\"\r\n                            id=\"validationCustom02\"\r\n                            placeholder=\"Last name\"\r\n                            type=\"text\"\r\n                            valid={\r\n                              this.state.customStyles.lastNameState === \"valid\"\r\n                            }\r\n                            invalid={\r\n                              this.state.customStyles.lastNameState ===\r\n                              \"invalid\"\r\n                            }\r\n                            onChange={e => this.customStylesForm(e, \"lastName\")}\r\n                          />\r\n                          <div className=\"valid-feedback\">Looks good!</div>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"4\">\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"validationCustomUsername\"\r\n                          >\r\n                            Username\r\n                          </label>\r\n                          <Input\r\n                            aria-describedby=\"inputGroupPrepend\"\r\n                            id=\"validationCustomUsername\"\r\n                            placeholder=\"Username\"\r\n                            type=\"text\"\r\n                            valid={\r\n                              this.state.customStyles.usernameState === \"valid\"\r\n                            }\r\n                            invalid={\r\n                              this.state.customStyles.usernameState ===\r\n                              \"invalid\"\r\n                            }\r\n                            onChange={e => this.customStylesForm(e, \"username\")}\r\n                          />\r\n                          <div className=\"invalid-feedback\">\r\n                            Please choose a username.\r\n                          </div>\r\n                        </Col>\r\n                      </div>\r\n                      <div className=\"form-row\">\r\n                        <Col className=\"mb-3\" md=\"6\">\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"validationCustom03\"\r\n                          >\r\n                            City\r\n                          </label>\r\n                          <Input\r\n                            id=\"validationCustom03\"\r\n                            placeholder=\"City\"\r\n                            type=\"text\"\r\n                            valid={\r\n                              this.state.customStyles.cityState === \"valid\"\r\n                            }\r\n                            invalid={\r\n                              this.state.customStyles.cityState === \"invalid\"\r\n                            }\r\n                            onChange={e => this.customStylesForm(e, \"city\")}\r\n                          />\r\n                          <div className=\"invalid-feedback\">\r\n                            Please provide a valid city.\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"3\">\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"validationCustom04\"\r\n                          >\r\n                            State\r\n                          </label>\r\n                          <Input\r\n                            id=\"validationCustom04\"\r\n                            placeholder=\"State\"\r\n                            type=\"text\"\r\n                            valid={\r\n                              this.state.customStyles.stateState === \"valid\"\r\n                            }\r\n                            invalid={\r\n                              this.state.customStyles.stateState === \"invalid\"\r\n                            }\r\n                            onChange={e => this.customStylesForm(e, \"state\")}\r\n                          />\r\n                          <div className=\"invalid-feedback\">\r\n                            Please provide a valid state.\r\n                          </div>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"3\">\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"validationCustom05\"\r\n                          >\r\n                            Zip\r\n                          </label>\r\n                          <Input\r\n                            id=\"validationCustom05\"\r\n                            placeholder=\"Zip\"\r\n                            type=\"text\"\r\n                            valid={this.state.customStyles.zipState === \"valid\"}\r\n                            invalid={\r\n                              this.state.customStyles.zipState === \"invalid\"\r\n                            }\r\n                            onChange={e => this.customStylesForm(e, \"zip\")}\r\n                          />\r\n                          <div className=\"invalid-feedback\">\r\n                            Please provide a valid zip.\r\n                          </div>\r\n                        </Col>\r\n                      </div>\r\n                      <FormGroup>\r\n                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                          <input\r\n                            className=\"custom-control-input\"\r\n                            defaultValue=\"\"\r\n                            id=\"invalidCheck\"\r\n                            type=\"checkbox\"\r\n                            valid={(\r\n                              this.state.customStyles.checkboxState === \"valid\"\r\n                            ).toString()}\r\n                            invalid={(\r\n                              this.state.customStyles.checkboxState ===\r\n                              \"invalid\"\r\n                            ).toString()}\r\n                            onChange={e => this.customStylesForm(e, \"checkbox\")}\r\n                          />\r\n                          <label\r\n                            className=\"custom-control-label\"\r\n                            htmlFor=\"invalidCheck\"\r\n                          >\r\n                            Agree to terms and conditions\r\n                          </label>\r\n                          <div className=\"invalid-feedback\">\r\n                            You must agree before submitting.\r\n                          </div>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={this.validateCustomStylesForm}\r\n                      >\r\n                        Submit form\r\n                      </Button>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <h3 className=\"mb-0\">Browser defaults</h3>\r\n                  </CardHeader>\r\n\r\n                  <CardBody>\r\n                    <Row>\r\n                      <Col lg=\"8\">\r\n                        <p className=\"mb-0\">\r\n                          Not interested in custom validation feedback messages\r\n                          or writing JavaScript to change form behaviors? All\r\n                          good, you can use the browser defaults. Try submitting\r\n                          the form below. Depending on your browser and OS,\r\n                          you’ll see a slightly different style of feedback.{\" \"}\r\n                          <br />\r\n                          <br />\r\n                          While these feedback styles cannot be styled with CSS,\r\n                          you can still customize the feedback text through\r\n                          JavaScript.\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Form>\r\n                      <div className=\"form-row\">\r\n                        <Col className=\"mb-3\" md=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationDefault01\"\r\n                            >\r\n                              First name\r\n                            </label>\r\n                            <Input\r\n                              defaultValue=\"Mark\"\r\n                              id=\"validationDefault01\"\r\n                              placeholder=\"First name\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"4\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationDefault02\"\r\n                            >\r\n                              Last name\r\n                            </label>\r\n                            <Input\r\n                              defaultValue=\"Otto\"\r\n                              id=\"validationDefault02\"\r\n                              placeholder=\"Last name\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"4\">\r\n                          <FormGroup\r\n                            className={classnames({\r\n                              focused: this.state.focused\r\n                            })}\r\n                          >\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationDefaultUsername\"\r\n                            >\r\n                              Username\r\n                            </label>\r\n                            <InputGroup>\r\n                              <InputGroupAddon addonType=\"prepend\">\r\n                                <InputGroupText id=\"inputGroupPrepend2\">\r\n                                  @\r\n                                </InputGroupText>\r\n                              </InputGroupAddon>\r\n                              <Input\r\n                                aria-describedby=\"inputGroupPrepend2\"\r\n                                id=\"validationDefaultUsername\"\r\n                                placeholder=\"Username\"\r\n                                required\r\n                                type=\"text\"\r\n                                onFocus={() => this.setState({ focused: true })}\r\n                                onBlur={() => this.setState({ focused: false })}\r\n                              />\r\n                            </InputGroup>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n                      <div className=\"form-row\">\r\n                        <Col className=\"mb-3\" md=\"6\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationDefault03\"\r\n                            >\r\n                              City\r\n                            </label>\r\n                            <Input\r\n                              id=\"validationDefault03\"\r\n                              placeholder=\"City\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"3\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationDefault04\"\r\n                            >\r\n                              State\r\n                            </label>\r\n                            <Input\r\n                              id=\"validationDefault04\"\r\n                              placeholder=\"State\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"3\">\r\n                          <FormGroup>\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationDefault05\"\r\n                            >\r\n                              Zip\r\n                            </label>\r\n                            <Input\r\n                              id=\"validationDefault05\"\r\n                              placeholder=\"Zip\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n                      <FormGroup>\r\n                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                          <input\r\n                            className=\"custom-control-input\"\r\n                            defaultValue=\"\"\r\n                            id=\"invalidCheck2\"\r\n                            required\r\n                            type=\"checkbox\"\r\n                          />\r\n                          <label\r\n                            className=\"custom-control-label\"\r\n                            htmlFor=\"invalidCheck2\"\r\n                          >\r\n                            Agree to terms and conditions\r\n                          </label>\r\n                          <div className=\"invalid-feedback\">\r\n                            You must agree before submitting.\r\n                          </div>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Submit form\r\n                      </Button>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <h3 className=\"mb-0\">Server side</h3>\r\n                  </CardHeader>\r\n\r\n                  <CardBody>\r\n                    <Row>\r\n                      <Col lg=\"8\">\r\n                        <p className=\"mb-0\">\r\n                          We recommend using client side validation, but in case\r\n                          you require server side, you can indicate invalid and\r\n                          valid form fields with <code>.is-invalid</code> and{\" \"}\r\n                          <code>.is-valid</code>. Note that{\" \"}\r\n                          <code>.invalid-feedback</code> is also supported with\r\n                          these classes.\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Form>\r\n                      <div className=\"form-row\">\r\n                        <Col className=\"mb-3\" md=\"4\">\r\n                          <FormGroup className=\"has-success\">\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationServer01\"\r\n                            >\r\n                              First name\r\n                            </label>\r\n                            <Input\r\n                              className=\"is-valid\"\r\n                              defaultValue=\"Mark\"\r\n                              id=\"validationServer01\"\r\n                              placeholder=\"First name\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"4\">\r\n                          <FormGroup className=\"has-success\">\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationServer02\"\r\n                            >\r\n                              Last name\r\n                            </label>\r\n                            <Input\r\n                              className=\"is-valid\"\r\n                              defaultValue=\"Otto\"\r\n                              id=\"validationServer02\"\r\n                              placeholder=\"Last name\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                            <div className=\"valid-feedback\">Looks good!</div>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"4\">\r\n                          <FormGroup className=\"has-danger\">\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationServerUsername\"\r\n                            >\r\n                              Username\r\n                            </label>\r\n                            <Input\r\n                              aria-describedby=\"inputGroupPrepend3\"\r\n                              className=\"is-invalid\"\r\n                              id=\"validationServerUsername\"\r\n                              placeholder=\"Username\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n                      <div className=\"form-row\">\r\n                        <Col className=\"mb-3\" md=\"6\">\r\n                          <FormGroup className=\"has-danger\">\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationServer03\"\r\n                            >\r\n                              City\r\n                            </label>\r\n                            <Input\r\n                              className=\"is-invalid\"\r\n                              id=\"validationServer03\"\r\n                              placeholder=\"City\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                              Please provide a valid city.\r\n                            </div>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"3\">\r\n                          <FormGroup className=\"has-danger\">\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationServer04\"\r\n                            >\r\n                              State\r\n                            </label>\r\n                            <Input\r\n                              className=\"is-invalid\"\r\n                              id=\"validationServer04\"\r\n                              placeholder=\"State\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                              Please provide a valid state.\r\n                            </div>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"mb-3\" md=\"3\">\r\n                          <FormGroup className=\"has-danger\">\r\n                            <label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"validationServer05\"\r\n                            >\r\n                              Zip\r\n                            </label>\r\n                            <Input\r\n                              className=\"is-invalid\"\r\n                              id=\"validationServer05\"\r\n                              placeholder=\"Zip\"\r\n                              required\r\n                              type=\"text\"\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                              Please provide a valid zip.\r\n                            </div>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </div>\r\n                      <FormGroup className=\"has-danger\">\r\n                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                          <input\r\n                            className=\"custom-control-input is-invalid\"\r\n                            defaultValue=\"\"\r\n                            id=\"invalidCheck3\"\r\n                            required\r\n                            type=\"checkbox\"\r\n                          />\r\n                          <label\r\n                            className=\"custom-control-label\"\r\n                            htmlFor=\"invalidCheck3\"\r\n                          >\r\n                            Agree to terms and conditions\r\n                          </label>\r\n                          <div className=\"invalid-feedback\">\r\n                            You must agree before submitting.\r\n                          </div>\r\n                        </div>\r\n                      </FormGroup>\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Submit form\r\n                      </Button>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Validation;\r\n"]},"metadata":{},"sourceType":"module"}