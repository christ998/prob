{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\src\\\\views\\\\pages\\\\patient\\\\medical-anamnesis-u.js\";\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Col, Container, Form, FormGroup, Input, Card, CardBody, ModalHeader, Label, InputGroup, InputGroupAddon, InputGroupText, CardHeader } from 'reactstrap';\nimport axios from '../../../helpers/axiosConfig';\nimport { getList } from 'helpers/ListHelper';\nimport SimpleModal from \"../components/SimpleModal\";\n\nvar MedicalAnamnesis = function MedicalAnamnesis(_ref) {\n  var location = _ref.location;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      has = _useState2[0],\n      setHas = _useState2[1];\n\n  var modalRef = useRef();\n\n  var setModal = function setModal(options) {\n    modalRef.current.setModal(options);\n  }; //LOCATION###############################################################\n\n\n  useEffect(function () {\n    var _location$state;\n\n    if (!(location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.id)) {\n      location.state.id = 0;\n    }\n\n    fetchLastMedical(location.state.id);\n  }, []); //FILES##################################################################\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageName = _useState4[0],\n      setImageName = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hasFile = _useState8[0],\n      setHasFile = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      images = _useState10[0],\n      setImages = _useState10[1];\n\n  var fetchImages = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(\"photo/medico_geriatra/obtain\", {\n                anamnId: medical.geriatric_medical_anamnesis_id\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (!res.data.error) {\n                setImages(res.data.result);\n                setImageName(\"\");\n                setFile({});\n                setHasFile(false);\n              }\n\n              ;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchImages() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var loadFile = function loadFile(file) {\n    var _file$;\n\n    if ((_file$ = file[0]) === null || _file$ === void 0 ? void 0 : _file$.name) {\n      var filename = file[0].name;\n      filename = filename.slice(0, filename.lastIndexOf('.')); // filename = filename.replace(/\\s+/g, '')\n\n      setImageName(filename);\n      setFile(file);\n    } else {\n      setImageName(\"\");\n      setFile({});\n    }\n\n    ;\n  };\n\n  var saveFile = function saveFile() {\n    if (imageName) {\n      var f = new FormData();\n      f.append(\"file\", file[0], imageName + '.jpg');\n      axios.post(\"file/img_medico/\" + location.state.run, f).then(function (response) {\n        saveImage();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  var saveImage = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"photo/medico_geriatra\", {\n                anamnId: medical.geriatric_medical_anamnesis_id,\n                nombreImagen: imageName + '.jpg',\n                ruta: \"static/images_anam_medico/\" + location.state.run\n              });\n\n            case 2:\n              res = _context2.sent;\n\n              if (!res.data.error) {\n                fetchImages();\n              }\n\n              ;\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function saveImage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var removeImage = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(fId, name) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.post(\"photo/medico_geriatra/rm/\", {\n                fId: fId,\n                route: location.state.run + '/' + name\n              });\n\n            case 2:\n              res = _context3.sent;\n\n              if (!res.data.error) {\n                fetchImages();\n              }\n\n              ;\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function removeImage(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); //CRUD###################################################################\n\n\n  var saveChanges = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.put(\"geriatrical-medical-anamnesis/crud\", medical);\n\n            case 3:\n              res = _context4.sent;\n\n              if (!res.data.error) {\n                console.log('Cambios guardados correctamente!');\n              } else {\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\n              }\n\n              ;\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log('Err: ' + _context4.t0);\n\n            case 11:\n              ;\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n\n    return function saveChanges() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var saveChangesFromButton = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(e) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              e.preventDefault();\n              saveChanges();\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function saveChangesFromButton(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }(); //GROUP#################################################################\n\n\n  var _useState11 = useState('fisical'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      group = _useState12[0],\n      setGroup = _useState12[1];\n\n  var changeGroup = function changeGroup(group) {\n    var form = document.getElementById('id-form-update');\n\n    if (form.checkValidity()) {\n      saveChanges();\n      setGroup(group);\n    } else {\n      document.getElementById('id-btn-save').click();\n    }\n\n    ;\n    fetchImages();\n  }; //MEDICAL###############################################################\n\n\n  var defaultMedical = {\n    geriatric_medical_anamnesis_id: 0,\n    person_id: 0,\n    walking_speed: 0,\n    weight: 0,\n    heigth: 0,\n    bmi: 0,\n    blood_pressure: \"\",\n    temperature: 0,\n    heart_rate: 0,\n    oxygen_saturation: 0,\n    muscular_strength: \"s/e\",\n    glycemia: 0,\n    extra_info: \"\",\n    folestein_mmse: 0,\n    pfeiffer_test: 0,\n    yesavage_test: 0\n  };\n\n  var _useState13 = useState(defaultMedical),\n      _useState14 = _slicedToArray(_useState13, 2),\n      medical = _useState14[0],\n      setMedical = _useState14[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    setMedical(_objectSpread(_objectSpread({}, medical), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  var fetchLastMedical = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(person_id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return getList(\"geriatrical-medical-anamnesis/crud/\" + person_id);\n\n            case 2:\n              res = _context6.sent;\n\n              if (res.length === 1) {\n                setMedical(res[0]);\n                setHas(true);\n              } else {\n                setHas(false);\n              }\n\n              ;\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function fetchLastMedical(_x4) {\n      return _ref7.apply(this, arguments);\n    };\n  }(); //JSX####################################################################\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"heading-small text-muted mb-2 mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Anamnesis M\\xE9dico-geri\\xE1trica\"), !has ? /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, \"El paciente no tiene registros en Anamnesis M\\xE9dico-geri\\xE1trica.\")) : /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pb-0 pt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"pb-5 pl-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    style: _objectSpread({\n      paddingRight: \"15px\",\n      cursor: \"pointer\"\n    }, group === 'fisical' ? {\n      color: \"#11cdef\"\n    } : {}),\n    onClick: function onClick() {\n      return changeGroup('fisical');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, \"Parametros fisicos\"), /*#__PURE__*/React.createElement(\"a\", {\n    style: _objectSpread({\n      paddingRight: \"15px\",\n      cursor: \"pointer\"\n    }, group === 'test' ? {\n      color: \"#11cdef\"\n    } : {}),\n    onClick: function onClick() {\n      return changeGroup('test');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Evaluaciones\"), /*#__PURE__*/React.createElement(\"a\", {\n    style: _objectSpread({\n      paddingRight: \"15px\",\n      cursor: \"pointer\"\n    }, group === 'repo' ? {\n      color: \"#11cdef\"\n    } : {}),\n    onClick: function onClick() {\n      return changeGroup('repo');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, \"Repositorio\")), /*#__PURE__*/React.createElement(Form, {\n    id: \"id-form-update\",\n    onSubmit: function onSubmit(e) {\n      saveChangesFromButton(e);\n    },\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, group === 'fisical' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 41\n    }\n  }, \"Velocidad de marcha\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"walking_speed\",\n    value: medical.walking_speed,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    type: \"number\",\n    step: \"0.1\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 81\n    }\n  }, \"m/s\")))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 41\n    }\n  }, \"Peso\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"weight\",\n    value: medical.weight,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    type: \"number\",\n    step: \"1\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 81\n    }\n  }, \"Kgs\")))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 41\n    }\n  }, \"Altura\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"heigth\",\n    value: medical.heigth,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    type: \"number\",\n    step: \"0.01\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 81\n    }\n  }, \"ms\"))))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 41\n    }\n  }, \"Presi\\xF3n Arterial (Sist\\xF3lica / Diast\\xF3lica)\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"blood_pressure\",\n    value: medical.blood_pressure,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    autoComplete: \"off\",\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 77\n    }\n  }, \"mmHg\")))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  }, \"Temperatura\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"temperature\",\n    value: medical.temperature,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    type: \"number\",\n    step: \"1\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 81\n    }\n  }, \"\\xBAC\")))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 41\n    }\n  }, \"Frecuencia Car\\xEDaca\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"heart_rate\",\n    value: medical.heart_rate,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    type: \"number\",\n    step: \"1\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 81\n    }\n  }, \"lat/m\"))))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 41\n    }\n  }, \"Saturaci\\xF3n de Ox\\xEDgeno\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"oxygen_saturation\",\n    value: medical.oxygen_saturation,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    type: \"number\",\n    step: \"1\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 81\n    }\n  }, \"SpO2\")))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 41\n    }\n  }, \"Fuerza Muscular\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 82\n    }\n  }, \"Grado\")), /*#__PURE__*/React.createElement(Input, {\n    name: \"muscular_strength\",\n    value: medical.muscular_strength,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    type: \"select\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 82\n    }\n  }, \"s/e\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 102\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 120\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 138\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 156\n    }\n  }, \"4-\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 175\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 193\n    }\n  }, \"4+\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 212\n    }\n  }, \"5\")))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 41\n    }\n  }, \"Glicemia\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"glycemia\",\n    value: medical.glycemia,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    type: \"number\",\n    step: \"1\",\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 81\n    }\n  }, \"mg/dl\"))))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 41\n    }\n  }, \"Informaci\\xF3n Adicional\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    autoComplete: \"off\",\n    maxLength: \"250\",\n    name: \"extra_info\",\n    value: medical.extra_info,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 41\n    }\n  })))), group === 'test' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, \"Cuestionario Minimental de Folstein\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    autoComplete: \"off\",\n    name: \"folestein_mmse\",\n    value: medical.folestein_mmse,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    href: \"https://docs.google.com/forms/d/e/1FAIpQLScOfJZpOKaTXd2OQ6RkgpvhByXY51RzeNtlH24rkiQJ1DCZiw/viewform\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 41\n    }\n  }, \"Cuestionario\"))), /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }, \"Test de Pfeiffer\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    autoComplete: \"off\",\n    name: \"pfeiffer_test\",\n    value: medical.pfeiffer_test,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    href: \"https://docs.google.com/forms/d/e/1FAIpQLScOfJZpOKaTXd2OQ6RkgpvhByXY51RzeNtlH24rkiQJ1DCZiw/viewform\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 41\n    }\n  }, \"Cuestionario\"))), /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, \"Cuestionario de Yesavage\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    autoComplete: \"off\",\n    name: \"yesavage_test\",\n    value: medical.yesavage_test,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    href: \"https://docs.google.com/forms/d/e/1FAIpQLScmoS5sWNzDJG9k7ssG4D4M_2jCT8IqplAQ8beLLPZNqfPSjg/viewform\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 41\n    }\n  }, \"Cuestionario\")))), group === 'repo' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 41\n    }\n  }, \"Imagenes disponibles:\"), images.map(function (image) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: image.foto_id,\n      className: \"list-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(SimpleModal, {\n      ref: modalRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      size: \"sm\",\n      outline: true,\n      onClick: function onClick() {\n        return setModal({\n          title: 'Confirmación',\n          text: 'Desea eliminar ' + image.foto_nombre + '?',\n          type: 2,\n          fx: function fx() {\n            return removeImage(image.foto_id, image.foto_nombre);\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 82\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"far fa-trash-alt\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      href: process.env.REACT_APP_API_URL + \"\".concat(image.url) + \"/\" + \"\".concat(image.foto_nombre),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 53\n      }\n    }, image.foto_nombre)));\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 57\n    }\n  }, \"\\xBFSubir una nueva imagen?\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-toggle custom-toggle-info ml-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    checked: hasFile,\n    onChange: function onChange() {\n      return setHasFile(!hasFile);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"custom-toggle-slider rounded-circle\",\n    \"data-label-off\": \"No\",\n    \"data-label-on\": \"S\\xED\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 61\n    }\n  }))))), hasFile && /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return saveFile();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 65\n    }\n  }, \"Agregar\")), /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"treatment_plan\",\n    value: imageName,\n    onChange: function onChange(e) {\n      return setImageName(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    onClick: function onClick() {\n      document.getElementById('files').click();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 65\n    }\n  }, \"Buscar\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    id: \"files\",\n    style: {\n      visibility: 'hidden'\n    },\n    onChange: function onChange(e) {\n      return loadFile(e.target.files);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 57\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right mb-4 mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    id: \"id-btn-save\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 33\n    }\n  }, \"Guardar\"), ' ')))));\n};\n\nexport default MedicalAnamnesis;","map":{"version":3,"sources":["C:/Users/Christian/WebstormProjects/teleodontoweb/src/views/pages/patient/medical-anamnesis-u.js"],"names":["React","useState","useEffect","useRef","Button","Col","Container","Form","FormGroup","Input","Card","CardBody","ModalHeader","Label","InputGroup","InputGroupAddon","InputGroupText","CardHeader","axios","getList","SimpleModal","MedicalAnamnesis","location","has","setHas","modalRef","setModal","options","current","state","id","fetchLastMedical","imageName","setImageName","file","setFile","hasFile","setHasFile","images","setImages","fetchImages","post","anamnId","medical","geriatric_medical_anamnesis_id","res","data","error","result","loadFile","name","filename","slice","lastIndexOf","saveFile","f","FormData","append","run","then","response","saveImage","catch","console","log","nombreImagen","ruta","removeImage","fId","route","saveChanges","put","code","sqlMessage","saveChangesFromButton","e","preventDefault","group","setGroup","changeGroup","form","document","getElementById","checkValidity","click","defaultMedical","person_id","walking_speed","weight","heigth","bmi","blood_pressure","temperature","heart_rate","oxygen_saturation","muscular_strength","glycemia","extra_info","folestein_mmse","pfeiffer_test","yesavage_test","setMedical","handleInputChange","target","value","length","paddingRight","cursor","color","map","image","foto_id","title","text","foto_nombre","type","fx","process","env","REACT_APP_API_URL","url","visibility","files"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, ModalHeader, Label, InputGroup, InputGroupAddon, InputGroupText, CardHeader} from 'reactstrap';\r\nimport axios from '../../../helpers/axiosConfig';\r\nimport {getList} from 'helpers/ListHelper'; \r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst MedicalAnamnesis = ({location}) => {\r\n    const [has, setHas] = useState(false);\r\n\r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options);\r\n    };\r\n\r\n    //LOCATION###############################################################\r\n    useEffect(() => {\r\n        if (!location?.state?.id) { \r\n            location.state.id = 0;\r\n        }\r\n        fetchLastMedical(location.state.id);\r\n    }, []);\r\n\r\n    //FILES##################################################################\r\n    const [imageName, setImageName] = useState(\"\");\r\n    const [file, setFile] = useState({});\r\n    const [hasFile, setHasFile] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n\r\n    const fetchImages = async () => {\r\n        const res = await axios.post(\"photo/medico_geriatra/obtain\", {anamnId: medical.geriatric_medical_anamnesis_id})\r\n        if (!res.data.error) {\r\n            setImages(res.data.result);\r\n            setImageName(\"\");\r\n            setFile({});\r\n            setHasFile(false);\r\n        };       \r\n    };\r\n\r\n    const loadFile = (file) => {\r\n        if (file[0]?.name) {\r\n            let filename = file[0].name;\r\n            filename = filename.slice(0, (filename.lastIndexOf('.')));\r\n            // filename = filename.replace(/\\s+/g, '')\r\n            setImageName(filename);\r\n            setFile(file);\r\n        } else {\r\n            setImageName(\"\");\r\n            setFile({});\r\n        };\r\n    };\r\n\r\n    const saveFile = () => {\r\n        if (imageName) {\r\n            const f = new FormData();\r\n            f.append(\"file\", file[0], imageName + '.jpg');\r\n            axios.post(\"file/img_medico/\" + location.state.run, f)\r\n            .then(response => {\r\n                saveImage();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    };\r\n\r\n    const saveImage = async () => {\r\n        const res = await axios.post(\"photo/medico_geriatra\",\r\n            {\r\n                anamnId : medical.geriatric_medical_anamnesis_id,\r\n                nombreImagen: imageName + '.jpg',\r\n                ruta: \"static/images_anam_medico/\" + location.state.run\r\n            }\r\n        );\r\n        if (!res.data.error) {\r\n            fetchImages();\r\n        }; \r\n    };\r\n\r\n    const removeImage = async (fId, name) => {\r\n        const res = await axios.post(\"photo/medico_geriatra/rm/\", {\r\n            fId : fId,\r\n            route : location.state.run + '/' + name\r\n        });\r\n        if (!res.data.error) {\r\n            fetchImages();\r\n        }; \r\n    }\r\n\r\n    //CRUD###################################################################\r\n    const saveChanges = async () => {\r\n        try {\r\n            const res = await axios.put(\"geriatrical-medical-anamnesis/crud\", medical);\r\n            if (!res.data.error) {\r\n                console.log('Cambios guardados correctamente!');\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            };\r\n\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const saveChangesFromButton = async e => {\r\n        e.preventDefault();\r\n        saveChanges();\r\n    };    \r\n\r\n    //GROUP#################################################################\r\n    const [group, setGroup] = useState('fisical');\r\n    const changeGroup = (group) => {\r\n        var form = document.getElementById('id-form-update');\r\n        if(form.checkValidity()) {\r\n            saveChanges();\r\n            setGroup(group);\r\n        } else {\r\n            document.getElementById('id-btn-save').click();\r\n        };\r\n        fetchImages();\r\n    };\r\n\r\n    //MEDICAL###############################################################\r\n    const defaultMedical = {geriatric_medical_anamnesis_id: 0, person_id: 0, walking_speed: 0, weight: 0, heigth: 0, bmi: 0, blood_pressure: \"\", temperature: 0, heart_rate: 0, oxygen_saturation: 0, muscular_strength: \"s/e\", glycemia: 0, extra_info: \"\", folestein_mmse: 0, pfeiffer_test: 0, yesavage_test: 0};\r\n    const [medical, setMedical] = useState(defaultMedical);\r\n    \r\n    const handleInputChange = e => {\r\n        setMedical({\r\n            ...medical,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const fetchLastMedical = async (person_id) => {\r\n        const res = await getList(\"geriatrical-medical-anamnesis/crud/\" + person_id);\r\n        if (res.length === 1) {\r\n            setMedical(res[0]);\r\n            setHas(true);\r\n        } else {\r\n            setHas(false);\r\n        };        \r\n    };  \r\n\r\n    //JSX####################################################################\r\n    return (\r\n        <Container>\r\n            <h4 className=\"heading-small text-muted mb-2 mt-2\">Anamnesis Médico-geriátrica</h4>\r\n            {!has \r\n                ? <Card><h4>El paciente no tiene registros en Anamnesis Médico-geriátrica.</h4></Card> \r\n                : <Card>\r\n                    <CardBody className=\"pb-0 pt-1\">\r\n                        {/* {location?.state?.run && <h3>{location.state.run} {location.state.name} {location.state.apellido}</h3>} */}\r\n                        <ModalHeader className=\"pb-5 pl-0\">\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'fisical' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('fisical')}>Parametros fisicos</a>\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'test' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('test')}>Evaluaciones</a>\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'repo' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('repo')}>Repositorio</a>\r\n                        </ModalHeader>\r\n\r\n                        <Form id=\"id-form-update\" onSubmit={(e) => {saveChangesFromButton(e)}} role=\"form\">\r\n                            {group === 'fisical' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Velocidad de marcha</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"walking_speed\"\r\n                                                value={medical.walking_speed}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"0.1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>m/s</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Peso</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"weight\"\r\n                                                value={medical.weight}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\"  autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>Kgs</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Altura</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"heigth\"\r\n                                                value={medical.heigth}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"0.01\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>ms</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Presión Arterial (Sistólica / Diastólica)</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"blood_pressure\"\r\n                                                value={medical.blood_pressure}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                autoComplete=\"off\" type=\"text\"\r\n                                            />\r\n                                        <InputGroupAddon addonType=\"append\"><InputGroupText>mmHg</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Temperatura</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"temperature\"\r\n                                                value={medical.temperature}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>ºC</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Frecuencia Caríaca</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"heart_rate\"\r\n                                                value={medical.heart_rate}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>lat/m</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Saturación de Oxígeno</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"oxygen_saturation\"\r\n                                                value={medical.oxygen_saturation}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>SpO2</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Fuerza Muscular</Label>\r\n                                        <InputGroup>\r\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>Grado</InputGroupText></InputGroupAddon>\r\n                                            <Input\r\n                                                name=\"muscular_strength\"\r\n                                                value={medical.muscular_strength}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"select\" autoComplete=\"off\"><option>s/e</option><option>1</option><option>2</option><option>3</option><option>4-</option><option>4</option><option>4+</option><option>5</option>\r\n                                            </Input>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Glicemia</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"glycemia\"\r\n                                                value={medical.glycemia}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>mg/dl</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Información Adicional</Label>\r\n                                        <Input\r\n                                            type=\"textarea\" autoComplete=\"off\" maxLength=\"250\"\r\n                                            name=\"extra_info\"\r\n                                            value={medical.extra_info}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>}\r\n                            {group === 'test' && <>\r\n                                <Label className=\"form-control-label\">Cuestionario Minimental de Folstein</Label>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"10\">\r\n                                        <Input\r\n                                            type=\"number\" autoComplete=\"off\"\r\n                                            name=\"folestein_mmse\"\r\n                                            value={medical.folestein_mmse}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <Button \r\n                                            color=\"secondary\" \r\n                                            href=\"https://docs.google.com/forms/d/e/1FAIpQLScOfJZpOKaTXd2OQ6RkgpvhByXY51RzeNtlH24rkiQJ1DCZiw/viewform\"\r\n                                            target=\"_blank\">Cuestionario\r\n                                        </Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <Label className=\"form-control-label\">Test de Pfeiffer</Label>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"10\">\r\n                                        <Input\r\n                                            type=\"number\" autoComplete=\"off\"\r\n                                            name=\"pfeiffer_test\"\r\n                                            value={medical.pfeiffer_test}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <Button \r\n                                            color=\"secondary\" \r\n                                            href=\"https://docs.google.com/forms/d/e/1FAIpQLScOfJZpOKaTXd2OQ6RkgpvhByXY51RzeNtlH24rkiQJ1DCZiw/viewform\"\r\n                                            target=\"_blank\">Cuestionario\r\n                                        </Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <Label className=\"form-control-label\">Cuestionario de Yesavage</Label>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"10\">\r\n                                        <Input\r\n                                            type=\"number\" autoComplete=\"off\"\r\n                                            name=\"yesavage_test\"\r\n                                            value={medical.yesavage_test}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md=\"2\">\r\n                                        <Button \r\n                                            color=\"secondary\" \r\n                                            href=\"https://docs.google.com/forms/d/e/1FAIpQLScmoS5sWNzDJG9k7ssG4D4M_2jCT8IqplAQ8beLLPZNqfPSjg/viewform\"\r\n                                            target=\"_blank\">Cuestionario\r\n                                        </Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>}\r\n                            {group === 'repo' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label\">Imagenes disponibles:</Label>\r\n                                        {images.map((image) => (\r\n                                            <div key={image.foto_id} className=\"list-group\">\r\n                                                <InputGroup>\r\n                                                    <SimpleModal ref={modalRef}/><Button color=\"danger\" size=\"sm\" outline onClick={\r\n                                                        () => setModal({\r\n                                                            title: 'Confirmación',\r\n                                                            text: 'Desea eliminar ' + image.foto_nombre + '?',\r\n                                                            type: 2,\r\n                                                            fx: () => removeImage(image.foto_id, image.foto_nombre)\r\n                                                        })\r\n                                                    }><i className=\"far fa-trash-alt\"/></Button>\r\n                                                    <a \r\n                                                        rel=\"noopener noreferrer\" \r\n                                                        target=\"_blank\" \r\n                                                        href={process.env.REACT_APP_API_URL + `${image.url}` + \"/\" + `${image.foto_nombre}`}>{image.foto_nombre}\r\n                                                    </a>\r\n                                                </InputGroup>\r\n                                            </div>\r\n                                        ))}\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <Card>\r\n                                            <CardHeader>\r\n                                                <FormGroup className=\"row\">\r\n                                                    <Col className=\"d-flex\">\r\n                                                        <Label className=\"form-control-label\">¿Subir una nueva imagen?</Label>\r\n                                                        <label className=\"custom-toggle custom-toggle-info ml-3\">\r\n                                                            <Input type=\"checkbox\" checked={hasFile} onChange={() => setHasFile(!hasFile)}/>\r\n                                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                        </label>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                            </CardHeader>\r\n                                            {hasFile &&\r\n                                                <CardBody>\r\n                                                    <FormGroup>\r\n                                                        <InputGroup>\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <Button \r\n                                                                    type=\"button\" color=\"primary\"\r\n                                                                    onClick={() => saveFile()}>\r\n                                                                    Agregar \r\n                                                                </Button>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                autoComplete=\"off\"\r\n                                                                type=\"text\"\r\n                                                                name=\"treatment_plan\"\r\n                                                                value={imageName}\r\n                                                                onChange={e => setImageName(e.target.value)}\r\n                                                            />\r\n                                                            <InputGroupAddon addonType=\"append\">\r\n                                                                <Button \r\n                                                                    type=\"button\" color=\"primary\" \r\n                                                                    onClick={() => {document.getElementById('files').click()}}>\r\n                                                                    Buscar\r\n                                                                </Button>\r\n                                                            </InputGroupAddon>\r\n                                                        </InputGroup>\r\n                                                        <input \r\n                                                            type=\"file\" \r\n                                                            accept=\"image/*\"\r\n                                                            id=\"files\" \r\n                                                            style={{visibility: 'hidden'}} \r\n                                                            onChange={e => loadFile(e.target.files)}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                    {/* <Button className= \"float-right\" onClick={() => saveFile()} color=\"primary\">Subir</Button> */}\r\n                                                </CardBody>\r\n                                            }\r\n                                        </Card>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>}\r\n                            <div className= \"float-right mb-4 mr-2\">\r\n                                <Button type=\"submit\" id=\"id-btn-save\" color=\"primary\">Guardar</Button>{' '}\r\n                                {/* <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Cancelar</Button> */}\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MedicalAnamnesis;\r\n"]},"metadata":{},"sourceType":"module"}