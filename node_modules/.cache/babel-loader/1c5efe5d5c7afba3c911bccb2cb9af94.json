{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _objectSpread from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\src\\\\views\\\\pages\\\\patient\\\\list-patient-anamnesis.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Col, Container, Card, CardBody, Table, Alert } from 'reactstrap';\nimport Axios from '../../../helpers/axiosConfig';\nimport { Redirect } from 'react-router-dom';\n\nvar ListPatientAnamnesis = function ListPatientAnamnesis(_ref) {\n  var _location$state5, _location$state6, _location$state7, _location$state8;\n\n  var location = _ref.location;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      datos = _useState2[0],\n      setDatos = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editModal = _useState4[0],\n      setEditModal = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      deletModal = _useState6[0],\n      setDeletModal = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showDelete = _useState8[0],\n      setShowDelete = _useState8[1];\n\n  var editToggle = function editToggle() {\n    return setEditModal(!editModal);\n  }; //const deleteToggle = () => setDeletModal(!deletModal);\n\n\n  var deleteToggleDelete = function deleteToggleDelete(run) {\n    setShowDelete(_objectSpread(_objectSpread({}, showDelete), {}, {\n      [run]: false\n    }));\n  };\n\n  var deleteToggleModal = function deleteToggleModal(run) {\n    setDeletModal(_objectSpread(_objectSpread({}, deletModal), {}, {\n      [run]: !deletModal[run]\n    }));\n  };\n\n  var Person = function Person(id, idRun, name, lastname, run, urgency, pain, cavities, wounds, bleeding, fracture, other, answer_id, covid19_risk_id, phone, cellphone, email, occupation, prevision_id, marital_status_id, native_origin_id, educational_level_id) {\n    _classCallCheck(this, Person);\n\n    this.id = id;\n    this.idRun = idRun;\n    this.name = name;\n    this.lastname = lastname;\n    this.run = run;\n    this.urgency = urgency;\n    this.pain = pain;\n    this.cavities = cavities;\n    this.wounds = wounds;\n    this.bleeding = bleeding;\n    this.fracture = fracture;\n    this.other = other;\n    this.answer_id = answer_id;\n    this.covid19_risk_id = covid19_risk_id;\n    this.phone = phone;\n    this.cellphone = cellphone;\n    this.email = email;\n    this.occupation = occupation;\n    this.prevision_id = prevision_id;\n    this.marital_status_id = marital_status_id;\n    this.native_origin_id = native_origin_id;\n    this.educational_level_id = educational_level_id;\n  };\n\n  var personas = [];\n\n  var listPatient = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Axios.get(\"person/listpatient\").then(function (response) {\n                response.data.result.forEach(function (element) {\n                  setShowDelete({\n                    [element.run]: false\n                  });\n                  setDeletModal({\n                    [element.run]: false\n                  });\n                  personas.push(new Person(element.person_id, element.run_id, element.names, element.lastnames, element.run, element.urgency, element.pain, element.cavities, element.wounds, element.bleeding, element.fracture, element.other, element.informed_consent_answer_id, element.covid19_risk_id, element.phone, element.cellphone, element.email, element.occupation, element.prevision_id, element.marital_status_id, element.native_origin_id, element.educational_level_id));\n                });\n              });\n\n            case 2:\n              res = _context.sent;\n              setDatos(personas);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function listPatient() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      odontoFichaAnamnesis = _useState10[0],\n      setOdontoFichaAnamnesis = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nuevaOdontoAnamnesis = _useState12[0],\n      setNuevaOdontoAnamnesis = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      medicoFichaAnamnesis = _useState14[0],\n      setMedicoFichaAnamnesis = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      nuevaMedicoAnamnesis = _useState16[0],\n      setNuevaMedicoAnamnesis = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      generalFichaAnamnesis = _useState18[0],\n      setGeneralFichaAnamnesis = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      nuevaGeneralAnamnesis = _useState20[0],\n      setNuevaGeneralAnamnesis = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      name = _useState22[0],\n      setName = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      run = _useState24[0],\n      setRun = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      lastname = _useState26[0],\n      setLastName = _useState26[1];\n\n  var _useState27 = useState(0),\n      _useState28 = _slicedToArray(_useState27, 2),\n      id = _useState28[0],\n      setId = _useState28[1];\n\n  var datosPersona = function datosPersona(id, name, lastname, run) {\n    setName(name);\n    setRun(run);\n    setLastName(lastname);\n    setId(id);\n  };\n\n  var consultaAnamnesisOdonto = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id, name, lastname, run) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Axios.get(\"geriatrical-odonto-anamnesis/crud/\" + id);\n\n            case 2:\n              res = _context2.sent;\n\n              if (res.data.result.length === 1) {\n                datosPersona(id, name, lastname, run);\n                setOdontoFichaAnamnesis(true);\n              } else {\n                datosPersona(id, name, lastname, run);\n                setNuevaOdontoAnamnesis(true);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function consultaAnamnesisOdonto(_x, _x2, _x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var consultaAnamnesisMedico = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, name, lastname, run) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Axios.get(\"geriatrical-medical-anamnesis/crud/\" + id);\n\n            case 2:\n              res = _context3.sent;\n\n              if (res.data.result.length === 1) {\n                datosPersona(id, name, lastname, run);\n                setMedicoFichaAnamnesis(true);\n              } else {\n                datosPersona(id, name, lastname, run);\n                setNuevaMedicoAnamnesis(true);\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function consultaAnamnesisMedico(_x5, _x6, _x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var consultaAnamnesisGeneral = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id, name, lastname, run) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return Axios.get(\"general-anamnesis/\" + id);\n\n            case 2:\n              res = _context4.sent;\n\n              if (res.data.result.length === 1) {\n                datosPersona(id, name, lastname, run);\n                setGeneralFichaAnamnesis(true);\n              } else {\n                datosPersona(id, name, lastname, run);\n                setNuevaGeneralAnamnesis(true);\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function consultaAnamnesisGeneral(_x9, _x10, _x11, _x12) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      modalReception = _useState30[0],\n      setModalReception = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      modalGeneral = _useState32[0],\n      setModalGeneral = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      modalMedica = _useState34[0],\n      setModalMedica = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      modalOdonto = _useState36[0],\n      setModalOdonto = _useState36[1];\n\n  var modal = function modal() {\n    var _location$state, _location$state2, _location$state3, _location$state4;\n\n    if (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.reception) {\n      setModalReception(!modalReception);\n    }\n\n    if (location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.anamnesisGeneral) {\n      setModalGeneral(!modalGeneral);\n    }\n\n    if (location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.medicalAnamnesis) {\n      setModalMedica(!modalMedica);\n    }\n\n    if (location === null || location === void 0 ? void 0 : (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.dentalAnamnesis) {\n      setModalOdonto(!modalOdonto);\n    }\n  };\n\n  useEffect(function () {\n    listPatient();\n    modal();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, (location === null || location === void 0 ? void 0 : (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.reception) && /*#__PURE__*/React.createElement(Alert, {\n    color: \"success\",\n    isOpen: modalReception,\n    toggle: function toggle() {\n      setModalReception(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 52\n    }\n  }, \"Recepci\\xF3n realizada exitosamente\"), (location === null || location === void 0 ? void 0 : (_location$state6 = location.state) === null || _location$state6 === void 0 ? void 0 : _location$state6.anamnesisGeneral) && /*#__PURE__*/React.createElement(Alert, {\n    color: \"success\",\n    isOpen: modalGeneral,\n    toggle: function toggle() {\n      setModalGeneral(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 59\n    }\n  }, \"Anamnesis General creada exitosamente\"), (location === null || location === void 0 ? void 0 : (_location$state7 = location.state) === null || _location$state7 === void 0 ? void 0 : _location$state7.medicalAnamnesis) && /*#__PURE__*/React.createElement(Alert, {\n    color: \"success\",\n    isOpen: modalMedica,\n    toggle: function toggle() {\n      setModalMedica(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 59\n    }\n  }, \"Anamnesis M\\xE9dico-geri\\xE1trica creada exitosamente\"), (location === null || location === void 0 ? void 0 : (_location$state8 = location.state) === null || _location$state8 === void 0 ? void 0 : _location$state8.dentalAnamnesis) && /*#__PURE__*/React.createElement(Alert, {\n    color: \"success\",\n    isOpen: modalOdonto,\n    toggle: function toggle() {\n      setModalOdonto(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 58\n    }\n  }, \"Anamnesis Odonto-geri\\xE1trica creada exitosamente\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"Listado de pacientes\"), /*#__PURE__*/React.createElement(Table, {\n    className: \"align-items-center\",\n    responsive: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"thead-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, \"N\\xB0\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, \"Nombre\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, \"Apellido\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, \"Run\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, \"Nueva Anamnesis\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, datos.map(function (person, i) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"text-center\",\n      key: person.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 41\n      }\n    }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 41\n      }\n    }, person.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 41\n      }\n    }, person.lastname), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 41\n      }\n    }, person.run), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return consultaAnamnesisGeneral(person.id, person.name, person.lastname, person.run);\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 45\n      }\n    }, \"General\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return consultaAnamnesisMedico(person.id, person.name, person.lastname, person.run);\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 45\n      }\n    }, \"Medico Geriatra\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return consultaAnamnesisOdonto(person.id, person.name, person.lastname, person.run);\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 45\n      }\n    }, \"Odonto Geriatra\")));\n  }))), nuevaGeneralAnamnesis && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/admin/anamnesis-general\",\n      state: {\n        id: id,\n        run: run,\n        name: name\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 47\n    }\n  }), generalFichaAnamnesis && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/admin/general-anamnesis-u\",\n      state: {\n        id: id,\n        run: run,\n        name: name\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 47\n    }\n  }), nuevaMedicoAnamnesis && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/admin/physical-parameters\",\n      state: {\n        id: id,\n        run: run,\n        name: name\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 46\n    }\n  }), medicoFichaAnamnesis && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/admin/medical-anamnesis-u\",\n      state: {\n        id: id,\n        run: run,\n        name: name\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 46\n    }\n  }), nuevaOdontoAnamnesis && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/admin/background\",\n      state: {\n        id: id,\n        run: run,\n        name: name\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 46\n    }\n  }), odontoFichaAnamnesis && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/admin/dental-anamnesis-u\",\n      state: {\n        id: id,\n        run: run,\n        name: name\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 46\n    }\n  }))));\n};\n\nexport default ListPatientAnamnesis;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/views/pages/patient/list-patient-anamnesis.js"],"names":["React","useState","useEffect","Button","Col","Container","Card","CardBody","Table","Alert","Axios","Redirect","ListPatientAnamnesis","location","datos","setDatos","editModal","setEditModal","deletModal","setDeletModal","showDelete","setShowDelete","editToggle","deleteToggleDelete","run","deleteToggleModal","Person","id","idRun","name","lastname","urgency","pain","cavities","wounds","bleeding","fracture","other","answer_id","covid19_risk_id","phone","cellphone","email","occupation","prevision_id","marital_status_id","native_origin_id","educational_level_id","personas","listPatient","get","then","response","data","result","forEach","element","push","person_id","run_id","names","lastnames","informed_consent_answer_id","res","odontoFichaAnamnesis","setOdontoFichaAnamnesis","nuevaOdontoAnamnesis","setNuevaOdontoAnamnesis","medicoFichaAnamnesis","setMedicoFichaAnamnesis","nuevaMedicoAnamnesis","setNuevaMedicoAnamnesis","generalFichaAnamnesis","setGeneralFichaAnamnesis","nuevaGeneralAnamnesis","setNuevaGeneralAnamnesis","setName","setRun","setLastName","setId","datosPersona","consultaAnamnesisOdonto","length","consultaAnamnesisMedico","consultaAnamnesisGeneral","modalReception","setModalReception","modalGeneral","setModalGeneral","modalMedica","setModalMedica","modalOdonto","setModalOdonto","modal","state","reception","anamnesisGeneral","medicalAnamnesis","dentalAnamnesis","map","person","i","pathname"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SACIC,MADJ,EACYC,GADZ,EACiBC,SADjB,EAC4BC,IAD5B,EACkCC,QADlC,EAEIC,KAFJ,EAGIC,KAHJ,QAKO,YALP;AAOA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAgB;AAAA;;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBAEfZ,QAAQ,CAAC,EAAD,CAFO;AAAA;AAAA,MAElCa,KAFkC;AAAA,MAE3BC,QAF2B;;AAAA,mBAGPd,QAAQ,EAHD;AAAA;AAAA,MAGlCe,SAHkC;AAAA,MAGvBC,YAHuB;;AAAA,mBAILhB,QAAQ,EAJH;AAAA;AAAA,MAIlCiB,UAJkC;AAAA,MAItBC,aAJsB;;AAAA,mBAKLlB,QAAQ,EALH;AAAA;AAAA,MAKlCmB,UALkC;AAAA,MAKtBC,aALsB;;AASzC,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAML,YAAY,CAAC,CAACD,SAAF,CAAlB;AAAA,GAAnB,CATyC,CAUzC;;;AACA,MAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,GAAD,EAAS;AAChCH,IAAAA,aAAa,iCACND,UADM;AAET,OAACI,GAAD,GAAO;AAFE,OAAb;AAIH,GALD;;AAMA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACD,GAAD,EAAS;AAC/BL,IAAAA,aAAa,iCACND,UADM;AAET,OAACM,GAAD,GAAO,CAACN,UAAU,CAACM,GAAD;AAFT,OAAb;AAIH,GALD;;AAjByC,MAyBnCE,MAzBmC,GA0BrC,gBAAYC,EAAZ,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuCN,GAAvC,EAA4CO,OAA5C,EAAqDC,IAArD,EAA2DC,QAA3D,EAAqEC,MAArE,EAA6EC,QAA7E,EAAuFC,QAAvF,EAAiGC,KAAjG,EAAwGC,SAAxG,EAAmHC,eAAnH,EACYC,KADZ,EACmBC,SADnB,EAC8BC,KAD9B,EACqCC,UADrC,EACiDC,YADjD,EAC+DC,iBAD/D,EACkFC,gBADlF,EACoGC,oBADpG,EAC0H;AAAA;;AAEtH,SAAKpB,EAAL,GAAUA,EAAV;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKN,GAAL,GAAWA,GAAX;AACA,SAAKO,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,oBAAL,GAA4BA,oBAA5B;AACH,GAnDoC;;AAsDzC,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAMC,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEEvC,KAAK,CAACwC,GAAN,CAAU,oBAAV,EACbC,IADa,CACR,UAAAC,QAAQ,EAAI;AACdA,gBAAAA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBC,OAArB,CAA6B,UAAAC,OAAO,EAAI;AACpCnC,kBAAAA,aAAa,CAAC;AAAC,qBAACmC,OAAO,CAAChC,GAAT,GAAe;AAAhB,mBAAD,CAAb;AACAL,kBAAAA,aAAa,CAAC;AAAC,qBAACqC,OAAO,CAAChC,GAAT,GAAe;AAAhB,mBAAD,CAAb;AACAwB,kBAAAA,QAAQ,CAACS,IAAT,CAAc,IAAI/B,MAAJ,CAAW8B,OAAO,CAACE,SAAnB,EAA8BF,OAAO,CAACG,MAAtC,EAA8CH,OAAO,CAACI,KAAtD,EAA6DJ,OAAO,CAACK,SAArE,EAAgFL,OAAO,CAAChC,GAAxF,EAA6FgC,OAAO,CAACzB,OAArG,EACVyB,OAAO,CAACxB,IADE,EACIwB,OAAO,CAACvB,QADZ,EACsBuB,OAAO,CAACtB,MAD9B,EACsCsB,OAAO,CAACrB,QAD9C,EACwDqB,OAAO,CAACpB,QADhE,EAC0EoB,OAAO,CAACnB,KADlF,EACyFmB,OAAO,CAACM,0BADjG,EAEVN,OAAO,CAACjB,eAFE,EAEeiB,OAAO,CAAChB,KAFvB,EAE8BgB,OAAO,CAACf,SAFtC,EAEiDe,OAAO,CAACd,KAFzD,EAGVc,OAAO,CAACb,UAHE,EAGUa,OAAO,CAACZ,YAHlB,EAGgCY,OAAO,CAACX,iBAHxC,EAG2DW,OAAO,CAACV,gBAHnE,EAGqFU,OAAO,CAACT,oBAH7F,CAAd;AAKH,iBARD;AASH,eAXa,CAFF;;AAAA;AAEVgB,cAAAA,GAFU;AAehBhD,cAAAA,QAAQ,CAACiC,QAAD,CAAR;;AAfgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXC,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAxDyC,mBA2EehD,QAAQ,CAAC,KAAD,CA3EvB;AAAA;AAAA,MA2ElC+D,oBA3EkC;AAAA,MA2EZC,uBA3EY;;AAAA,oBA4EehE,QAAQ,CAAC,KAAD,CA5EvB;AAAA;AAAA,MA4ElCiE,oBA5EkC;AAAA,MA4EZC,uBA5EY;;AAAA,oBA6EelE,QAAQ,CAAC,KAAD,CA7EvB;AAAA;AAAA,MA6ElCmE,oBA7EkC;AAAA,MA6EZC,uBA7EY;;AAAA,oBA8EepE,QAAQ,CAAC,KAAD,CA9EvB;AAAA;AAAA,MA8ElCqE,oBA9EkC;AAAA,MA8EZC,uBA9EY;;AAAA,oBA+EiBtE,QAAQ,CAAC,KAAD,CA/EzB;AAAA;AAAA,MA+ElCuE,qBA/EkC;AAAA,MA+EXC,wBA/EW;;AAAA,oBAgFiBxE,QAAQ,CAAC,KAAD,CAhFzB;AAAA;AAAA,MAgFlCyE,qBAhFkC;AAAA,MAgFXC,wBAhFW;;AAAA,oBAiFjB1E,QAAQ,CAAC,EAAD,CAjFS;AAAA;AAAA,MAiFlC4B,IAjFkC;AAAA,MAiF5B+C,OAjF4B;;AAAA,oBAkFnB3E,QAAQ,CAAC,EAAD,CAlFW;AAAA;AAAA,MAkFlCuB,GAlFkC;AAAA,MAkF7BqD,MAlF6B;;AAAA,oBAmFT5E,QAAQ,CAAC,EAAD,CAnFC;AAAA;AAAA,MAmFlC6B,QAnFkC;AAAA,MAmFxBgD,WAnFwB;;AAAA,oBAoFrB7E,QAAQ,CAAC,CAAD,CApFa;AAAA;AAAA,MAoFlC0B,EApFkC;AAAA,MAoF9BoD,KApF8B;;AAsFzC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACrD,EAAD,EAAKE,IAAL,EAAWC,QAAX,EAAqBN,GAArB,EAA6B;AAC9CoD,IAAAA,OAAO,CAAC/C,IAAD,CAAP;AACAgD,IAAAA,MAAM,CAACrD,GAAD,CAAN;AACAsD,IAAAA,WAAW,CAAChD,QAAD,CAAX;AACAiD,IAAAA,KAAK,CAACpD,EAAD,CAAL;AACH,GALD;;AAOA,MAAMsD,uBAAuB;AAAA,yEAAG,kBAAOtD,EAAP,EAAWE,IAAX,EAAiBC,QAAjB,EAA2BN,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEVd,KAAK,CAACwC,GAAN,CAAU,uCAAuCvB,EAAjD,CAFU;;AAAA;AAEtBoC,cAAAA,GAFsB;;AAK5B,kBAAIA,GAAG,CAACV,IAAJ,CAASC,MAAT,CAAgB4B,MAAhB,KAA2B,CAA/B,EAAkC;AAC9BF,gBAAAA,YAAY,CAACrD,EAAD,EAAKE,IAAL,EAAWC,QAAX,EAAqBN,GAArB,CAAZ;AACAyC,gBAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,eAHD,MAGO;AACHe,gBAAAA,YAAY,CAACrD,EAAD,EAAKE,IAAL,EAAWC,QAAX,EAAqBN,GAArB,CAAZ;AACA2C,gBAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH;;AAX2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvBc,uBAAuB;AAAA;AAAA;AAAA,KAA7B;;AAcA,MAAME,uBAAuB;AAAA,yEAAG,kBAAOxD,EAAP,EAAWE,IAAX,EAAiBC,QAAjB,EAA2BN,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEVd,KAAK,CAACwC,GAAN,CAAU,wCAAwCvB,EAAlD,CAFU;;AAAA;AAEtBoC,cAAAA,GAFsB;;AAK5B,kBAAIA,GAAG,CAACV,IAAJ,CAASC,MAAT,CAAgB4B,MAAhB,KAA2B,CAA/B,EAAkC;AAC9BF,gBAAAA,YAAY,CAACrD,EAAD,EAAKE,IAAL,EAAWC,QAAX,EAAqBN,GAArB,CAAZ;AACA6C,gBAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,eAHD,MAGO;AACHW,gBAAAA,YAAY,CAACrD,EAAD,EAAKE,IAAL,EAAWC,QAAX,EAAqBN,GAArB,CAAZ;AACA+C,gBAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH;;AAX2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvBY,uBAAuB;AAAA;AAAA;AAAA,KAA7B;;AAcA,MAAMC,wBAAwB;AAAA,yEAAG,kBAAOzD,EAAP,EAAWE,IAAX,EAAiBC,QAAjB,EAA2BN,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEXd,KAAK,CAACwC,GAAN,CAAU,uBAAuBvB,EAAjC,CAFW;;AAAA;AAEvBoC,cAAAA,GAFuB;;AAK7B,kBAAIA,GAAG,CAACV,IAAJ,CAASC,MAAT,CAAgB4B,MAAhB,KAA2B,CAA/B,EAAkC;AAC9BF,gBAAAA,YAAY,CAACrD,EAAD,EAAKE,IAAL,EAAWC,QAAX,EAAqBN,GAArB,CAAZ;AACAiD,gBAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH,eAHD,MAGO;AACHO,gBAAAA,YAAY,CAACrD,EAAD,EAAKE,IAAL,EAAWC,QAAX,EAAqBN,GAArB,CAAZ;AACAmD,gBAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH;;AAX4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAxBS,wBAAwB;AAAA;AAAA;AAAA,KAA9B;;AAzHyC,oBAwICnF,QAAQ,CAAC,KAAD,CAxIT;AAAA;AAAA,MAwIlCoF,cAxIkC;AAAA,MAwIlBC,iBAxIkB;;AAAA,oBAyIHrF,QAAQ,CAAC,KAAD,CAzIL;AAAA;AAAA,MAyIlCsF,YAzIkC;AAAA,MAyIpBC,eAzIoB;;AAAA,oBA0ILvF,QAAQ,CAAC,KAAD,CA1IH;AAAA;AAAA,MA0IlCwF,WA1IkC;AAAA,MA0IrBC,cA1IqB;;AAAA,oBA2ILzF,QAAQ,CAAC,KAAD,CA3IH;AAAA;AAAA,MA2IlC0F,WA3IkC;AAAA,MA2IrBC,cA3IqB;;AA6IzC,MAAMC,KAAK,GAAC,SAANA,KAAM,GAAI;AAAA;;AACZ,QAAGhF,QAAH,aAAGA,QAAH,0CAAGA,QAAQ,CAAEiF,KAAb,oDAAG,gBAAiBC,SAApB,EAA8B;AAC1BT,MAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACH;;AACD,QAAGxE,QAAH,aAAGA,QAAH,2CAAGA,QAAQ,CAAEiF,KAAb,qDAAG,iBAAiBE,gBAApB,EAAqC;AACjCR,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH;;AACD,QAAG1E,QAAH,aAAGA,QAAH,2CAAGA,QAAQ,CAAEiF,KAAb,qDAAG,iBAAiBG,gBAApB,EAAqC;AACjCP,MAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH;;AACD,QAAG5E,QAAH,aAAGA,QAAH,2CAAGA,QAAQ,CAAEiF,KAAb,qDAAG,iBAAiBI,eAApB,EAAoC;AAChCN,MAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH;AAEJ,GAdD;;AAmBAzF,EAAAA,SAAS,CAAC,YAAM;AACZ+C,IAAAA,WAAW;AACX4C,IAAAA,KAAK;AACR,GAHQ,EAGN,EAHM,CAAT;AAMA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAAhF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,gCAAAA,QAAQ,CAAEiF,KAAV,sEAAiBC,SAAjB,kBAA8B,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAuB,IAAA,MAAM,EAAEV,cAA/B;AAA+C,IAAA,MAAM,EAAE,kBAAM;AAACC,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAAyB,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADnC,EAIK,CAAAzE,QAAQ,SAAR,IAAAA,QAAQ,WAAR,gCAAAA,QAAQ,CAAEiF,KAAV,sEAAiBE,gBAAjB,kBAAqC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAuB,IAAA,MAAM,EAAET,YAA/B;AAA6C,IAAA,MAAM,EAAE,kBAAM;AAACC,MAAAA,eAAe,CAAC,KAAD,CAAf;AAAuB,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJ1C,EAOK,CAAA3E,QAAQ,SAAR,IAAAA,QAAQ,WAAR,gCAAAA,QAAQ,CAAEiF,KAAV,sEAAiBG,gBAAjB,kBAAqC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAuB,IAAA,MAAM,EAAER,WAA/B;AAA4C,IAAA,MAAM,EAAE,kBAAM;AAACC,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAP1C,EAUK,CAAA7E,QAAQ,SAAR,IAAAA,QAAQ,WAAR,gCAAAA,QAAQ,CAAEiF,KAAV,sEAAiBI,eAAjB,kBAAoC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAuB,IAAA,MAAM,EAAEP,WAA/B;AAA4C,IAAA,MAAM,EAAE,kBAAM;AAACC,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAVzC,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbJ,eAgBI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAsC,IAAA,UAAU,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,eAKI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,eAMI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADA,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI9E,KAAK,CAACqF,GAAN,CACI,UAACC,MAAD,EAASC,CAAT;AAAA,wBAEI;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,GAAG,EAAED,MAAM,CAACzE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK0E,CAAC,GAAG,CADT,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MAAM,CAACvE,IADZ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKuE,MAAM,CAACtE,QADZ,CAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKsE,MAAM,CAAC5E,GADZ,CAVJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE;AAAA,eAAM4D,wBAAwB,CAACgB,MAAM,CAACzE,EAAR,EAAYyE,MAAM,CAACvE,IAAnB,EAAyBuE,MAAM,CAACtE,QAAhC,EAA0CsE,MAAM,CAAC5E,GAAjD,CAA9B;AAAA,OADb;AAEI,MAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAdJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE;AAAA,eAAM2D,uBAAuB,CAACiB,MAAM,CAACzE,EAAR,EAAYyE,MAAM,CAACvE,IAAnB,EAAyBuE,MAAM,CAACtE,QAAhC,EAA0CsE,MAAM,CAAC5E,GAAjD,CAA7B;AAAA,OADb;AAEI,MAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CArBJ,eA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE;AAAA,eAAMyD,uBAAuB,CAACmB,MAAM,CAACzE,EAAR,EAAYyE,MAAM,CAACvE,IAAnB,EAAyBuE,MAAM,CAACtE,QAAhC,EAA0CsE,MAAM,CAAC5E,GAAjD,CAA7B;AAAA,OADb;AAEI,MAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CA5BJ,CAFJ;AAAA,GADJ,CAFJ,CAZJ,CAhBJ,EAwEKkD,qBAAqB,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACpC4B,MAAAA,QAAQ,EAAE,0BAD0B;AAEpCR,MAAAA,KAAK,EAAE;AAACnE,QAAAA,EAAE,EAAEA,EAAL;AAASH,QAAAA,GAAG,EAAEA,GAAd;AAAmBK,QAAAA,IAAI,EAAEA;AAAzB;AAF6B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxE9B,EA4EK2C,qBAAqB,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACpC8B,MAAAA,QAAQ,EAAE,4BAD0B;AAEpCR,MAAAA,KAAK,EAAE;AAACnE,QAAAA,EAAE,EAAEA,EAAL;AAASH,QAAAA,GAAG,EAAEA,GAAd;AAAmBK,QAAAA,IAAI,EAAEA;AAAzB;AAF6B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5E9B,EAgFKyC,oBAAoB,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACnCgC,MAAAA,QAAQ,EAAE,4BADyB;AAEnCR,MAAAA,KAAK,EAAE;AAACnE,QAAAA,EAAE,EAAEA,EAAL;AAASH,QAAAA,GAAG,EAAEA,GAAd;AAAmBK,QAAAA,IAAI,EAAEA;AAAzB;AAF4B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhF7B,EAoFKuC,oBAAoB,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACnCkC,MAAAA,QAAQ,EAAE,4BADyB;AAEnCR,MAAAA,KAAK,EAAE;AAACnE,QAAAA,EAAE,EAAEA,EAAL;AAASH,QAAAA,GAAG,EAAEA,GAAd;AAAmBK,QAAAA,IAAI,EAAEA;AAAzB;AAF4B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApF7B,EAwFKqC,oBAAoB,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACnCoC,MAAAA,QAAQ,EAAE,mBADyB;AAEnCR,MAAAA,KAAK,EAAE;AAACnE,QAAAA,EAAE,EAAEA,EAAL;AAASH,QAAAA,GAAG,EAAEA,GAAd;AAAmBK,QAAAA,IAAI,EAAEA;AAAzB;AAF4B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxF7B,EA4FKmC,oBAAoB,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACnCsC,MAAAA,QAAQ,EAAE,2BADyB;AAEnCR,MAAAA,KAAK,EAAE;AAACnE,QAAAA,EAAE,EAAEA,EAAL;AAASH,QAAAA,GAAG,EAAEA,GAAd;AAAmBK,QAAAA,IAAI,EAAEA;AAAzB;AAF4B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5F7B,CADJ,CAFJ,CADJ;AAwGH,CA9QD;;AAgRA,eAAejB,oBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {\r\n    Button, Col, Container, Card, CardBody,\r\n    Table,\r\n    Alert\r\n\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst ListPatientAnamnesis = ({location}) => {\r\n\r\n    const [datos, setDatos] = useState([])\r\n    const [editModal, setEditModal] = useState();\r\n    const [deletModal, setDeletModal] = useState();\r\n    const [showDelete, setShowDelete] = useState()\r\n\r\n\r\n\r\n    const editToggle = () => setEditModal(!editModal);\r\n    //const deleteToggle = () => setDeletModal(!deletModal);\r\n    const deleteToggleDelete = (run) => {\r\n        setShowDelete({\r\n            ...showDelete,\r\n            [run]: false\r\n        })\r\n    }\r\n    const deleteToggleModal = (run) => {\r\n        setDeletModal({\r\n            ...deletModal,\r\n            [run]: !deletModal[run]\r\n        })\r\n    }\r\n\r\n\r\n    class Person {\r\n        constructor(id, idRun, name, lastname, run, urgency, pain, cavities, wounds, bleeding, fracture, other, answer_id, covid19_risk_id,\r\n                    phone, cellphone, email, occupation, prevision_id, marital_status_id, native_origin_id, educational_level_id) {\r\n\r\n            this.id = id\r\n            this.idRun = idRun\r\n            this.name = name;\r\n            this.lastname = lastname;\r\n            this.run = run;\r\n            this.urgency = urgency;\r\n            this.pain = pain;\r\n            this.cavities = cavities;\r\n            this.wounds = wounds;\r\n            this.bleeding = bleeding;\r\n            this.fracture = fracture;\r\n            this.other = other;\r\n            this.answer_id = answer_id;\r\n            this.covid19_risk_id = covid19_risk_id;\r\n            this.phone = phone;\r\n            this.cellphone = cellphone;\r\n            this.email = email;\r\n            this.occupation = occupation;\r\n            this.prevision_id = prevision_id;\r\n            this.marital_status_id = marital_status_id;\r\n            this.native_origin_id = native_origin_id;\r\n            this.educational_level_id = educational_level_id;\r\n        }\r\n    }\r\n\r\n    var personas = []\r\n\r\n    const listPatient = async () => {\r\n\r\n        const res = await Axios.get(\"person/listpatient\")\r\n            .then(response => {\r\n                response.data.result.forEach(element => {\r\n                    setShowDelete({[element.run]: false})\r\n                    setDeletModal({[element.run]: false})\r\n                    personas.push(new Person(element.person_id, element.run_id, element.names, element.lastnames, element.run, element.urgency,\r\n                        element.pain, element.cavities, element.wounds, element.bleeding, element.fracture, element.other, element.informed_consent_answer_id,\r\n                        element.covid19_risk_id, element.phone, element.cellphone, element.email,\r\n                        element.occupation, element.prevision_id, element.marital_status_id, element.native_origin_id, element.educational_level_id));\r\n\r\n                });\r\n            })\r\n\r\n        setDatos(personas)\r\n    }\r\n\r\n\r\n    const [odontoFichaAnamnesis, setOdontoFichaAnamnesis] = useState(false)\r\n    const [nuevaOdontoAnamnesis, setNuevaOdontoAnamnesis] = useState(false)\r\n    const [medicoFichaAnamnesis, setMedicoFichaAnamnesis] = useState(false)\r\n    const [nuevaMedicoAnamnesis, setNuevaMedicoAnamnesis] = useState(false)\r\n    const [generalFichaAnamnesis, setGeneralFichaAnamnesis] = useState(false)\r\n    const [nuevaGeneralAnamnesis, setNuevaGeneralAnamnesis] = useState(false)\r\n    const [name, setName] = useState(\"\")\r\n    const [run, setRun] = useState(\"\")\r\n    const [lastname, setLastName] = useState(\"\")\r\n    const [id, setId] = useState(0)\r\n\r\n    const datosPersona = (id, name, lastname, run) => {\r\n        setName(name)\r\n        setRun(run)\r\n        setLastName(lastname)\r\n        setId(id)\r\n    }\r\n\r\n    const consultaAnamnesisOdonto = async (id, name, lastname, run) => {\r\n\r\n        const res = await Axios.get(\"geriatrical-odonto-anamnesis/crud/\" + id\r\n        )\r\n\r\n        if (res.data.result.length === 1) {\r\n            datosPersona(id, name, lastname, run)\r\n            setOdontoFichaAnamnesis(true)\r\n        } else {\r\n            datosPersona(id, name, lastname, run)\r\n            setNuevaOdontoAnamnesis(true)\r\n        }\r\n\r\n    }\r\n    const consultaAnamnesisMedico = async (id, name, lastname, run) => {\r\n\r\n        const res = await Axios.get(\"geriatrical-medical-anamnesis/crud/\" + id\r\n        )\r\n\r\n        if (res.data.result.length === 1) {\r\n            datosPersona(id, name, lastname, run)\r\n            setMedicoFichaAnamnesis(true)\r\n        } else {\r\n            datosPersona(id, name, lastname, run)\r\n            setNuevaMedicoAnamnesis(true)\r\n        }\r\n\r\n    }\r\n    const consultaAnamnesisGeneral = async (id, name, lastname, run) => {\r\n\r\n        const res = await Axios.get(\"general-anamnesis/\" + id\r\n        )\r\n\r\n        if (res.data.result.length === 1) {\r\n            datosPersona(id, name, lastname, run)\r\n            setGeneralFichaAnamnesis(true)\r\n        } else {\r\n            datosPersona(id, name, lastname, run)\r\n            setNuevaGeneralAnamnesis(true)\r\n        }\r\n\r\n    }\r\n\r\n    const [modalReception, setModalReception]=useState(false)\r\n    const [modalGeneral, setModalGeneral]=useState(false)\r\n    const [modalMedica, setModalMedica]=useState(false)\r\n    const [modalOdonto, setModalOdonto]=useState(false)\r\n\r\n    const modal=()=>{\r\n        if(location?.state?.reception){\r\n            setModalReception(!modalReception)\r\n        }\r\n        if(location?.state?.anamnesisGeneral){\r\n            setModalGeneral(!modalGeneral)\r\n        }\r\n        if(location?.state?.medicalAnamnesis){\r\n            setModalMedica(!modalMedica)\r\n        }\r\n        if(location?.state?.dentalAnamnesis){\r\n            setModalOdonto(!modalOdonto)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        listPatient();\r\n        modal();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <Card>\r\n                <CardBody>\r\n                    {location?.state?.reception && <Alert color=\"success\" isOpen={modalReception} toggle={() => {setModalReception(false)}}>\r\n                        Recepción realizada exitosamente\r\n                    </Alert>}\r\n                    {location?.state?.anamnesisGeneral && <Alert color=\"success\" isOpen={modalGeneral} toggle={() => {setModalGeneral(false)}}>\r\n                        Anamnesis General creada exitosamente\r\n                    </Alert>}\r\n                    {location?.state?.medicalAnamnesis && <Alert color=\"success\" isOpen={modalMedica} toggle={() => {setModalMedica(false)}}>\r\n                    Anamnesis Médico-geriátrica creada exitosamente\r\n                    </Alert>}\r\n                    {location?.state?.dentalAnamnesis && <Alert color=\"success\" isOpen={modalOdonto} toggle={() => {setModalOdonto(false)}}>\r\n                    Anamnesis Odonto-geriátrica creada exitosamente\r\n                    </Alert>}\r\n                    <h1>\r\n                        Listado de pacientes\r\n                    </h1>\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                        <tr className=\"text-center\">\r\n                            <th scope=\"col\">N°</th>\r\n                            <th scope=\"col\">Nombre</th>\r\n                            <th scope=\"col\">Apellido</th>\r\n                            <th scope=\"col\">Run</th>\r\n                            <th scope=\"col\">Nueva Anamnesis</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            datos.map(\r\n                                (person, i) =>\r\n\r\n                                    <tr className=\"text-center\" key={person.id}>\r\n                                        <td>\r\n                                            {i + 1}\r\n                                        </td>\r\n                                        <td>\r\n                                            {person.name}\r\n                                        </td>\r\n                                        <td>\r\n                                            {person.lastname}\r\n                                        </td>\r\n                                        <td>\r\n                                            {person.run}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <Button\r\n                                                onClick={() => consultaAnamnesisGeneral(person.id, person.name, person.lastname, person.run)}\r\n                                                color=\"primary\">\r\n                                                General\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button\r\n                                                onClick={() => consultaAnamnesisMedico(person.id, person.name, person.lastname, person.run)}\r\n                                                color=\"primary\">\r\n                                                Medico Geriatra\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button\r\n                                                onClick={() => consultaAnamnesisOdonto(person.id, person.name, person.lastname, person.run)}\r\n                                                color=\"primary\">\r\n                                                Odonto Geriatra\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                    {nuevaGeneralAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/anamnesis-general\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {generalFichaAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/general-anamnesis-u\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {nuevaMedicoAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/physical-parameters\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {medicoFichaAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/medical-anamnesis-u\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {nuevaOdontoAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/background\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {odontoFichaAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/dental-anamnesis-u\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ListPatientAnamnesis\r\n"]},"metadata":{},"sourceType":"module"}