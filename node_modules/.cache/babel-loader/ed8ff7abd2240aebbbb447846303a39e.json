{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\src\\\\components\\\\Fantoma\\\\FormsExams\\\\EditMarkerForm.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, FormGroup, Form, Input, Modal, Label, Col, Row, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { getList } from 'helpers/ListHelper';\n\nvar EditMarkerForm = function EditMarkerForm(props) {\n  var _useState = useState(props.currentMarker),\n      _useState2 = _slicedToArray(_useState, 2),\n      marker = _useState2[0],\n      setMarker = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formData = _useState4[0],\n      setFormData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      colorData = _useState6[0],\n      setColorData = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      surfaceData = _useState8[0],\n      setSurfaceData = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      consistencyData = _useState10[0],\n      setConsistencyData = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      evolutionFormData = _useState12[0],\n      setEvolutionFormData = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      symptomatologyData = _useState14[0],\n      setSymptomatologyData = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      edgeData = _useState16[0],\n      setEdgeData = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      localizationData = _useState18[0],\n      setLocalizationData = _useState18[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(set, route) {\n      var e;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getList(route);\n\n            case 2:\n              e = _context.sent;\n              set(e);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getData(setFormData, \"list/forms\");\n    getData(setColorData, \"list/colors\");\n    getData(setSurfaceData, \"list/surfaces\");\n    getData(setConsistencyData, \"list/consistencies\");\n    getData(setEvolutionFormData, \"list/evolution-forms\");\n    getData(setSymptomatologyData, \"list/symptomatologies\");\n    getData(setEdgeData, \"list/edges\");\n    getData(setLocalizationData, \"list/localizations\");\n    setMarker(props.currentMarker);\n  }, [props]);\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setMarker(_objectSpread(_objectSpread({}, marker), {}, {\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal-dialog-centered\",\n    isOpen: props.editing,\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      props.updateMarker(marker.id, marker);\n    },\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"Forma\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"form\",\n    type: \"select\",\n    name: \"form\",\n    value: marker.form,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, formData.map(function (form) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: form.name,\n      value: form.form_id,\n      onFocus: function onFocus(e) {\n        return console.log(e.target);\n      },\n      id: form.name,\n      \"data-toggle\": \"tooltip\",\n      title: form.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }, form.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, \"Color\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"color\",\n    type: \"select\",\n    name: \"color\",\n    value: marker.color,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, colorData.map(function (color) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: color.value,\n      value: color.color_id,\n      id: color.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, color.value);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, \"Tama\\xF1o\")), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: 1,\n    max: 150,\n    step: \"1\",\n    name: \"length\",\n    placeholder: \"largo\",\n    defaultValue: marker.length,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 45\n    }\n  }, \"mm\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: 1,\n    max: 150,\n    step: \"1\",\n    name: \"width\",\n    placeholder: \"ancho\",\n    defaultValue: marker.width,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 45\n    }\n  }, \"mm\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: 0,\n    max: 150,\n    step: \"1\",\n    name: \"height\",\n    placeholder: \"alto\",\n    defaultValue: marker.height,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 45\n    }\n  }, \"mm\")))))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }, \"Superficie\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"surface\",\n    type: \"select\",\n    name: \"surface\",\n    value: marker.surface,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, surfaceData.map(function (surface) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: surface.value,\n      value: surface.surface_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 41\n      }\n    }, surface.value);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, \"Consistencia\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"consistency\",\n    type: \"select\",\n    name: \"consistency\",\n    value: marker.consistency,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, consistencyData.map(function (consistency) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: consistency.name,\n      value: consistency.consistency_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    }, consistency.name);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, \"Bordes\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"edge\",\n    type: \"select\",\n    name: \"edge\",\n    value: marker.edge,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  }, edgeData.map(function (edge) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: edge.name,\n      value: edge.edge_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }, edge.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, \"Sintomatolog\\xEDa\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"symptomatology\",\n    type: \"select\",\n    name: \"symptomatology\",\n    value: marker.symptomatology,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, symptomatologyData.map(function (symptomatology) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: symptomatology.value,\n      value: symptomatology.symptomatology_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }, symptomatology.value);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, \"Forma evoluci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"evolution_form\",\n    type: \"select\",\n    name: \"evolution_form\",\n    value: marker.evolution_form,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, evolutionFormData.map(function (evolutionForm) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: evolutionForm.value,\n      value: evolutionForm.evolution_form_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }, evolutionForm.value);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, \"Localizaci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"localization\",\n    type: \"select\",\n    name: \"localization\",\n    value: marker.localization //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }, localizationData.map(function (localization) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: localization.value,\n      value: localization.localization_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 41\n      }\n    }, localization.value);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 33\n    }\n  }, \"Tiempo evoluci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"evolution_time\",\n    type: \"text\",\n    name: \"evolution_time\",\n    maxLength: \"20\",\n    defaultValue: marker.evolution_time //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 33\n    }\n  }, \"Observaciones\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"example-text-input1\",\n    type: \"textarea\",\n    name: \"observation\",\n    maxLength: \"200\",\n    defaultValue: marker.observation //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, \"Guardar\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return props.setEditing(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 29\n    }\n  }, \"Cancelar\"))))));\n};\n\nexport default EditMarkerForm;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/components/Fantoma/FormsExams/EditMarkerForm.jsx"],"names":["React","useState","useEffect","Button","FormGroup","Form","Input","Modal","Label","Col","Row","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","getList","EditMarkerForm","props","currentMarker","marker","setMarker","formData","setFormData","colorData","setColorData","surfaceData","setSurfaceData","consistencyData","setConsistencyData","evolutionFormData","setEvolutionFormData","symptomatologyData","setSymptomatologyData","edgeData","setEdgeData","localizationData","setLocalizationData","getData","set","route","e","handleInputChange","event","target","name","value","editing","preventDefault","updateMarker","id","form","map","form_id","console","log","description","color","color_id","length","width","height","surface","surface_id","consistency","consistency_id","edge","edge_id","symptomatology","symptomatology_id","evolution_form","evolutionForm","evolution_form_id","localization","localization_id","evolution_time","observation","setEditing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    Row,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from \"reactstrap\";\r\nimport { getList } from 'helpers/ListHelper';\r\n\r\nconst EditMarkerForm = props => {\r\n    const [marker, setMarker] = useState(props.currentMarker)\r\n\r\n    const [formData, setFormData] = useState([]);\r\n    const [colorData, setColorData] = useState([]);\r\n    const [surfaceData, setSurfaceData] = useState([]);\r\n    const [consistencyData, setConsistencyData] = useState([]);\r\n    const [evolutionFormData, setEvolutionFormData] =useState([]);\r\n    const [symptomatologyData, setSymptomatologyData] = useState([]);\r\n    const [edgeData, setEdgeData] = useState([]);\r\n    const [localizationData, setLocalizationData] = useState([]);\r\n\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(setFormData, \"list/forms\")\r\n        getData(setColorData, \"list/colors\")\r\n        getData(setSurfaceData, \"list/surfaces\")\r\n        getData(setConsistencyData, \"list/consistencies\")\r\n        getData(setEvolutionFormData, \"list/evolution-forms\")\r\n        getData(setSymptomatologyData, \"list/symptomatologies\")\r\n        getData(setEdgeData, \"list/edges\")\r\n        getData(setLocalizationData, \"list/localizations\")\r\n        setMarker(props.currentMarker)\r\n    }, [props])\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.editing}\r\n                size=\"lg\">\r\n                <ModalHeader>\r\n                    {/* {marker.id +\" \"+ marker.idAnamnesis } */}\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.updateMarker(marker.id, marker)\r\n                    }} \r\n                    role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma</Label>\r\n                                <Input\r\n                                    id=\"form\"\r\n                                    type=\"select\"\r\n                                    name=\"form\"\r\n                                    value={marker.form}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {formData.map(form => (\r\n                                        <option \r\n                                            key={form.name} \r\n                                            value={form.form_id} \r\n                                            onFocus={(e)=>console.log(e.target) } \r\n                                            id={form.name}  \r\n                                            data-toggle=\"tooltip\" \r\n                                            title={form.description}\r\n                                            >\r\n                                                {form.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Color</Label>\r\n                                <Input\r\n                                    id=\"color\"\r\n                                    type=\"select\"\r\n                                    name=\"color\"\r\n                                    value={marker.color}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {colorData.map(color => (\r\n                                        <option key={color.value} value={color.color_id} id={color.value} >{color.value}</option>\r\n                                    ))}\r\n                                    \r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md='12'>\r\n                                <Label className=\"form-control-label\" >Tamaño</Label>\r\n                            </Col>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                min={1}\r\n                                                max={150}\r\n                                                step=\"1\"\r\n                                                name=\"length\"\r\n                                                placeholder=\"largo\"\r\n                                                defaultValue={marker.length}\r\n                                                onChange={(e) => { handleInputChange(e) }}\r\n                                                required\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                min={1}\r\n                                                max={150}\r\n                                                step=\"1\"\r\n                                                name=\"width\"\r\n                                                placeholder=\"ancho\"\r\n                                                defaultValue={marker.width}\r\n                                                onChange={(e) => { handleInputChange(e) }}\r\n                                                required\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                min={0}\r\n                                                max={150}\r\n                                                step=\"1\"\r\n                                                name=\"height\"\r\n                                                placeholder=\"alto\"\r\n                                                defaultValue={marker.height}\r\n                                                onChange={(e) => { handleInputChange(e) }}\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </FormGroup>                      \r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Superficie</Label>\r\n                                <Input\r\n                                    id=\"surface\"\r\n                                    type=\"select\"\r\n                                    name=\"surface\"\r\n                                    value={marker.surface}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {surfaceData.map(surface => (\r\n                                        <option key={surface.value} value={surface.surface_id}>{surface.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Consistencia</Label>\r\n                                <Input\r\n                                    id=\"consistency\"\r\n                                    type=\"select\"\r\n                                    name=\"consistency\"\r\n                                    value={marker.consistency}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {consistencyData.map(consistency => (\r\n                                        <option key={consistency.name} value={consistency.consistency_id}>{consistency.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Bordes</Label>\r\n                                <Input\r\n                                    id=\"edge\"\r\n                                    type=\"select\"\r\n                                    name=\"edge\"\r\n                                    value={marker.edge}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {edgeData.map(edge => (\r\n                                        <option key={edge.name} value={edge.edge_id}>{edge.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Sintomatología</Label>\r\n                                <Input\r\n                                    id=\"symptomatology\"\r\n                                    type=\"select\"\r\n                                    name=\"symptomatology\"\r\n                                    value={marker.symptomatology}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {symptomatologyData.map(symptomatology => (\r\n                                        <option key={symptomatology.value} value={symptomatology.symptomatology_id}>{symptomatology.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_form\"\r\n                                    type=\"select\"\r\n                                    name=\"evolution_form\"\r\n                                    value={marker.evolution_form}\r\n                                    onChange={handleInputChange}>\r\n                                     {evolutionFormData.map(evolutionForm => (\r\n                                        <option key={evolutionForm.value} value={evolutionForm.evolution_form_id}>{evolutionForm.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Localización</Label>\r\n                                <Input\r\n                                    id=\"localization\"\r\n                                    type=\"select\"\r\n                                    name=\"localization\"\r\n                                    value={marker.localization}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                {localizationData.map(localization => (\r\n                                        <option key={localization.value} value={localization.localization_id}>{localization.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Tiempo evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_time\"\r\n                                    type=\"text\"\r\n                                    name=\"evolution_time\"\r\n                                    maxLength=\"20\"\r\n                                    defaultValue={marker.evolution_time}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}>\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Observaciones</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"textarea\"\r\n                                    name=\"observation\"\r\n                                    maxLength=\"200\"\r\n                                    defaultValue={marker.observation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setEditing(false)}>Cancelar\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default EditMarkerForm"]},"metadata":{},"sourceType":"module"}