{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Christian\\\\Desktop\\\\tele\\\\Nueva carpeta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Button,Col,Container,Form,FormGroup,Input,Row,InputGroup,InputGroupText,InputGroupAddon,Card,CardBody,Label,Progress}from'reactstrap';import classnames from\"classnames\";import Axios from'../../../helpers/axiosConfig';import{Redirect}from'react-router-dom';import{getList}from'helpers/ListHelper';var InformedConsent=function InformedConsent(_ref){var location=_ref.location;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),consentRead=_useState2[0],setConsentRead=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),next=_useState4[0],setNext=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),observations=_useState6[0],setObservations=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),acceptedConcentId=_useState8[0],setAcceptedConcentId=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),acceptedConcents=_useState10[0],setAcceptedConcents=_useState10[1];var getData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(set,route){var e;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getList(route);case 2:e=_context.sent;set(e);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getData(_x,_x2){return _ref2.apply(this,arguments);};}();useEffect(function(){getData(setAcceptedConcents,\"list/consent\");},[]);var addInformedConsent=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();_context2.next=3;return Axios.post(\"person/informed-consent\",{personId:location.state.id,informed_consent_answer_id:acceptedConcentId,observations:observations,consentRead:consentRead});case 3:res=_context2.sent;if(!res.data.error)setNext(true);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function addInformedConsent(_x3){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h3\",null,location.state.run,\", \",location.state.name,\" \",location.state.apellido),/*#__PURE__*/React.createElement(\"h1\",null,\"Consentimiento Informado\"),/*#__PURE__*/React.createElement(Form,{onSubmit:addInformedConsent,role:\"form\"},/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{md:\"10\"},/*#__PURE__*/React.createElement(\"b\",null,\"Por favor, lea con detenci\\xF3n el consentimiento informado\",\" \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://drive.google.com/drive/u/4/folders/1Tg7sQlE7y9l4TqlJ3dXc7cY807qXKf5C\",rel:\"noopener noreferrer\",target:\"_blank\"},\"disponible aqu\\xED.\")))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\",htmlFor:\"exampleFormControlSelect3\"},\"\\xBFTom\\xF3 conocimiento del consentimiento?\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{className:\"custom-toggle custom-toggle-success mr-1\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:consentRead,onChange:function onChange(e){return setConsentRead(!consentRead);}}),/*#__PURE__*/React.createElement(\"span\",{className:\"custom-toggle-slider rounded-circle\",\"data-label-off\":\"No\",\"data-label-on\":\"S\\xED\"}))))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\",htmlFor:\"exampleFormControlSelect3\"},\"\\xBFAcepta el consentimiento?\"),/*#__PURE__*/React.createElement(Input,{id:\"exampleFormControlSelect3\",type:\"select\",onChange:function onChange(e){setAcceptedConcentId(e.target.value);}},acceptedConcents.map(function(consent){return/*#__PURE__*/React.createElement(\"option\",{key:consent.informed_consent_answer_id,value:consent.informed_consent_answer_id},consent.answer);})))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Label,{className:\"form-control-label\",htmlFor:\"exampleFormControlSelect3\"},\"Observaciones\"),/*#__PURE__*/React.createElement(Input,{defaultValue:\"\",id:\"example-text-input\",type:\"text\",onChange:function onChange(e){setObservations(e.target.value);}}))),/*#__PURE__*/React.createElement(FormGroup,{className:\"row\"},/*#__PURE__*/React.createElement(Col,{md:\"10\"}),/*#__PURE__*/React.createElement(Col,{md:\"2\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\"},\"Registrar\")))),next&&/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/admin/sociodemographic-data\",state:{id:location.state.id,run:location.state.run,name:location.state.name,apellido:location.state.apellido}}}))));};export default InformedConsent;","map":{"version":3,"sources":["C:/Users/Christian/Desktop/tele/Nueva carpeta/src/views/pages/patient/informed-consent.js"],"names":["React","useState","useEffect","Button","Col","Container","Form","FormGroup","Input","Row","InputGroup","InputGroupText","InputGroupAddon","Card","CardBody","Label","Progress","classnames","Axios","Redirect","getList","InformedConsent","location","consentRead","setConsentRead","next","setNext","observations","setObservations","acceptedConcentId","setAcceptedConcentId","acceptedConcents","setAcceptedConcents","getData","set","route","e","addInformedConsent","preventDefault","post","personId","state","id","informed_consent_answer_id","res","data","error","run","name","apellido","target","value","map","consent","answer","pathname"],"mappings":"ugBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAAyBC,SAAzB,KAA0C,OAA1C,CACA,OACIC,MADJ,CACYC,GADZ,CACiBC,SADjB,CAC4BC,IAD5B,CACkCC,SADlC,CAC6CC,KAD7C,CACoDC,GADpD,CACyDC,UADzD,CAEIC,cAFJ,CAEoBC,eAFpB,CAEqCC,IAFrC,CAE2CC,QAF3C,CAEqDC,KAFrD,CAE4DC,QAF5D,KAGO,YAHP,CAIA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,8BAAlB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,OAAT,KAAwB,oBAAxB,CACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,eACErB,QAAQ,CAAC,IAAD,CADV,wCAC7BsB,WAD6B,eAChBC,cADgB,8BAEdvB,QAAQ,CAAC,KAAD,CAFM,yCAE7BwB,IAF6B,eAEvBC,OAFuB,8BAGEzB,QAAQ,CAAC,EAAD,CAHV,yCAG7B0B,YAH6B,eAGfC,eAHe,8BAMc3B,QAAQ,CAAC,CAAD,CANtB,yCAM7B4B,iBAN6B,eAMVC,oBANU,8BAOY7B,QAAQ,CAAC,EAAD,CAPpB,0CAO7B8B,gBAP6B,gBAOXC,mBAPW,gBAQpC,GAAMC,CAAAA,OAAO,2FAAG,iBAAOC,GAAP,CAAYC,KAAZ,8IACIf,CAAAA,OAAO,CAACe,KAAD,CADX,QACNC,CADM,eAEZF,GAAG,CAACE,CAAD,CAAH,CAFY,sDAAH,kBAAPH,CAAAA,OAAO,iDAAb,CAIA/B,SAAS,CAAC,UAAM,CACZ+B,OAAO,CAACD,mBAAD,CAAsB,cAAtB,CAAP,CACH,CAFQ,CAEN,EAFM,CAAT,CAKA,GAAMK,CAAAA,kBAAkB,2FAAG,kBAAOD,CAAP,8HACvBA,CAAC,CAACE,cAAF,GADuB,uBAELpB,CAAAA,KAAK,CAACqB,IAAN,CAAW,yBAAX,CAChB,CACEC,QAAQ,CAAGlB,QAAQ,CAACmB,KAAT,CAAeC,EAD5B,CAEEC,0BAA0B,CAAEd,iBAF9B,CAGEF,YAAY,CAAEA,YAHhB,CAIEJ,WAAW,CAACA,WAJd,CADgB,CAFK,QAEjBqB,GAFiB,gBAUvB,GAAI,CAACA,GAAG,CAACC,IAAJ,CAASC,KAAd,CACCpB,OAAO,CAAC,IAAD,CAAP,CAXsB,wDAAH,kBAAlBW,CAAAA,kBAAkB,8CAAxB,CAgBA,mBACI,oBAAC,SAAD,mBACI,oBAAC,IAAD,mBACI,oBAAC,QAAD,mBACA,8BAAKf,QAAQ,CAACmB,KAAT,CAAeM,GAApB,MAA2BzB,QAAQ,CAACmB,KAAT,CAAeO,IAA1C,KAAiD1B,QAAQ,CAACmB,KAAT,CAAeQ,QAAhE,CADA,cAEI,yDAFJ,cAKI,oBAAC,IAAD,EAAM,QAAQ,CAAEZ,kBAAhB,CAAoC,IAAI,CAAC,MAAzC,eACA,oBAAC,SAAD,EAAW,SAAS,CAAC,KAArB,eAEQ,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,2FAA4D,GAA5D,cACA,yBAAG,IAAI,CAAC,8EAAR,CAAuF,GAAG,CAAC,qBAA3F,CAAiH,MAAM,CAAC,QAAxH,wBADA,CADJ,CAFR,CADA,cASI,oBAAC,SAAD,EAAW,SAAS,CAAC,KAArB,eACI,oBAAC,GAAD,mBAEI,oBAAC,KAAD,EACI,SAAS,CAAC,oBADd,CAEI,OAAO,CAAC,2BAFZ,iDAFJ,cAQI,4CAAK,6BAAO,SAAS,CAAC,0CAAjB,eACD,6BAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,CAAEd,WAAhC,CAA6C,QAAQ,CAAE,kBAACa,CAAD,QAAOZ,CAAAA,cAAc,CAAC,CAACD,WAAF,CAArB,EAAvD,EADC,cAED,4BACI,SAAS,CAAC,qCADd,CAEI,iBAAe,IAFnB,CAGI,gBAAc,OAHlB,EAFC,CAAL,CARJ,CADJ,CATJ,cA4BI,oBAAC,SAAD,EAAW,SAAS,CAAC,KAArB,eACI,oBAAC,GAAD,mBACI,oBAAC,KAAD,EACI,SAAS,CAAC,oBADd,CAEI,OAAO,CAAC,2BAFZ,kCADJ,cAOI,oBAAC,KAAD,EAAO,EAAE,CAAC,2BAAV,CAAsC,IAAI,CAAC,QAA3C,CAAoD,QAAQ,CAAE,kBAACa,CAAD,CAAO,CAAEN,oBAAoB,CAACM,CAAC,CAACc,MAAF,CAASC,KAAV,CAApB,CAAsC,CAA7G,EACKpB,gBAAgB,CAACqB,GAAjB,CAAqB,SAAAC,OAAO,qBACzB,8BAAQ,GAAG,CAAEA,OAAO,CAACV,0BAArB,CAAiD,KAAK,CAAEU,OAAO,CAACV,0BAAhE,EAA6FU,OAAO,CAACC,MAArG,CADyB,EAA5B,CADL,CAPJ,CADJ,CA5BJ,cA2CI,oBAAC,SAAD,EAAW,SAAS,CAAC,KAArB,eACI,oBAAC,GAAD,mBACI,oBAAC,KAAD,EACI,SAAS,CAAC,oBADd,CAEI,OAAO,CAAC,2BAFZ,kBADJ,cAOI,oBAAC,KAAD,EACI,YAAY,CAAC,EADjB,CAEI,EAAE,CAAC,oBAFP,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAAClB,CAAD,CAAO,CAAER,eAAe,CAACQ,CAAC,CAACc,MAAF,CAASC,KAAV,CAAf,CAAiC,CAJxD,EAPJ,CADJ,CA3CJ,cA4DI,oBAAC,SAAD,EAAW,SAAS,CAAC,KAArB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,EADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eAEE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAC,SAA5B,cAFF,CAJJ,CA5DJ,CALJ,CA8EM1B,IAAI,eAAI,oBAAC,QAAD,EAAU,EAAE,CAAE,CACxB8B,QAAQ,CAAE,8BADc,CAExBd,KAAK,CAAE,CAAEC,EAAE,CAAEpB,QAAQ,CAACmB,KAAT,CAAeC,EAArB,CAAyBK,GAAG,CAAEzB,QAAQ,CAACmB,KAAT,CAAeM,GAA7C,CAAkDC,IAAI,CAAE1B,QAAQ,CAACmB,KAAT,CAAeO,IAAvE,CAA6EC,QAAQ,CAAG3B,QAAQ,CAACmB,KAAT,CAAeQ,QAAvG,CAFiB,CAAd,EA9Ed,CADJ,CADJ,CADJ,CAyFH,CA1HD,CA4HA,cAAe5B,CAAAA,eAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Row, InputGroup,\r\n    InputGroupText, InputGroupAddon, Card, CardBody, Label, Progress\r\n} from 'reactstrap'\r\nimport classnames from \"classnames\";\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getList } from 'helpers/ListHelper';\r\nconst InformedConsent = ({location}) => {\r\n    const [consentRead, setConsentRead] = useState(true)   \r\n    const [next, setNext]=useState(false)\r\n    const [observations, setObservations]=useState(\"\")\r\n\r\n    \r\n    const [acceptedConcentId, setAcceptedConcentId] = useState(1)\r\n    const [acceptedConcents, setAcceptedConcents] = useState([]);\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n    useEffect(() => { \r\n        getData(setAcceptedConcents, \"list/consent\")\r\n    }, [])\r\n\r\n\r\n    const addInformedConsent = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"person/informed-consent\",\r\n          { \r\n            personId : location.state.id,\r\n            informed_consent_answer_id: acceptedConcentId,\r\n            observations: observations,\r\n            consentRead:consentRead\r\n          }\r\n        )\r\n        if (!res.data.error)\r\n         setNext(true) \r\n        \r\n        \r\n      }\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Consentimiento Informado\r\n                    </h1>\r\n                    <Form onSubmit={addInformedConsent} role=\"form\">\r\n                    <FormGroup className=\"row\">\r\n                            \r\n                            <Col md=\"10\">\r\n                                <b>Por favor, lea con detención el consentimiento informado{\" \"}\r\n                                <a href=\"https://drive.google.com/drive/u/4/folders/1Tg7sQlE7y9l4TqlJ3dXc7cY807qXKf5C\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    disponible aquí.</a></b>\r\n                            </Col>                 \r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                \r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    ¿Tomó conocimiento del consentimiento?\r\n                                </Label>\r\n                                <div><label className=\"custom-toggle custom-toggle-success mr-1\">\r\n                                    <input type=\"checkbox\" checked={consentRead} onChange={(e) => setConsentRead(!consentRead)} />\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label></div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    ¿Acepta el consentimiento?\r\n                                </Label>\r\n                                <Input id=\"exampleFormControlSelect3\" type=\"select\" onChange={(e) => { setAcceptedConcentId(e.target.value) }}>\r\n                                    {acceptedConcents.map(consent=> (\r\n                                        <option key={consent.informed_consent_answer_id} value={consent.informed_consent_answer_id}>{consent.answer}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Observaciones\r\n                                </Label>\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    onChange={(e) => { setObservations(e.target.value) }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                       \r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                            \r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                            \r\n                              <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n                            \r\n                              \r\n                            </Col>\r\n                        </FormGroup>\r\n                        \r\n                    </Form>\r\n                    { next && <Redirect to={{\r\n                    pathname: \"/admin/sociodemographic-data\",\r\n                    state: { id: location.state.id, run: location.state.run, name: location.state.name, apellido : location.state.apellido} \r\n                    }} /> }\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InformedConsent\r\n"]},"metadata":{},"sourceType":"module"}