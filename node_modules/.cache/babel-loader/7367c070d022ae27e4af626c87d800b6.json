{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Christian\\\\WebstormProjects\\\\teleodontoweb\\\\src\\\\components\\\\Fantoma\\\\FormsExams\\\\AddMarkerForm.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, FormGroup, Form, Input, Modal, Label, Col, Row, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { getList } from 'helpers/ListHelper';\n\nvar AddMarkerForm = function AddMarkerForm(props) {\n  var initialFormState = {\n    id: null,\n    idAnamnesis: null,\n    form: 1,\n    length: 0,\n    width: 0,\n    height: 0,\n    color: 1,\n    surface: 1,\n    consistency: 1,\n    evolution_time: null,\n    evolution_form: 1,\n    symptomatology: 1,\n    edge: 1,\n    localization: 1,\n    observation: '',\n    position_x: 0,\n    position_y: 0,\n    position_z: 0\n  };\n\n  var _useState = useState(initialFormState),\n      _useState2 = _slicedToArray(_useState, 2),\n      marker = _useState2[0],\n      setMarker = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formData = _useState4[0],\n      setFormData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      colorData = _useState6[0],\n      setColorData = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      surfaceData = _useState8[0],\n      setSurfaceData = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      consistencyData = _useState10[0],\n      setConsistencyData = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      evolutionFormData = _useState12[0],\n      setEvolutionFormData = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      symptomatologyData = _useState14[0],\n      setSymptomatologyData = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      edgeData = _useState16[0],\n      setEdgeData = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      localizationData = _useState18[0],\n      setLocalizationData = _useState18[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(set, route) {\n      var e;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getList(route);\n\n            case 2:\n              e = _context.sent;\n              set(e);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getData(setFormData, \"list/forms\");\n    getData(setColorData, \"list/colors\");\n    getData(setSurfaceData, \"list/surfaces\");\n    getData(setConsistencyData, \"list/consistencies\");\n    getData(setEvolutionFormData, \"list/evolution-forms\");\n    getData(setSymptomatologyData, \"list/symptomatologies\");\n    getData(setEdgeData, \"list/edges\");\n    getData(setLocalizationData, \"list/localizations\");\n  }, []);\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setMarker(_objectSpread(_objectSpread({}, marker), {}, {\n      [name]: value\n    }));\n    console.log(marker.orientation_x);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal-dialog-centered\",\n    isOpen: props.adding,\n    size: \"xl\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Descripci\\xF3n de la lesi\\xF3n\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"pt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      props.addMarker(marker);\n      setMarker(initialFormState);\n    },\n    role: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, \"Forma\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"form\",\n    type: \"select\",\n    name: \"form\",\n    defaultValue: marker.form,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, formData.map(function (form) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: form.name,\n      value: form.form_id,\n      onFocus: function onFocus(e) {\n        return console.log(e.target);\n      },\n      id: form.name,\n      \"data-toggle\": \"tooltip\",\n      title: form.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }, form.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, \"Color\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"color\",\n    type: \"select\",\n    name: \"color\",\n    defaultValue: marker.color,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, colorData.map(function (color) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: color.value,\n      value: color.color_id,\n      id: color.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }, color.value);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, \"Superficie\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"surface\",\n    type: \"select\",\n    name: \"surface\",\n    defaultValue: marker.surface,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, surfaceData.map(function (surface) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: surface.value,\n      value: surface.surface_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, surface.value);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"Tama\\xF1o\"), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: 1,\n    max: 150,\n    step: \"1\",\n    name: \"length\",\n    placeholder: \"largo\"\n    /* defaultValue={0} */\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: 1,\n    max: 150,\n    step: \"1\",\n    name: \"width\",\n    placeholder: \"ancho\"\n    /* defaultValue={0} */\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    min: 0,\n    max: 150,\n    step: \"1\",\n    name: \"height\",\n    placeholder: \"alto\"\n    /* defaultValue={0} */\n    ,\n    onChange: function onChange(e) {\n      handleInputChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 37\n    }\n  }, \"mm\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, \"Consistencia\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"consistency\",\n    type: \"select\",\n    name: \"consistency\",\n    defaultValue: marker.consistency,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, consistencyData.map(function (consistency) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: consistency.name,\n      value: consistency.consistency_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 41\n      }\n    }, consistency.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, \"Bordes\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"edge\",\n    type: \"select\",\n    name: \"edge\",\n    defaultValue: marker.edge,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }, edgeData.map(function (edge) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: edge.name,\n      value: edge.edge_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 41\n      }\n    }, edge.name);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, \"Sintomatolog\\xEDa\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"symptomatology\",\n    type: \"select\",\n    name: \"symptomatology\",\n    defaultValue: marker.symptomatology,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, symptomatologyData.map(function (symptomatology) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: symptomatology.value,\n      value: symptomatology.symptomatology_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 41\n      }\n    }, symptomatology.value);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, \"Forma de evoluci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"evolution_form\",\n    type: \"select\",\n    name: \"evolution_form\",\n    defaultValue: marker.evolution_form,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, evolutionFormData.map(function (evolutionForm) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: evolutionForm.value,\n      value: evolutionForm.evolution_form_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 41\n      }\n    }, evolutionForm.value);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 33\n    }\n  }, \"Tiempo de evoluci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"evolution_time\",\n    type: \"text\",\n    name: \"evolution_time\",\n    maxLength: \"20\",\n    defaultValue: marker.evolution_time //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }, \"Localizaci\\xF3n\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"localization\",\n    type: \"select\",\n    name: \"localization\",\n    defaultValue: marker.localization //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, localizationData.map(function (localization) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: localization.value,\n      value: localization.localization_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 41\n      }\n    }, localization.value);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"form-control-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 33\n    }\n  }, \"Observaciones\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"example-text-input1\",\n    type: \"textarea\",\n    name: \"observation\",\n    maxLength: \"200\",\n    defaultValue: marker.observation //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\n    //required\n    ,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 29\n    }\n  }, \"Guardar\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      return props.setAdding(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }, \"Cancelar\"))))));\n};\n\nexport default AddMarkerForm;","map":{"version":3,"sources":["C:/Users/Christian/WebstormProjects/teleodontoweb/src/components/Fantoma/FormsExams/AddMarkerForm.jsx"],"names":["React","useState","useEffect","Button","FormGroup","Form","Input","Modal","Label","Col","Row","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","getList","AddMarkerForm","props","initialFormState","id","idAnamnesis","form","length","width","height","color","surface","consistency","evolution_time","evolution_form","symptomatology","edge","localization","observation","position_x","position_y","position_z","marker","setMarker","formData","setFormData","colorData","setColorData","surfaceData","setSurfaceData","consistencyData","setConsistencyData","evolutionFormData","setEvolutionFormData","symptomatologyData","setSymptomatologyData","edgeData","setEdgeData","localizationData","setLocalizationData","getData","set","route","e","handleInputChange","event","target","name","value","console","log","orientation_x","adding","preventDefault","addMarker","map","form_id","description","color_id","surface_id","consistency_id","edge_id","symptomatology_id","evolutionForm","evolution_form_id","localization_id","setAdding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    Row,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from \"reactstrap\";\r\nimport { getList } from 'helpers/ListHelper';\r\n\r\n\r\n\r\nconst AddMarkerForm = (props) => {\r\n    const initialFormState = {\r\n        id: null,\r\n        idAnamnesis: null,\r\n        form: 1,\r\n        length: 0,\r\n        width: 0,\r\n        height: 0,\r\n        color: 1,\r\n        surface: 1,\r\n        consistency: 1,\r\n        evolution_time: null,\r\n        evolution_form: 1,\r\n        symptomatology: 1,\r\n        edge: 1,\r\n        localization: 1,\r\n        observation: '',\r\n        position_x: 0,\r\n        position_y: 0,\r\n        position_z: 0,\r\n    }\r\n    const [marker, setMarker] = useState(initialFormState)\r\n\r\n    const [formData, setFormData] = useState([]);\r\n    const [colorData, setColorData] = useState([]);\r\n    const [surfaceData, setSurfaceData] = useState([]);\r\n    const [consistencyData, setConsistencyData] = useState([]);\r\n    const [evolutionFormData, setEvolutionFormData] =useState([]);\r\n    const [symptomatologyData, setSymptomatologyData] = useState([]);\r\n    const [edgeData, setEdgeData] = useState([]);\r\n    const [localizationData, setLocalizationData] = useState([]);\r\n\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(setFormData, \"list/forms\")\r\n        getData(setColorData, \"list/colors\")\r\n        getData(setSurfaceData, \"list/surfaces\")\r\n        getData(setConsistencyData, \"list/consistencies\")\r\n        getData(setEvolutionFormData, \"list/evolution-forms\")\r\n        getData(setSymptomatologyData, \"list/symptomatologies\")\r\n        getData(setEdgeData, \"list/edges\")\r\n        getData(setLocalizationData, \"list/localizations\")\r\n    }, [])\r\n\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n        console.log(marker.orientation_x)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.adding}\r\n                size=\"xl\"\r\n            >\r\n                <ModalHeader >\r\n                   Descripción de la lesión\r\n                </ModalHeader>\r\n                <ModalBody className=\"pt-1\">\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.addMarker(marker)\r\n                        setMarker(initialFormState)\r\n                    }}\r\n                        role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma</Label>\r\n                                <Input\r\n                                    id=\"form\"\r\n                                    type=\"select\"\r\n                                    name=\"form\"\r\n                                    defaultValue={marker.form}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {formData.map(form => (\r\n                                        <option \r\n                                            key={form.name} \r\n                                            value={form.form_id} \r\n                                            onFocus={(e)=>console.log(e.target) } \r\n                                            id={form.name}  \r\n                                            data-toggle=\"tooltip\" \r\n                                            title={form.description}\r\n                                            >\r\n                                                {form.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Color</Label>\r\n                                <Input\r\n                                    id=\"color\"\r\n                                    type=\"select\"\r\n                                    name=\"color\"\r\n                                    defaultValue={marker.color}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {colorData.map(color => (\r\n                                        <option key={color.value} value={color.color_id} id={color.value} >{color.value}</option>\r\n                                    ))}\r\n                                    \r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Superficie</Label>\r\n                                <Input\r\n                                    id=\"surface\"\r\n                                    type=\"select\"\r\n                                    name=\"surface\"\r\n                                    defaultValue={marker.surface}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {surfaceData.map(surface => (\r\n                                        <option key={surface.value} value={surface.surface_id}>{surface.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup> \r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" >Tamaño</Label>\r\n                                <InputGroup>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        min={1}\r\n                                        max={150}\r\n                                        step=\"1\"\r\n                                        name=\"length\"\r\n                                        placeholder=\"largo\"\r\n                                        /* defaultValue={0} */\r\n                                        onChange={(e) => { handleInputChange(e) }}\r\n                                        required\r\n                                    />\r\n                                        <Input\r\n                                        type=\"number\"\r\n                                        min={1}\r\n                                        max={150}\r\n                                        step=\"1\"\r\n                                        name=\"width\"\r\n                                        placeholder=\"ancho\"\r\n                                        /* defaultValue={0} */\r\n                                        onChange={(e) => { handleInputChange(e) }}\r\n                                        required\r\n                                    />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        min={0}\r\n                                        max={150}\r\n                                        step=\"1\"\r\n                                        name=\"height\"\r\n                                        placeholder=\"alto\"\r\n                                        /* defaultValue={0} */\r\n                                        onChange={(e) => { handleInputChange(e) }}\r\n                                    />\r\n                                    <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Consistencia</Label>\r\n                                <Input\r\n                                    id=\"consistency\"\r\n                                    type=\"select\"\r\n                                    name=\"consistency\"\r\n                                    defaultValue={marker.consistency}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {consistencyData.map(consistency => (\r\n                                        <option key={consistency.name} value={consistency.consistency_id}>{consistency.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Bordes</Label>\r\n                                <Input\r\n                                    id=\"edge\"\r\n                                    type=\"select\"\r\n                                    name=\"edge\"\r\n                                    defaultValue={marker.edge}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {edgeData.map(edge => (\r\n                                        <option key={edge.name} value={edge.edge_id}>{edge.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Sintomatología</Label>\r\n                                <Input\r\n                                    id=\"symptomatology\"\r\n                                    type=\"select\"\r\n                                    name=\"symptomatology\"\r\n                                    defaultValue={marker.symptomatology}\r\n                                    onChange={handleInputChange}>\r\n                                    {symptomatologyData.map(symptomatology => (\r\n                                        <option key={symptomatology.value} value={symptomatology.symptomatology_id}>{symptomatology.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma de evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_form\"\r\n                                    type=\"select\"\r\n                                    name=\"evolution_form\"\r\n                                    defaultValue={marker.evolution_form}\r\n                                    onChange={handleInputChange}>\r\n                                     {evolutionFormData.map(evolutionForm => (\r\n                                        <option key={evolutionForm.value} value={evolutionForm.evolution_form_id}>{evolutionForm.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Tiempo de evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_time\"\r\n                                    type=\"text\"\r\n                                    name=\"evolution_time\"\r\n                                    maxLength=\"20\"\r\n                                    defaultValue={marker.evolution_time}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}>\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>               \r\n                        <FormGroup className=\"row\"> \r\n                           \r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Localización</Label>\r\n                                <Input\r\n                                    id=\"localization\"\r\n                                    type=\"select\"\r\n                                    name=\"localization\"\r\n                                    defaultValue={marker.localization}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                {localizationData.map(localization => (\r\n                                        <option key={localization.value} value={localization.localization_id}>{localization.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Observaciones</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"textarea\"\r\n                                    name=\"observation\"\r\n                                    maxLength=\"200\"\r\n                                    defaultValue={marker.observation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                           \r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setAdding(false)}>Cancelar\r\n                             </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default AddMarkerForm"]},"metadata":{},"sourceType":"module"}