{"version":3,"sources":["assets/img/brand/argon-react.png","helpers/AuthHelper.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","views/pages/dashboards/Dashboard.js","components/Headers/AuthHeader.js","views/pages/examples/Login.js","views/pages/examples/LoginExp.js","views/pages/examples/Register.js","helpers/axiosConfig.js","helpers/ListHelper.js","hooks/useList.js","views/pages/components/SimpleModal.jsx","views/pages/patient/list-user.js","views/pages/patient/register-user.js","views/pages/patient/patient-admission.js","views/pages/patient/list-patient.js","routes.js","views/pages/patient/consultation-appointment.js","views/pages/patient/list-patient-anamnesis.js","views/pages/patient/referral.js","views/pages/patient/list-records.js","views/pages/patient/consultation-motive.js","views/pages/patient/covid-risk.js","views/pages/patient/sociodemographic-data.js","views/pages/patient/covid-risk-reception.js","views/pages/patient/informed-consent-reception.js","views/pages/patient/anamnesis-general.js","views/pages/patient/anamnesis-medico-geriatra.js","views/pages/patient/evaluations.js","views/pages/patient/informed-consent.js","views/pages/patient/patient-carer.js","views/pages/patient/clinical-record.js","views/pages/patient/background.js","views/pages/patient/dental-anamnesis.js","views/pages/patient/dental-anamnesis-u.js","views/pages/patient/general-anamnesis-u.js","views/pages/patient/medical-anamnesis-u.js","views/pages/patient/muscular-exam.js","components/Fantoma/FormsExams/AddExtraOralForm.jsx","components/Fantoma/FormsExams/EditExtraOralForm.jsx","components/Fantoma/Tag/TagExtraOral.jsx","components/Fantoma/Tag/MarkersGroupExtraOral.jsx","components/Fantoma/CameraControls.jsx","components/Fantoma/MouseHelper.jsx","components/Fantoma/FantomaExtraOral.jsx","views/pages/patient/extra-oral.js","components/Fantoma/FormsExams/AddMarkerForm.jsx","components/Fantoma/FormsExams/EditMarkerForm.jsx","components/Fantoma/Tag/Tag.jsx","components/Fantoma/Tag/MarkersGroup.jsx","components/Fantoma/FantomaIntraOral.jsx","views/pages/patient/soft-tissues-exam.js","components/Fantoma/FantomaOdontogram.jsx","components/Fantoma/FormsExams/OdontogramModal.jsx","views/pages/patient/odontogram.js","views/pages/patient/peridontrograma.js","layouts/Admin.js","layouts/RTL.js","components/Footers/AuthFooter.js","layouts/Auth.js","index.js","variables/charts.js","assets/img/brand/tego5.svg","assets/img/icons/common/github.svg","assets/img/icons/common/google.svg","assets/img/image-placeholder.png"],"names":["module","exports","login","username","password","a","Axios","post","process","then","res","data","auth","galleta","set","expires","console","log","getJSON","name","jwt_decode","token","names","localStorage","setItem","getName","getItem","remove","withCredentials","get","id","AdminNavbar","redirigir","openSearch","document","body","classList","add","setTimeout","closeSearch","afuera","e","preventDefault","AuthHelper","logout","props","history","push","Navbar","className","classnames","this","theme","Container","fluid","Collapse","navbar","isOpen","Nav","ButtonGroup","Button","outline","color","size","disabled","onClick","React","Component","defaultProps","toggleSidenav","sidenavOpen","Calendar","Row","Col","href","target","Sidebar","activeRoute","routeName","location","pathname","indexOf","onMouseEnterSidenav","contains","onMouseLeaveSidenav","toggleCollapse","setState","collapseOpen","state","closeCollapse","getCollapseStates","routes","initialState","map","prop","key","collapse","getCollapseInitialState","views","closeSidenav","window","innerWidth","createLinks","isAdmin","isAuthenticated","user","result","user_type_id","redirect","st","NavItem","NavLink","data-toggle","aria-expanded","active","icon","miniName","layout","path","to","activeClassName","tag","NavLinkRRD","undefined","i","length","logo","scrollBarInner","NavbarBrand","alt","imgAlt","src","imgSrc","style","maxHeight","marginTop","marginLeft","rtlActive","onMouseEnter","onMouseLeave","navigator","platform","Dashboard","activeNav","chartExample1Data","Chart","parseOptions","chartOptions","require","Card","CardHeader","CardBody","md","AuthHeader","lg","xl","title","lead","xmlns","preserveAspectRatio","version","viewBox","x","y","points","Login","Form","role","FormGroup","focused","focusedEmail","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","type","onFocus","onBlur","focusedPassword","htmlFor","xs","LoginExp","loginFunc","formatRut","run","pass","wrongLogin","timeWrong","countDown","setInterval","clearInterval","Alert","onSubmit","method","focusedRun","onChange","value","Register","focusedName","axios","create","baseURL","interceptors","request","use","config","headers","getList","route","error","code","sqlMessage","useList","ruta","useState","list","setList","useEffect","fetchData","SimpleModal","forwardRef","ref","display","setDisplay","modalOptions","setModalOptions","useImperativeHandle","setModal","options","Modal","ModalHeader","toggle","ModalBody","text","ModalFooter","fx","ListUser","fetchUsers","users","setUsers","userMedicalAreas","setUserMedicalAreas","userTypes","medicalAreas","currentUser","setCurrentUser","group","setGroup","loading","setLoading","searchTerm","setSearchTerm","fetchAreas","user_id","handleInputChange","displayModal","setDisplayModal","changeGroup","getElementById","checkValidity","click","modalRef","useRef","current","deleteUserMedicalArea","user_medical_area_id","delete","updateStateUser","put","saveUserMedicalArea","medical_area_id","updateUser","cod","msg","reqTag","Table","responsive","scope","filter","val","includes","fullname","toLowerCase","lastnames","showModal","paddingRight","cursor","Label","autoComplete","required","email","hidden","userMedicalArea","RegisterUser","types","setUser","setAdded","resetForm","reset","addUser","scrollTo","top","paternal_last_name","maternal_last_name","PatientAdmission","regions","towns","carerTowns","registereds","setToggle","next","setNext","createdPersonId","setCreatedPersonId","defaultCarer","carer_names","carer_paternal_lastname","carer_maternal_lastname","carer_town_id","carer_phone","carer_cellphone","carer_email","newCarer","setNewCarer","paternal_lastname","maternal_lastname","birthdate","address","is_retired","region_id","town_id","registered_by_id","phone","cellphone","newPerson","setNewPerson","handleInputChangePerson","handleInputChangeCarer","addPerson","carer_lastnames","updateStatePerson","alert","hoy","Date","pattern","min","max","getFullYear","getMonth","getDate","maxLength","checked","handleInputCheckedChange","data-label-off","data-label-on","pattenr","apellido","ListPatient","fetchPersons","persons","setPersons","currentPerson","setCurrentPerson","maritalStatus","livesWith","nativeOrigins","previsions","educationLevels","covidRisks","acceptedConcents","updatePerson","person","person_id","moment","format","urgency","pain","cavities","wounds","bleeding","fracture","trauma","swelling","treatment","other","ohip14sp_result","dependency_level","occupation","prevision_id","marital_status_id","birth_commune","native_origin_id","educational_level_id","lives_with_id","consent_read","informed_consent_answer_id","answer","observations","covid19_risk_id","covid_risk","step","temperature","component","cleanLocation","setCleanLocation","newAppointment","setNewAppointment","l_run","setSimpleModal","setPerson","cambiar","defaultProfessional","professional_id","professional_fullname","professional","setProfessional","professionals","setProfessionals","displayModalProfessionals","setDisplayModalProfessionals","searchTermProfessional","setSearchTermProfessional","showModalProfessionals","fetchProfessionals","obtener","displayModalAppointments","setDisplayModalAppointments","appointments","setAppointments","showModalAppointments","fetchAppointments","defaultAppointment","cons_appo_id","cons_appo_date","cons_appo_time","cons_appo_place","cons_appo_description","displayModalAppointment","setDisplayModalAppointment","appointment","setAppointment","disableAppointment","updateAppointment","saveAppointment","ingresado","setIngresado","e_person","showModalAppointmentToCreate","align","marginRight","marginBottom","backgroundColor","readOnly","showModalAppointmentToUpdate","professional_run","professional_medical_area_name","professional_medical_area_id","professional_email","datos","setDatos","setDeletModal","setShowDelete","Person","idRun","lastname","answer_id","personas","listPatient","response","forEach","element","run_id","odontoFichaAnamnesis","setOdontoFichaAnamnesis","nuevaOdontoAnamnesis","setNuevaOdontoAnamnesis","medicoFichaAnamnesis","setMedicoFichaAnamnesis","nuevaMedicoAnamnesis","setNuevaMedicoAnamnesis","generalFichaAnamnesis","setGeneralFichaAnamnesis","nuevaGeneralAnamnesis","setNuevaGeneralAnamnesis","setName","setRun","setLastName","setId","datosPersona","consultaAnamnesisOdonto","consultaAnamnesisMedico","consultaAnamnesisGeneral","modalReception","setModalReception","modalGeneral","setModalGeneral","modalMedica","setModalMedica","modalOdonto","setModalOdonto","reception","anamnesisGeneral","medicalAnamnesis","dentalAnamnesis","modal","searchTermPerson","setSearchTermPerson","displayModalReferrals","setDisplayModalReferrals","referrals","setReferrals","showModalReferrals","fetchReferrals","defaultReferral","referral_id","referral_description","displayModalReferral","setDisplayModalReferral","referral","setReferral","disableReferral","updateReferral","emailBody","saveReferral","showModalReferralToCreate","handleInputChangeReferral","referral_created_date","showModalReferralToUpdate","UserTest","ConsultationMotive","setUrgency","setPain","setCavities","setWounds","setBleeding","setFracture","setTrauma","setSwelling","setTreatment","setOther","ohip","setOhip","barthel","setBarthel","addPreConsultationMotive","personId","defaultValue","CovidRisk","covidRiskId","setcovidRiskId","casos","addCovidRisk","condicion","SociodemographicData","socio","setSocio","addSocialdemographicDataToPerson","previsionId","maritalStatusId","birthCommune","nativeOriginId","educationalLevelId","livesWithId","setTemperature","temperatura","htmslFor","InformedConsent","file","setFile","enviar","archivo","f","FormData","append","catch","rel","accept","files","AnamnesisGeneral","addAnamnesis","allergies","selData","alergias","otherDisease","otros_observaciones","underTreatment","bajo_tratamiento","previousSurgeries","cirugias","medicineDose","farmacos","medicineAllergies","alergias_farmacos","radioChemoTherapy","radioterapia","selectedDiseases","selDiseases","consult_motive","motivo_consulta","consult_motive_history","motivo_consulta_historial","medic_alert","alerta_medica","prmDiseases","setPrmDiseases","setSelDiseases","setSelData","getData","disease","disease_id","ind","splice","concat","handleInputChangeCheck","handleInputChangeYN","AnamnesisMedicoGeriatra","anamId","setAnamId","velocidadMarcha","peso","altura","imc","sistolic","diastolic","frecCardiaca","saturacionO2","fuerzaMuscular","glicemia","extraInfo","folsteinTest","pfeifferTest","yesavageTest","addAMG","walkingSpeed","Number","weight","height","bmi","bloodPressure","heartRate","oxygenSaturation","muscularStrength","glycemia","insertId","folstein_value","pfeiffer_value","yesavage_value","boton","setBoton","nombreImagen","setNombreImagen","fotos","setFotos","addPhoto","anamnId","addEvaluations","obtainPhoto","foto","url","foto_nombre","consentRead","setConsentRead","setObservations","acceptedConcentId","setAcceptedConcentId","setAcceptedConcents","addInformedConsent","consent","PatientCarer","carerNames","carerPaternalLastname","carerMaternalLastname","carerPhone","carerCellPhone","carerEmail","contador","addCarer","verificationNumber","paternalLastname","FileView","fileInfo","setFileInfo","fileById","open","focus","Reviews","revText","setRevText","reviewTypes","reviews","setReviews","selectedFilter","setSelectedFilter","rtId","setRtId","fileWillPost","setFileWillPost","fetchReviews","rut","resetFile","noFile","userId","getUserId","reviewTypeId","description","withFile","fileName","check","inline","rt","data-timeline-axis-style","data-timeline-content","overflow","rev","String","review_type_id","review_id","c_time","c_date","UncontrolledTooltip","c_year","rTypeId","reviewType","Boolean","has_file","without","visibility","ClinicalRecord","blankMotive","consultationMotive","setConsultationMotive","diagsTreats","setDiagsTreats","medicalData","setMedicalData","diseases","setAnamnId","getConsultationMotive","motive","getDiagnosisAndTreatment","getMedicalData","motiveList","s","motives","trim","charAt","toUpperCase","slice","fetchLastDental","dental_anamnesis_id","borderless","pellido","d","medicine_allergies","medicine_dose","dT","odontological_diag","treatment_plan","Background","alcohol","setAlcohol","lastTime","setLastTime","drugs","setDrugs","smoke","setSmoke","smokeCuantity","setSmokeCuantity","badHabits","setBadHabits","bruxismo","setBruxismo","anam_id","addBackground","DentalAnamnesis","defreal","setDefreaL","ausenciaEncia","setAusenciaEncia","recesionesGingivales","setRecesionesGingivales","posicionAberrante","setPosicionAberrante","profundidad","setProfundidad","parcialTeeth","setParcialTeeth","totalTeeth","setTotalTeeth","parcialRemovableProstheses","setParcialRemovableProstheses","totalRemovableProstheses","setTotalRemovableProstheses","fixedProstheses","setFixedProstheses","fixedProsthesesImplants","setFixedProsthesesImplants","prosthesesMaterial","setProsthesesMaterial","icdas2Index","setIcdas2Index","cpodIndex","setCpodIndex","addDentalAnamnesis","setFileName","fileType","setFileType","hasFile","setHasFile","setFiles","defaultHelpText","extAllowed","helpText","setHelpText","fetchFiles","dental","cleanFile","saveFile","removeFile","fId","saveChanges","setDental","saveChangesFromButton","last_dental_visit","tabacco","tabacco_cuantity","other_bad_habit","bruxism","painpr","painfr","clickr","crepr","painpl","painfl","clickl","crepl","masetero_d","masetero_i","temporal_d","temporal_i","pterigoideo_internoi","pterigoideo_internod","pterigoideo_externoi","pterigoideo_externod","neck_muscles","bloqueo_ar","diag","obs","parcial_teeth","total_teeth","parcial_removable_prostheses","total_removable_prostheses","fixed_prostheses","fixed_prostheses_implants","prostheses_material","ausencia_encia","recesiones_gingivales","posicion_aberrante","other_mucogingival_alteration","periodontal_diag","icdas2_index","cpod_index","has","setHas","foto_id","uploadFile","full","lastIndexOf","loadFile","GeneralAnamnesis","fetchLastGeneral","general_anamnesis_id","other_disease","under_treatment","previous_surgeries","radio_chemo_therapy","general","setGeneral","fetchDiseases","setDiseases","obj","prm","handleCurrentDiseases","MedicalAnamnesis","fetchLastMedical","medical","geriatric_medical_anamnesis_id","walking_speed","heigth","blood_pressure","heart_rate","oxygen_saturation","muscular_strength","extra_info","folestein_mmse","pfeiffer_test","yesavage_test","setMedical","MuscularExam","setPainpr","setPainfr","setClickr","setCrepr","setPainpl","setPainfl","setClickl","setCrepl","maseterod","setMaseterod","maseteroi","setMaseteroi","temporald","setTemporald","temporali","setTemporali","pterigoideoInternoi","setPterigoideoInternoi","pterigoideoInternod","setPterigoideoInternod","pterigoideoExternoi","setPterigoideoExternoi","pterigoideoExternod","setPterigoideoExternod","musculosCuello","setMusculosCuello","bloqueoAr","setBloqueoAr","diagnostico","setDiagnostico","observaciones","setObservaciones","addMuscularExam","AddMarkerForm","initialFormState","idAnamnesis","inspection","palpation","position_x","position_y","position_z","marker","setMarker","event","adding","addMarker","setAdding","EditExtraOralForm","currentMarker","editing","updateMarker","setEditing","TagExtraOral","hovered","setHover","setActive","modalDelete","setModalDelete","toggleDelete","scale","onPointerOver","onPointerOut","position","args","emissive","roughness","Html","center","transform","zIndexRange","width","zIndex","right","editMarker","CardImgOverlay","CardImg","padding","sm","deleteMarker","MarkersGroup","markers","extend","OrbitControls","CameraControls","useThree","camera","domElement","gl","controls","useFrame","update","autoRotate","enableZoom","minDistance","maxDistance","enableDamping","dampingFactor","enablePan","maxAzimuthAngle","Math","PI","minAzimuthAngle","maxPolarAngle","minPolarAngle","MouseHelper","intersect","helper","onMouseMove","object","copy","point","n","face","normal","clone","mesh","transformDirection","matrixWorld","multiplyScalar","lookAt","typeExam","handleOrientation","rotation","handlePosition","addEventListener","removeEventListener","visible","attach","Model","useGLTF","nodes","materials","material","rostro","geometry","mejillas","encia","reb_alv_inf_papilas","reb_alv_sup_papilas","esmalte","lengua_normal","preload","ExtraOral","positionHelper","setPositionHelper","canvasSize","setCanvasSize","rSelected","setRSelected","visibilityHelper","setVisibilityHelper","setMarkers","setCurrentMarker","addTooltipOpen","setAddTooltipOpen","editTooltipOpen","setEditTooltipOpen","getMarkers","newMarkers","extra_oral_exam_id","dentalAnamnesisId","z","updatedMarker","observation","extraOralExamId","navbarSize","getElementsByClassName","footerSize","handleResize","offsetWidth","innerHeight","offsetHeight","ButtonToolbar","left","Tooltip","placement","AddExtraOralForm","antialias","shadowMap","pixelRatio","devicePixelRatio","fov","intensity","castShadow","fallback","onDoubleClick","MarkersGroupExtraOral","form","surface","consistency","evolution_time","evolution_form","symptomatology","edge","localization","formData","setFormData","colorData","setColorData","surfaceData","setSurfaceData","consistencyData","setConsistencyData","evolutionFormData","setEvolutionFormData","symptomatologyData","setSymptomatologyData","edgeData","setEdgeData","localizationData","setLocalizationData","orientation_x","form_id","color_id","surface_id","consistency_id","edge_id","symptomatology_id","evolutionForm","evolution_form_id","localization_id","EditMarkerForm","Tag","htmlref","setForm","setColor","setSurface","setConsistency","setEvolutionForm","setSymptomatology","setEdge","setLocalization","orientation","orientation_y","orientation_z","styleTd","whiteSpace","paddingLeft","textAlign","textJustify","maxWidth","styleTh","getTranslate3d","values","split","fibroma_traumatico","offsetParent","find","wordWrap","aria-hidden","orientationHelper","material-side","THREE","material-opacity","SoftTissuesExam","setOrientationHelper","soft_tissues_exam_id","formId","colorId","surfaceId","consistencyId","evolutionTime","evolutionFromId","symptomatologyId","edgeId","localizationId","softTissuesExamId","teeth","TeethMeshes","Object","keys","item","teeth_state_id","fdi_name","stopPropagation","opacity","material-transparent","Odontogram","clicked","setClicked","teethState","setTeethState","matrix","setMatrix","setColorId","updateTeethStateChanged","counter","tooth","newTeethState","setAttribute","getBBox","1","2","3","4","5","cssModule","fill","stroke","strokeLinejoin","strokeOpacity","strokeWidth","strokeLinecap","strokeDasharray","strokeMiterlimit","updateOdontogram","odontogramId","setOpen","gumOpacity","setGumOpacity","piecesTooltipOpen","setPiecesTooltipOpen","opacityTooltipOpen","setOpacityTooltipOpen","setOdontogramId","setTeeth","initialTeethState","teeth_id","addTeethStates","initialTeeth","getOdontogramId","odontogram_id","getTeethState","updatedOdontogram","resizeCanvas","OdontogramModal","Icon","xmlSpace","Periodontogram","periodontalDiagnosis","setPeriodontalDiagnosis","odontologicalDiagnosis","setOdontologicalDiagnosis","treatmentPlan","setTreatmentPlan","addDiagnosticos","Admin","getRoutes","getBrandText","getNavbarTheme","documentElement","scrollTop","scrollingElement","refs","mainContent","innerLink","brandText","CovidRiskReception","InformedConsentReception","Evaluations","PhysicalParameters","DentalAnamnesisU","GeneralAnamnesisU","MedicalAnamnesisU","from","AdminFooter","RTL","Auth","AuthFooter","ReactDOM","render","randomScalingFactor","round","random","elements","Rectangle","prototype","draw","bottom","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","barSize","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","index","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fonts","colors","100","200","300","400","500","600","700","800","900","default","primary","secondary","info","success","danger","warning","chartExample1","scales","yAxes","gridLines","zeroLineColor","ticks","callback","tooltips","callbacks","label","datasets","datasetIndex","yLabel","content","data1","canvas","labels","data2","chartExample2","maxBarThickness","chartExample3","chartExample4","pointRadius","pointHoverRadius","showLine","chartExample5","legend","animation","animateScale","animateRotate","chartExample6","chartExample7","mode","xAxes","stacked","defaults","global","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","usePointStyle","line","tension","borderCapStyle","rectangle","arc","enabled","doughnut","cutoutPercentage","legendCallback","chart","bgColor","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent"],"mappings":"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","file":"static/js/main.50a0b0a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","import jwt_decode from 'jwt-decode';\r\nimport Axios from \"axios\";\r\nimport galleta from 'js-cookie'\r\n\r\n\r\nclass AuthService {\r\n\r\n    login = async (username, password) => {\r\n        return await Axios.post(process.env.REACT_APP_API_URL + \"session/login\", {\r\n            username: username,\r\n            password: password\r\n        }).then(res => {\r\n            if(res.data.auth == true){\r\n                galleta.set('user', {'user':res.data},{expires:1/3})\r\n                console.log(galleta.getJSON('user'))\r\n                let name = jwt_decode(res.data.token).names\r\n                localStorage.setItem(\"name\", name)\r\n            }\r\n            return res.data\r\n        })\r\n    }\r\n    async logout(){\r\n        galleta.remove('user')\r\n        const logout = await Axios.post(process.env.REACT_APP_API_URL + \"session/logout\",{},{withCredentials:true})\r\n    }\r\n\r\n    isAuthenticated(){\r\n        if (galleta.get('user')){\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    getUserId(){\r\n        let token = galleta.get(\"user\")\r\n        if (token){\r\n            let decoded = jwt_decode(token);\r\n            return decoded.id;\r\n        }\r\n    }\r\n\r\n    getName = () => localStorage.getItem(\"name\")\r\n\r\n}\r\n\r\n\r\nexport default new AuthService();","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\nimport AuthHelper from \"../../helpers/AuthHelper\";\r\nimport {Redirect} from \"react-router\";\r\n// reactstrap components\r\nimport {\r\n    Collapse,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    ListGroupItem,\r\n    ListGroup,\r\n    Media,\r\n    Navbar,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Container,\r\n    Row,\r\n    Button,\r\n    ButtonGroup,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nclass AdminNavbar extends React.Component {\r\n    redirigir = false;\r\n    // function that on mobile devices makes the search open\r\n    openSearch = () => {\r\n        document.body.classList.add(\"g-navbar-search-showing\");\r\n        setTimeout(function () {\r\n            document.body.classList.remove(\"g-navbar-search-showing\");\r\n            document.body.classList.add(\"g-navbar-search-show\");\r\n        }, 150);\r\n        setTimeout(function () {\r\n            document.body.classList.add(\"g-navbar-search-shown\");\r\n        }, 300);\r\n    };\r\n    // function that on mobile devices makes the search close\r\n    closeSearch = () => {\r\n        document.body.classList.remove(\"g-navbar-search-shown\");\r\n        setTimeout(function () {\r\n            document.body.classList.remove(\"g-navbar-search-show\");\r\n            document.body.classList.add(\"g-navbar-search-hiding\");\r\n        }, 150);\r\n        setTimeout(function () {\r\n            document.body.classList.remove(\"g-navbar-search-hiding\");\r\n            document.body.classList.add(\"g-navbar-search-hidden\");\r\n        }, 300);\r\n        setTimeout(function () {\r\n            document.body.classList.remove(\"g-navbar-search-hidden\");\r\n        }, 500);\r\n    };\r\n    afuera = (e) => {\r\n        e.preventDefault()\r\n        AuthHelper.logout()\r\n        this.props.history.push(\"/auth/loginexp\")\r\n    }\r\n\r\n    name = AuthHelper.getName()\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Navbar\r\n                    className={classnames(\r\n                        \"navbar-top navbar-expand border-bottom\",\r\n                        {\"navbar-dark bg-info\": this.props.theme === \"dark\"},\r\n                        {\"navbar-light bg-secondary\": this.props.theme === \"light\"}\r\n                    )}\r\n                >\r\n                    <Container fluid>\r\n                        <Collapse navbar isOpen={true}>\r\n\r\n\r\n                            \r\n\r\n              <Nav className=\"align-items-center ml-md-auto\" navbar>\r\n              </Nav>\r\n              <Nav className=\"align-items-center ml-auto ml-md-0\" navbar>\r\n                <ButtonGroup>\r\n                    <Button outline color=\"default\" size=\"sm\" disabled>\r\n                        <i className=\"fas fa-user\"></i> {this.name}\r\n                    </Button>\r\n                    <Button outline color=\"danger\" size=\"sm\" onClick={() => {\r\n                    AuthHelper.logout();\r\n                    this.props.history.push('/auth/loginexp')\r\n                    }}><i className=\"fas fa-sign-out-alt\"></i> Terminar sesión</Button>\r\n                </ButtonGroup>\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAdminNavbar.defaultProps = {\r\n    toggleSidenav: () => {\r\n    },\r\n    sidenavOpen: false,\r\n    theme: \"dark\"\r\n};\r\nAdminNavbar.propTypes = {\r\n    toggleSidenav: PropTypes.func,\r\n    sidenavOpen: PropTypes.bool,\r\n    theme: PropTypes.oneOf([\"dark\", \"light\"])\r\n};\r\n\r\nexport default AdminNavbar;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nclass Calendar extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <footer className=\"footer pt-0\">\r\n            <Row className=\"align-items-center justify-content-lg-between\">\r\n              <Col>\r\n                <div className=\"copyright text-center text-lg-left text-muted\">\r\n                  Un proyecto\r\n                  <a\r\n                    className=\"font-weight-bold ml-1\"\r\n                    href=\"https://www.anid.cl/\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    ANID\r\n                  </a>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </footer>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// react library for routing\r\nimport {NavLink as NavLinkRRD, Link} from \"react-router-dom\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport {PropTypes} from \"prop-types\";\r\nimport galleta from \"js-cookie\"\r\nimport AuthHelper from \"../../helpers/AuthHelper\";\r\n// react library that creates nice scrollbar on windows devices\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n// reactstrap components\r\nimport {\r\n    Collapse,\r\n    NavbarBrand,\r\n    Navbar,\r\n    NavItem,\r\n    NavLink,\r\n    Nav\r\n} from \"reactstrap\";\r\n\r\nclass Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapseOpen: false,\r\n            ...this.getCollapseStates(props.routes)\r\n        };\r\n    }\r\n\r\n    // verifies if routeName is the one active (in browser input)\r\n    activeRoute = routeName => {\r\n        return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n    };\r\n    // makes the sidenav normal on hover (actually when mouse enters on it)\r\n    onMouseEnterSidenav = () => {\r\n        if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\r\n            document.body.classList.add(\"g-sidenav-show\");\r\n        }\r\n    };\r\n    // makes the sidenav mini on hover (actually when mouse leaves from it)\r\n    onMouseLeaveSidenav = () => {\r\n        if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\r\n            document.body.classList.remove(\"g-sidenav-show\");\r\n        }\r\n    };\r\n    // toggles collapse between opened and closed (true/false)\r\n    toggleCollapse = () => {\r\n        this.setState({\r\n            collapseOpen: !this.state.collapseOpen\r\n        });\r\n    };\r\n    // closes the collapse\r\n    closeCollapse = () => {\r\n        this.setState({\r\n            collapseOpen: false\r\n        });\r\n    };\r\n    // this creates the intial state of this component based on the collapse routes\r\n    // that it gets through this.props.routes\r\n    getCollapseStates = routes => {\r\n        let initialState = {};\r\n        routes.map((prop, key) => {\r\n            if (prop.collapse) {\r\n                initialState = {\r\n                    [prop.state]: this.getCollapseInitialState(prop.views),\r\n                    ...this.getCollapseStates(prop.views),\r\n                    ...initialState\r\n                };\r\n            }\r\n            return null;\r\n        });\r\n        return initialState;\r\n    };\r\n    // this verifies if any of the collapses should be default opened on a rerender of this component\r\n    // for example, on the refresh of the page,\r\n    // while on the src/views/forms/RegularForms.js - route /admin/regular-forms\r\n    getCollapseInitialState(routes) {\r\n        for (let i = 0; i < routes.length; i++) {\r\n            if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\r\n                return true;\r\n            } else if (window.location.href.indexOf(routes[i].path) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // this is used on mobile devices, when a user navigates\r\n    // the sidebar will autoclose\r\n    closeSidenav = () => {\r\n        if (window.innerWidth < 1200) {\r\n            this.props.toggleSidenav();\r\n        }\r\n    };\r\n    // this function creates the links and collapses that appear in the sidebar (left menu)\r\n    createLinks = routes => {\r\n        return routes.map((prop, key) => {\r\n            if (prop.isAdmin && AuthHelper.isAuthenticated() && galleta.getJSON('user').user.result[0].user_type_id !== 3) {\r\n                return null\r\n            }\r\n\r\n            if (prop.redirect) {\r\n                return null;\r\n            }\r\n            if (prop.collapse) {\r\n\r\n                var st = {};\r\n                st[prop[\"state\"]] = !this.state[prop.state];\r\n                return (\r\n                    <NavItem key={key}>\r\n                        <NavLink\r\n                            href=\"#pablo\"\r\n                            data-toggle=\"collapse\"\r\n                            aria-expanded={this.state[prop.state]}\r\n                            className={classnames({\r\n                                active: this.getCollapseInitialState(prop.views)\r\n                            })}\r\n                            onClick={e => {\r\n                                e.preventDefault();\r\n                                this.setState(st);\r\n                            }}\r\n                        >\r\n                            {prop.icon ? (\r\n                                <>\r\n                                    <i className={prop.icon}/>\r\n                                    <span className=\"nav-link-text\">{prop.name}</span>\r\n                                </>\r\n                            ) : prop.miniName ? (\r\n                                <>\r\n                                    <span className=\"sidenav-mini-icon\"> {prop.miniName} </span>\r\n                                    <span className=\"sidenav-normal\"> {prop.name} </span>\r\n                                </>\r\n                            ) : null}\r\n                        </NavLink>\r\n                        <Collapse isOpen={this.state[prop.state]}>\r\n                            <Nav className=\"nav-sm flex-column\">\r\n                                {this.createLinks(prop.views)}\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </NavItem>\r\n                );\r\n            }\r\n            return (\r\n                <NavItem\r\n                    className={this.activeRoute(prop.layout + prop.path)}\r\n                    key={key}\r\n                >\r\n                    <NavLink\r\n                        to={prop.layout + prop.path}\r\n                        activeClassName=\"\"\r\n                        onClick={this.closeSidenav}\r\n                        tag={NavLinkRRD}\r\n                    >\r\n                        {prop.icon !== undefined ? (\r\n                            <>\r\n                                <i className={prop.icon}/>\r\n                                <span className=\"nav-link-text\">{prop.name}</span>\r\n                            </>\r\n                        ) : prop.miniName !== undefined ? (\r\n                            <>\r\n                                <span className=\"sidenav-mini-icon\"> {prop.miniName} </span>\r\n                                <span className=\"sidenav-normal\"> {prop.name} </span>\r\n                            </>\r\n                        ) : (\r\n                            prop.name\r\n                        )}\r\n                    </NavLink>\r\n                </NavItem>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {routes, logo} = this.props;\r\n        const scrollBarInner = (\r\n            <div className=\"scrollbar-inner\">\r\n                <div className=\"sidenav-header d-flex align-items-center\">\r\n                    {logo ? (\r\n                        <NavbarBrand>\r\n                            <img\r\n                                alt={logo.imgAlt}\r\n                                className=\"navbar-brand-img\"\r\n                                src={logo.imgSrc}\r\n                                style={{maxHeight: \"7rem\", marginTop: \"2rem\", marginLeft: \"1rem\"}}\r\n                            />\r\n                        </NavbarBrand>\r\n                    ) : null}\r\n                    <div className=\"ml-auto\">\r\n                        <div\r\n                            className={classnames(\"sidenav-toggler d-none d-xl-block\", {\r\n                                active: this.props.sidenavOpen\r\n                            })}\r\n                            onClick={this.props.toggleSidenav}\r\n                        >\r\n                            <div className=\"sidenav-toggler-inner\">\r\n                                <i className=\"sidenav-toggler-line\"/>\r\n                                <i className=\"sidenav-toggler-line\"/>\r\n                                <i className=\"sidenav-toggler-line\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"navbar-inner\">\r\n                    <Collapse navbar isOpen={true}>\r\n                        <Nav navbar>{this.createLinks(routes)}</Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </div>\r\n        );\r\n        return (\r\n            <Navbar\r\n                className={\r\n                    \"sidenav navbar-vertical navbar-expand-xs navbar-light bg-white \" +\r\n                    (this.props.rtlActive ? \"\" : \"fixed-left\")\r\n                }\r\n                onMouseEnter={this.onMouseEnterSidenav}\r\n                onMouseLeave={this.onMouseLeaveSidenav}\r\n            >\r\n                {navigator.platform.indexOf(\"Win\") > -1 ? (\r\n                    <PerfectScrollbar>{scrollBarInner}</PerfectScrollbar>\r\n                ) : (\r\n                    scrollBarInner\r\n                )}\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n    routes: [{}],\r\n    toggleSidenav: () => {\r\n    },\r\n    sidenavOpen: false,\r\n    rtlActive: false\r\n};\r\n\r\nSidebar.propTypes = {\r\n    // function used to make sidenav mini or normal\r\n    toggleSidenav: PropTypes.func,\r\n    // prop to know if the sidenav is mini or normal\r\n    sidenavOpen: PropTypes.bool,\r\n    // links that will be displayed inside the component\r\n    routes: PropTypes.arrayOf(PropTypes.object),\r\n    // logo\r\n    logo: PropTypes.shape({\r\n        // innerLink is for links that will direct the user within the app\r\n        // it will be rendered as <Link to=\"...\">...</Link> tag\r\n        innerLink: PropTypes.string,\r\n        // outterLink is for links that will direct the user outside the app\r\n        // it will be rendered as simple <a href=\"...\">...</a> tag\r\n        outterLink: PropTypes.string,\r\n        // the image src of the logo\r\n        imgSrc: PropTypes.string.isRequired,\r\n        // the alt for the img\r\n        imgAlt: PropTypes.string.isRequired\r\n    }),\r\n    // rtl active, this will make the sidebar to stay on the right side\r\n    rtlActive: PropTypes.bool\r\n};\r\n\r\nexport default Sidebar;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\n// node.js library that concatenates classes (strings)\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Container,\r\n  Row,\r\n  Col} from \"reactstrap\";\r\n\r\n// core components\r\nimport AuthHelper from \"../../../helpers/AuthHelper\";\r\nimport {\r\n  chartOptions,\r\n  parseOptions} from \"variables/charts.js\";\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeNav: 1,\r\n      chartExample1Data: \"data1\"\r\n    };\r\n    if (window.Chart) {\r\n      parseOptions(Chart, chartOptions());\r\n    }\r\n  }\r\n  render() {\r\n    if (AuthHelper.isAuthenticated()) {\r\n      return (\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <img\r\n                alt=\"\"\r\n                className=\"navbar-brand-img\"\r\n                src={require(\"assets/img/brand/tego5.svg\")}\r\n                style={{maxHeight:\"20rem\", marginTop:\"2rem\", marginLeft:\"1rem\"}}\r\n              />\r\n            </Col>\r\n          </Row><Row>\r\n            <Col>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h1 style={{color: \"#0e4eb5\"}}>¡Bienvenid@ a tego.cl!</h1>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Row>\r\n                  <Col md=\"1\"><i className=\"ni ni-bold-left\" style={{color: \"#0e4eb5\"}}></i></Col>\r\n                  <Col md=\"11\">Para empezar, elija un  de una de\r\n                  las listas para recepcionar, agendar consultas o registrar información médica. Si no ha registrado a\r\n                  ningún paciente aún, comienze por el menú \"Ingreso\".</Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/auth/loginexp\"/>\r\n    }\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// reactstrap components\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nclass AuthHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"header bg-gradient-info py-7 py-lg-8 pt-lg-9\">\r\n          <Container>\r\n            <div className=\"header-body text-center mb-7\">\r\n              <Row className=\"justify-content-center\">\r\n                <Col className=\"px-5\" lg=\"6\" md=\"8\" xl=\"5\">\r\n                  {this.props.title ? (\r\n                    <h1 className=\"text-white\">{this.props.title}</h1>\r\n                  ) : null}\r\n                  {this.props.lead ? (\r\n                    <p className=\"text-lead text-white\">{this.props.lead}</p>\r\n                  ) : null}\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Container>\r\n          <div className=\"separator separator-bottom separator-skew zindex-100\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              preserveAspectRatio=\"none\"\r\n              version=\"1.1\"\r\n              viewBox=\"0 0 2560 100\"\r\n              x=\"0\"\r\n              y=\"0\"\r\n            >\r\n              <polygon\r\n                className=\"fill-default\"\r\n                points=\"2560 0 2560 100 0 100\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAuthHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  lead: PropTypes.string\r\n};\r\n\r\nexport default AuthHeader;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n// core components\r\nimport AuthHeader from \"components/Headers/AuthHeader.js\";\r\n\r\nclass Login extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <AuthHeader\r\n          title=\"Welcome!\"\r\n          lead=\"Use these awesome forms to login or create new account in your project for free.\"\r\n        />\r\n        <Container className=\"mt--8 pb-5\">\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"5\" md=\"7\">\r\n              <Card className=\"bg-secondary border-0 mb-0\">\r\n                <CardHeader className=\"bg-transparent pb-5\">\r\n                  <div className=\"text-muted text-center mt-2 mb-3\">\r\n                    <small>Sign in with</small>\r\n                  </div>\r\n                  <div className=\"btn-wrapper text-center\">\r\n                    <Button\r\n                      className=\"btn-neutral btn-icon\"\r\n                      color=\"default\"\r\n                      href=\"#pablo\"\r\n                      onClick={e => e.preventDefault()}\r\n                    >\r\n                      <span className=\"btn-inner--icon mr-1\">\r\n                        <img\r\n                          alt=\"...\"\r\n                          src={require(\"assets/img/icons/common/github.svg\")}\r\n                        />\r\n                      </span>\r\n                      <span className=\"btn-inner--text\">Github</span>\r\n                    </Button>\r\n                    <Button\r\n                      className=\"btn-neutral btn-icon\"\r\n                      color=\"default\"\r\n                      href=\"#pablo\"\r\n                      onClick={e => e.preventDefault()}\r\n                    >\r\n                      <span className=\"btn-inner--icon mr-1\">\r\n                        <img\r\n                          alt=\"...\"\r\n                          src={require(\"assets/img/icons/common/google.svg\")}\r\n                        />\r\n                      </span>\r\n                      <span className=\"btn-inner--text\">Google</span>\r\n                    </Button>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody className=\"px-lg-5 py-lg-5\">\r\n                  <div className=\"text-center text-muted mb-4\">\r\n                    <small>Or sign in with credentials</small>\r\n                  </div>\r\n                  <Form role=\"form\">\r\n                    <FormGroup\r\n                      className={classnames(\"mb-3\", {\r\n                        focused: this.state.focusedEmail\r\n                      })}\r\n                    >\r\n                      <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-email-83\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          placeholder=\"Email\"\r\n                          type=\"email\"\r\n                          onFocus={() => this.setState({ focusedEmail: true })}\r\n                          onBlur={() => this.setState({ focusedEmail: false })}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                    <FormGroup\r\n                      className={classnames({\r\n                        focused: this.state.focusedPassword\r\n                      })}\r\n                    >\r\n                      <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-lock-circle-open\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          placeholder=\"Password\"\r\n                          type=\"password\"\r\n                          onFocus={() =>\r\n                            this.setState({ focusedPassword: true })\r\n                          }\r\n                          onBlur={() =>\r\n                            this.setState({ focusedPassword: false })\r\n                          }\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                      <input\r\n                        className=\"custom-control-input\"\r\n                        id=\" customCheckLogin\"\r\n                        type=\"checkbox\"\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor=\" customCheckLogin\"\r\n                      >\r\n                        <span className=\"text-muted\">Remember me</span>\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <a href=\"/admin/dashboard\">\r\n                      <Button className=\"my-4\" color=\"info\" type=\"button\">\r\n                        Sign in\r\n                      </Button>\r\n                      </a>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n              <Row className=\"mt-3\">\r\n                <Col xs=\"6\">\r\n                  <a\r\n                    className=\"text-light\"\r\n                    href=\"#pablo\"\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                    <small>Forgot password?</small>\r\n                  </a>\r\n                </Col>\r\n                <Col className=\"text-right\" xs=\"6\">\r\n                  <a\r\n                    className=\"text-light\"\r\n                    href=\"#pablo\"\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                    <small>Create new account</small>\r\n                  </a>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport {loginURL, setTokens} from 'helpers/AuthHelper2'\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n    Alert,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n// core components\r\nimport AuthHeader from \"components/Headers/AuthHeader.js\";\r\nimport AuthHelper from \"../../../helpers/AuthHelper\"\r\nimport {formatRut} from \"@fdograph/rut-utilities\";\r\n\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\n\r\n// const login = async (e) => {\r\n//   e.preventDefault()\r\n//   const res = await Axios.post(\r\n//     process.env.REACT_APP_API_URL + \"session/login\",\r\n//     { run: run, pass: pass }\r\n//   )\r\n// }\r\n\r\n\r\nclass LoginExp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wrongLogin: false,\r\n            timeWrong: 0\r\n        }\r\n\r\n    }\r\n\r\n    loginFunc = async (e) => {\r\n        e.preventDefault()\r\n        // AuthHelper.login(formatRut(this.run), this.pass).then((res) => {\r\n        AuthHelper.login(formatRut(this.run), this.pass).then((res) => {\r\n            if (res.auth) {\r\n                this.props.history.push('/admin/dashboard')\r\n            } else {\r\n                this.setState({wrongLogin: true, timeWrong: 2})\r\n                this.countDown()\r\n            }\r\n        })\r\n    }\r\n\r\n    run = \"\";\r\n    pass = \"\";\r\n    countDown = () => {\r\n        var x = setInterval(() => {\r\n            this.setState({timeWrong: this.state.timeWrong - 1})\r\n            if (this.state.timeWrong === 0) clearInterval(x)\r\n\r\n        }, 1000)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <AuthHeader\r\n                    title=\"Bienvenido a Tego\"\r\n                    lead=\"\"\r\n                />\r\n                <Container className=\"mt--8 pb-5\">\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col lg=\"5\" md=\"7\">\r\n                            <Card className=\"bg-secondary border-0 mb-0\">\r\n                                <CardBody className=\"px-lg-5 py-lg-5\">\r\n                                    {(this.state.wrongLogin && this.state.timeWrong !== 0) &&\r\n                                    <Alert color=\"danger\">\r\n                                        <strong>Rut o Contraseña Inválido</strong>\r\n                                    </Alert>\r\n                                    }\r\n                                    <div className=\"text-muted text-center mt-2 mb-3\">\r\n                                        Por favor, ingrese con su Rut o DNI:\r\n                                    </div>\r\n                                    <Form onSubmit={this.loginFunc} role=\"form\" method=\"post\">\r\n                                        <FormGroup\r\n                                            className={classnames(\"mb-3\", {\r\n                                                focused: this.state.focusedRun\r\n                                            })}\r\n                                        >\r\n                                            <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <InputGroupText>\r\n                                                        <i className=\"ni ni-email-83\"/>\r\n                                                    </InputGroupText>\r\n                                                </InputGroupAddon>\r\n                                                <Input\r\n                                                    placeholder=\"Rut o DNI\"\r\n                                                    type=\"run\"\r\n                                                    onChange={(e) => {\r\n                                                        this.run = e.target.value\r\n\r\n                                                    }}\r\n                                                    onFocus={() => this.setState({focusedRun: true})}\r\n                                                    onBlur={() => this.setState({focusedRun: false})}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                        <FormGroup\r\n                                            className={classnames({\r\n                                                focused: this.state.focusedPassword\r\n                                            })}\r\n                                        >\r\n                                            <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <InputGroupText>\r\n                                                        <i className=\"ni ni-lock-circle-open\"/>\r\n                                                    </InputGroupText>\r\n                                                </InputGroupAddon>\r\n                                                <Input\r\n                                                    placeholder=\"Contraseña\"\r\n                                                    type=\"password\"\r\n                                                    onChange={(e) => {\r\n                                                        this.pass = e.target.value\r\n                                                    }}\r\n                                                    onFocus={() =>\r\n                                                        this.setState({focusedPassword: true})\r\n                                                    }\r\n                                                    onBlur={() =>\r\n                                                        this.setState({focusedPassword: false})\r\n                                                    }\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </FormGroup>\r\n                                        <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <Button className=\"my-4\" color=\"info\" type=\"submit\">\r\n                                                Ingresar\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Row className=\"mt-3\">\r\n                                <Col xs=\"6\">\r\n                                    <a\r\n                                        className=\"text-light\"\r\n                                        href=\"#pablo\"\r\n                                        onClick={e => e.preventDefault()}\r\n                                    >\r\n\r\n                                    </a>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginExp;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n// core components\r\nimport AuthHeader from \"components/Headers/AuthHeader.js\";\r\n\r\nclass Register extends React.Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <AuthHeader\r\n          title=\"Create an account\"\r\n          lead=\"Use these awesome forms to login or create new account in your project for free.\"\r\n        />\r\n        <Container className=\"mt--8 pb-5\">\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"6\" md=\"8\">\r\n              <Card className=\"bg-secondary border-0\">\r\n                <CardHeader className=\"bg-transparent pb-5\">\r\n                  <div className=\"text-muted text-center mt-2 mb-4\">\r\n                    <small>Sign up with</small>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <Button\r\n                      className=\"btn-neutral btn-icon mr-4\"\r\n                      color=\"default\"\r\n                      href=\"#pablo\"\r\n                      onClick={e => e.preventDefault()}\r\n                    >\r\n                      <span className=\"btn-inner--icon mr-1\">\r\n                        <img\r\n                          alt=\"...\"\r\n                          src={require(\"assets/img/icons/common/github.svg\")}\r\n                        />\r\n                      </span>\r\n                      <span className=\"btn-inner--text\">Github</span>\r\n                    </Button>\r\n                    <Button\r\n                      className=\"btn-neutral btn-icon\"\r\n                      color=\"default\"\r\n                      href=\"#pablo\"\r\n                      onClick={e => e.preventDefault()}\r\n                    >\r\n                      <span className=\"btn-inner--icon mr-1\">\r\n                        <img\r\n                          alt=\"...\"\r\n                          src={require(\"assets/img/icons/common/google.svg\")}\r\n                        />\r\n                      </span>\r\n                      <span className=\"btn-inner--text\">Google</span>\r\n                    </Button>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody className=\"px-lg-5 py-lg-5\">\r\n                  <div className=\"text-center text-muted mb-4\">\r\n                    <small>Or sign up with credentials</small>\r\n                  </div>\r\n                  <Form role=\"form\">\r\n                    <FormGroup\r\n                      className={classnames({\r\n                        focused: this.state.focusedName\r\n                      })}\r\n                    >\r\n                      <InputGroup className=\"input-group-merge input-group-alternative mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-hat-3\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          placeholder=\"Name\"\r\n                          type=\"text\"\r\n                          onFocus={() => this.setState({ focusedName: true })}\r\n                          onBlur={() => this.setState({ focusedName: false })}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                    <FormGroup\r\n                      className={classnames({\r\n                        focused: this.state.focusedEmail\r\n                      })}\r\n                    >\r\n                      <InputGroup className=\"input-group-merge input-group-alternative mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-email-83\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          placeholder=\"Email\"\r\n                          type=\"email\"\r\n                          onFocus={() => this.setState({ focusedEmail: true })}\r\n                          onBlur={() => this.setState({ focusedEmail: false })}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                    <FormGroup\r\n                      className={classnames({\r\n                        focused: this.state.focusedPassword\r\n                      })}\r\n                    >\r\n                      <InputGroup className=\"input-group-merge input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-lock-circle-open\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          placeholder=\"Password\"\r\n                          type=\"password\"\r\n                          onFocus={() =>\r\n                            this.setState({ focusedPassword: true })\r\n                          }\r\n                          onBlur={() =>\r\n                            this.setState({ focusedPassword: false })\r\n                          }\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                    <div className=\"text-muted font-italic\">\r\n                      <small>\r\n                        password strength:{\" \"}\r\n                        <span className=\"text-success font-weight-700\">\r\n                          strong\r\n                        </span>\r\n                      </small>\r\n                    </div>\r\n                    <Row className=\"my-4\">\r\n                      <Col xs=\"12\">\r\n                        <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                          <input\r\n                            className=\"custom-control-input\"\r\n                            id=\"customCheckRegister\"\r\n                            type=\"checkbox\"\r\n                          />\r\n                          <label\r\n                            className=\"custom-control-label\"\r\n                            htmlFor=\"customCheckRegister\"\r\n                          >\r\n                            <span className=\"text-muted\">\r\n                              I agree with the{\" \"}\r\n                              <a\r\n                                href=\"#pablo\"\r\n                                onClick={e => e.preventDefault()}\r\n                              >\r\n                                Privacy Policy\r\n                              </a>\r\n                            </span>\r\n                          </label>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"text-center\">\r\n                      <Button className=\"mt-4\" color=\"info\" type=\"button\">\r\n                        Create account\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import axios from \"axios\";\r\nimport galleta from \"js-cookie\"\r\n\r\nconst Axios = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n})\r\nAxios.interceptors.request.use(function (config) {\r\n    // Do something before request is sent\r\n    if (galleta.getJSON('user') !== undefined){\r\n        const token = galleta.getJSON('user').user.token;\r\n        config.headers[\"x-access-token\"] = token;\r\n    }\r\n\r\n    return config;\r\n});\r\nexport default Axios","import axios from '../helpers/axiosConfig';\r\n\r\nexport async function getList(route) {\r\n    try {\r\n        var result = []\r\n        const res = await axios.get(route)\r\n\r\n        if (!res.data.error) {\r\n            result = res.data.result\r\n        } else {\r\n            console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage)\r\n        }\r\n    } catch(e) {\r\n        console.log('Err: ' + e)\r\n    }\r\n    return result\r\n}","import { useState, useEffect } from 'react';\r\nimport { getList } from 'helpers/ListHelper'; \r\n\r\nconst useList = ruta => {\r\n\r\n    const [list, setList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const res = await getList(ruta);\r\n            setList(res);\r\n        };\r\n        fetchData();\r\n      }, [ruta]); \r\n\r\n    return list\r\n\r\n}\r\n\r\nexport default useList;","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap'\r\n\r\nconst SimpleModal = forwardRef((props, ref) => {\r\n    const [display, setDisplay] = useState(false);\r\n    const [modalOptions, setModalOptions] = useState({});\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            setModal: (options) => setModal(options)\r\n        }\r\n    });\r\n\r\n    const setModal = (options) => {\r\n        let state = false\r\n        if (options?.title) {\r\n            state = true;\r\n        }\r\n        setModalOptions(options);\r\n        setDisplay(state);\r\n    }\r\n\r\n    if (display) {\r\n        return (\r\n            <div>\r\n                <Modal isOpen={display}>\r\n                    <ModalHeader toggle={() => setModal({})}>\r\n                        {modalOptions.title}\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        {modalOptions.text}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        {modalOptions.type === 1 \r\n                            ? <Button color=\"secondary\" onClick={() => setModal({})}>Cerrar</Button> \r\n                            : <div><Button color=\"primary\" onClick={() => modalOptions.fx()}>Confirmar</Button>{' '}<Button color=\"secondary\" onClick={() => setModal({})}>Cancelar</Button></div>\r\n                        }\r\n                    </ModalFooter>\r\n                </Modal> \r\n            </div>\r\n        );\r\n    };\r\n    return null;\r\n});\r\n\r\nexport default SimpleModal;","import React, {useState, useEffect, useRef} from 'react';\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label, Table, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport axios from '../../../helpers/axiosConfig';\r\nimport useList from 'hooks/useList';\r\nimport {getList} from 'helpers/ListHelper';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst ListUser = () => {\r\n    useEffect(() => {fetchUsers()}, []);\r\n    const [users, setUsers] = useState([]);\r\n    const [userMedicalAreas, setUserMedicalAreas] = useState([]);\r\n    const userTypes = useList(\"list/user-type\");\r\n    const medicalAreas = useList(\"list/medical-area\");\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const [group, setGroup] = useState('user');\r\n    const [loading, setLoading] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const fetchUsers = async () => {\r\n        const res = await getList(\"user\");\r\n        setLoading(false)\r\n        setUsers(res);\r\n    };\r\n\r\n    const fetchAreas = async (user_id) => {\r\n        const res = await getList(\"user/user-medical-area/\" + user_id);\r\n        setUserMedicalAreas(res);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        setCurrentUser({\r\n            ...currentUser,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const showModal = (user) => {\r\n        setCurrentUser(user);\r\n        setGroup(\"user\");\r\n        fetchAreas(user.user_id);\r\n        setDisplayModal(!displayModal);\r\n    }\r\n\r\n    const changeGroup = (group) => {\r\n        var form = document.getElementById('id-form-update');\r\n        if (form.checkValidity()) {\r\n            setGroup(group);\r\n        } else {\r\n            document.getElementById('id-btn-save').click();\r\n        };\r\n    };\r\n\r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options);\r\n    };\r\n\r\n    const deleteUserMedicalArea = async (user_medical_area_id) => {\r\n        await axios.delete(\"user/user-medical-area/\" + user_medical_area_id);\r\n        fetchAreas(currentUser.user_id);\r\n    };\r\n\r\n    const updateStateUser = async (run) => {\r\n        await axios.put(\"user/\" + run);\r\n        setModal({});\r\n        fetchUsers();\r\n    };\r\n\r\n    const saveUserMedicalArea = async () => {\r\n        try {\r\n            const res = await axios.post(\"user/user-medical-area\",\r\n                {user_id: currentUser.user_id, medical_area_id: currentUser.medical_area_id}\r\n            );\r\n            if (!res.data.error) {\r\n                fetchAreas(currentUser.user_id);\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            }\r\n        } catch (e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const updateUser = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await axios.put(\"user\", currentUser);\r\n            switch (res.data.result[0][0].cod) {\r\n                case 0:\r\n                    fetchUsers();\r\n                    setDisplayModal(!displayModal);\r\n                    break;\r\n                case 1:\r\n                    setModal({title: 'Usuario', text: 'El usuario ' + currentUser.run + ' ya existe.', type: 1});\r\n                    break;\r\n                case 2:\r\n                    setModal({title: 'Usuario', text: 'El usuario ' + currentUser.run + ' ya existe pero esta inactivo', type: 1});\r\n                    break;\r\n                default:\r\n                    setModal({title: 'Error', text: 'Despierte al administrador de sistemas ' + res.data.result[0][0].msg, type: 1});\r\n                    break;\r\n            };\r\n        } catch (e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const reqTag = <span style={{color:\"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <SimpleModal ref={modalRef}/>\r\n            <Card>\r\n                <CardBody>\r\n                    <h1>Listado de usuarios</h1>\r\n                    <Input \r\n                        type=\"text\" \r\n                        placeholder=\"Buscar...\"\r\n                        name=\"look_for\"\r\n                        value={searchTerm}\r\n                        onChange={e => setSearchTerm(e.target.value)}\r\n                    />\r\n                    <br/>\r\n                    {loading \r\n                        ?<div className=\"w-100 d-flex justify-content-center\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                        :<Table className=\"align-items-center\" responsive>\r\n                            <thead className=\"thead-light\">\r\n                            <tr className=\"text-center\">\r\n                                <th scope=\"col\">N°</th>\r\n                                <th scope=\"col\">Nombre</th>\r\n                                <th scope=\"col\">Apellido</th>\r\n                                <th scope=\"col\">Run</th>\r\n                                <th scope=\"col\">Rol</th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {users.filter(val => {\r\n                                    if(searchTerm == \"\") {\r\n                                        return val;\r\n                                    } else if (val.run.includes(searchTerm) || val.fullname.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                        return val;\r\n                                    }\r\n                            }).map(user => (\r\n                                <tr className=\"text-center\" key={user.user_id}>\r\n                                    <td>{user.user_id}</td>\r\n                                    <td>{user.names}</td>\r\n                                    <td>{user.lastnames}</td>\r\n                                    <td>{user.run}</td>\r\n                                    <td>{user.role}</td>\r\n                                    <td>\r\n                                        <Button color=\"primary\" onClick={() => showModal(user)}>Editar</Button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button color=\"danger\" size=\"sm\" onClick={() => setModal({title: 'Usuario', text: 'Desea eliminar al usuario ' + user.run + '?', type: 2, fx: () => updateStateUser(user.run)})}><i className=\"far fa-trash-alt\"></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    }\r\n                    <Modal isOpen={displayModal}>\r\n                        <Form id=\"id-form-update\" role=\"form\" onSubmit={e => updateUser(e)}>\r\n                            <ModalHeader toggle={() => {setDisplayModal(!displayModal)}}>\r\n                                {currentUser.user_type_id == 2\r\n                                    ? <>\r\n                                        <a href=\"#\" style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'user' ? {color: \"#11cdef\"} : {})}} onClick={() => changeGroup('user')}>Usuario</a>\r\n                                        <a href=\"#\" style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'area' ? {color: \"#11cdef\"} : {})}} onClick={() => changeGroup('area')}>Especialidad</a>\r\n                                      </>\r\n                                    : \"Usuario\"\r\n                                }\r\n                            </ModalHeader>\r\n                            {group === 'user' && <>\r\n                                <ModalBody>\r\n                                    <h5 style={{color:\"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Nombres {reqTag}</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\"\r\n                                                type=\"text\"\r\n                                                required\r\n                                                name=\"names\"\r\n                                                value={currentUser.names}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Apellidos {reqTag}</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\"\r\n                                                type=\"text\"\r\n                                                name=\"lastnames\"\r\n                                                value={currentUser.lastnames}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                required\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Número de Identidad {reqTag}</Label>\r\n                                            <Input\r\n                                                required\r\n                                                autoComplete=\"off\"\r\n                                                type=\"text\"\r\n                                                name=\"run\"\r\n                                                value={currentUser.run}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Rol</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"user_type_id\"\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                value={currentUser.user_type_id}>\r\n                                                {userTypes.map(e => (<option key={e.user_type_id} value={e.user_type_id}>{e.name}</option>))}\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Email</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\"\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                value={currentUser.email}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <div className=\"float-right mb-4 mr-2\">\r\n                                        <Button type=\"submit\" id=\"id-btn-save\"color=\"primary\">Guardar</Button>{' '}\r\n                                        <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Cancelar</Button>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </>}\r\n                            {group === 'area' && <>\r\n                                <ModalBody>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Especialidad</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"medical_area_id\"\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                value={currentUser.medical_area_id}>\r\n                                                <option hidden value=\"\">Seleccione...</option>\r\n                                                {medicalAreas.map(e => (<option key={e.medical_area_id} value={e.medical_area_id}>{e.name}</option>))}\r\n                                            </Input>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <Table className=\"align-items-center\" responsive>\r\n                                        <thead className=\"thead-light\">\r\n                                        <tr className=\"text-center\">\r\n                                            <th scope=\"col\">Especialidad</th>\r\n                                            <th scope=\"col\">Eliminar</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {userMedicalAreas.map(userMedicalArea => (\r\n                                            <tr className=\"text-center\" key={userMedicalArea.user_medical_area_id}>\r\n                                                <td>{userMedicalArea.name}</td>\r\n                                                <td>\r\n                                                    <Button onClick={() => {deleteUserMedicalArea(userMedicalArea.user_medical_area_id)}} className=\"mr-2\" color=\"danger\" size=\"sm\"><i className=\"far fa-trash-alt\"/></Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                    <div className=\"float-right mb-4 mr-2\">\r\n                                        <Button onClick={() => {saveUserMedicalArea()}} color=\"primary\">Agregar</Button>\r\n                                        <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Salir</Button>\r\n                                    </div>\r\n                                </ModalBody>\r\n                            </>}\r\n                        </Form>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ListUser;\r\n\r\n","import React, { useState, useRef } from 'react'\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label, Alert} from 'reactstrap'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport useList from 'hooks/useList';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst RegisterUser = () => {\r\n    const types = useList(\"list/user-type\")\r\n    const [user, setUser] = useState({email: \"\"});\r\n    const [add, setAdded] = useState(false)\r\n\r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options)\r\n    };\r\n\r\n    const handleInputChange = e => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        document.getElementById(\"main-form\").reset();\r\n        setUser({});\r\n        setModal({});\r\n    }\r\n\r\n    const addUser = async e => {\r\n        e.preventDefault()\r\n        window.scrollTo({top: 0})\r\n        try {\r\n            const res = await Axios.post(\"user\", {\r\n                user_id: 0,\r\n                run: user.run,\r\n                names: user.names,\r\n                lastnames: user.paternal_last_name + \" \" + user.maternal_last_name,\r\n                user_type_id: user.user_type_id,\r\n                email: user.email\r\n            });\r\n\r\n            switch(res.data.result[0][0].cod) {\r\n                case 0:\r\n                    //setModal({title: 'Usuario', text : 'Usuario ' + user.run + ' registrado correctamente!', type: 1});\r\n                    setAdded(true)\r\n                    setTimeout(()=>setAdded(false),3000)\r\n                    resetForm();\r\n                    break;\r\n                case 1:\r\n                    setModal({title: 'Usuario', text : 'El usuario ' + user.run + ' ya existe.', type: 1});\r\n                    break;\r\n                case 2:\r\n                    setModal({title: 'Usuario', text : 'El usuario ' + user.run + ' ya existe pero esta inactivo. ¿Desea activarlo?', type: 2, fx: updateStateUser});\r\n                    break;\r\n                default:\r\n                    setModal({title: 'Error', text : 'Despierte al administrador de sistemas' + res.data.result[0][0].msg, type: 1});\r\n                    break;\r\n              };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        }\r\n    }\r\n\r\n    const updateStateUser = async () => {\r\n        const res = await Axios.put(\"user/\" + user.run)\r\n        if (!res.data.error) {\r\n            //handleModal({title: 'Usuario', text : 'Usuario ' + user.run + ' activado exitosamente!', type: 1});\r\n            resetForm();\r\n        }\r\n    }\r\n\r\n    const reqTag = <span style={{color:\"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container className=\"mt-3\" id=\"inicio\">\r\n            <SimpleModal ref={modalRef}/>\r\n            {add &&\r\n            <Alert color=\"success\"><strong>Usuario agregado exitosamente</strong></Alert>\r\n            }\r\n            <Card>\r\n                <CardBody>\r\n                    <h1>Registrar Usuario</h1>\r\n                    <h5 style={{color:\"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n                    <Form onSubmit={addUser} role=\"form\" id=\"main-form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Nombres {reqTag}</Label>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                                    type=\"text\"\r\n                                    name=\"names\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Apellido paterno {reqTag}</Label>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                                    type=\"text\"\r\n                                    name=\"paternal_last_name\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Apellido materno {reqTag}</Label>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                                    type=\"text\"\r\n                                    name=\"maternal_last_name\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Número de Identidad {reqTag}</Label>\r\n                                <Input\r\n                                    placeholder=\"12345678-9\"\r\n                                    autoComplete=\"off\"\r\n                                    type=\"text\"\r\n                                    name=\"run\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Rol {reqTag}</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"user_type_id\"\r\n                                    required\r\n                                    onChange={e => handleInputChange(e)}>\r\n                                        <option hidden value=\"\">Seleccione...</option>\r\n                                        {types.map(e=> (<option key={e.user_type_id} value={e.user_type_id}>{e.name}</option>))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Email</Label>\r\n                                <Input\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"correo@dominio.cl\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <br></br>\r\n                        <Button className= \"float-right\" type=\"submit\" color=\"primary\">Registrar Usuario</Button>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default RegisterUser","import React, {useState, useRef} from 'react'\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label} from 'reactstrap'\r\nimport axios from \"../../../helpers/axiosConfig\"\r\nimport useList from '../../../hooks/useList';\r\nimport {Redirect} from 'react-router-dom';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst PatientAdmission = () => {\r\n    const regions = useList(\"list/region\");\r\n    const towns = useList(\"list/town\");\r\n    const carerTowns = towns; \r\n    const registereds = useList(\"list/registered-by\")  \r\n    const [toggle, setToggle] = useState(false);\r\n    const [next, setNext] = useState(false);\r\n    const [createdPersonId, setCreatedPersonId] = useState(0);\r\n    const defaultPerson = {run: '', names: '', paternal_lastname: '', maternal_lastname: '', birthdate: '', address: '', is_retired: 0, region_id: 0, town_id: 0, registered_by_id: 0, phone: '', cellphone: '', email: ''}\r\n    const defaultCarer = {carer_names: '', carer_paternal_lastname: '', carer_maternal_lastname: '', carer_town_id: 7, carer_phone: '', carer_cellphone: '', carer_email: ''}\r\n    const[newCarer, setNewCarer] = useState(defaultCarer);\r\n    const[newPerson, setNewPerson] = useState(defaultPerson);\r\n\r\n    //SimpleModal######################################################################################################\r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options)\r\n    };\r\n    //SimpleModal######################################################################################################\r\n\r\n\r\n    const handleToggle = () => {\r\n        if(toggle){\r\n            setNewCarer(defaultCarer);\r\n        }\r\n        setToggle(!toggle);\r\n    };\r\n\r\n    const handleInputChangePerson = e => {\r\n        setNewPerson({\r\n            ...newPerson,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputCheckedChange = e => {\r\n        setNewPerson({\r\n            ...newPerson,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    const handleInputChangeCarer = e => {\r\n        setNewCarer({\r\n            ...newCarer,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const addPerson = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await axios.post(\"person\", {\r\n                run: newPerson.run,\r\n                names: newPerson.names,\r\n                lastnames: newPerson.paternal_lastname + \" \" + newPerson.maternal_lastname,\r\n                birthdate: newPerson.birthdate,\r\n                address: newPerson.address,\r\n                is_retired: newPerson.is_retired,\r\n                region_id: newPerson.region_id,\r\n                town_id: newPerson.town_id,\r\n                registered_by_id: newPerson.registered_by_id,\r\n                phone: newPerson.phone,\r\n                cellphone: newPerson.cellphone,\r\n                email: newPerson.email,\r\n                carer_names: newCarer.carer_names,\r\n                carer_lastnames: newCarer.carer_paternal_lastname + \" \" + newCarer.carer_maternal_lastname,\r\n                carer_town_id: newCarer.carer_town_id,\r\n                carer_phone: newCarer.carer_phone,\r\n                carer_cellphone: newCarer.carer_cellphone,\r\n                carer_email: newCarer.carer_email\r\n            }, {withCredentials:true});\r\n            switch(res.data.result[0][0].cod) {\r\n                case 0: \r\n                    setCreatedPersonId(res.data.result[0][0].id);\r\n                    setNext(true);\r\n                    break;\r\n                case 1: \r\n                    setModal({title: 'Paciente', text : 'El paciente ' + newPerson.run + ' ya existe.', type: 1});\r\n                    break;\r\n                case 2: \r\n                    setModal({title: 'Paciente', text : 'El paciente ' + newPerson.run + ' ya existe pero esta inactivo. ¿Desea activarlo?', type: 2, fx: updateStatePerson});\r\n                    break;\r\n                default:\r\n                    setModal({title: 'Error', text : 'Despierte al administrador de sistemas' + res.data.result[0][0].msg, type: 1});\r\n                    break;\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n            alert(\"Err: \" + e);\r\n        };\r\n    };\r\n\r\n    const updateStatePerson = async () => {\r\n        const res = await axios.put(\"person/\" + newPerson.run);\r\n        if (!res.data.error) {\r\n            setModal({title: 'Paciente', text : 'El paciente ' + newPerson.run + ' fue activado correctamente', type: 1});\r\n        };\r\n    };\r\n  \r\n    const hoy = new Date()\r\n    const reqTag = <span style={{color: \"#DC3545\"}}>*</span>\r\n    \r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <SimpleModal ref={modalRef}/>\r\n            <Card>\r\n                <CardBody>\r\n                    <h1>Ingreso de Paciente</h1>\r\n                    <h5 style={{color: \"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n                    <Form onSubmit={addPerson} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"6\">\r\n                                <Label className=\"form-control-label pt-3\">Nombres {reqTag}</Label>\r\n                                <Input\r\n                                    placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                                    type=\"text\"\r\n                                    name=\"names\"\r\n                                    pattern=\"^[ña-zÑA-Z ]*$\"\r\n                                    onChange={e => {handleInputChangePerson(e)}}\r\n                                    required\r\n                                />\r\n                                <Label className=\"form-control-label pt-3\">Apellido Paterno {reqTag}</Label>\r\n                                <Input\r\n                                    placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                                    type=\"text\"\r\n                                    name=\"paternal_lastname\"\r\n                                    pattern=\"^[ÑA-Zña-z ]*$\"\r\n                                    onChange={e => {handleInputChangePerson(e)}}\r\n                                    required\r\n                                />\r\n                                <Label className=\"form-control-label pt-3\">Apellido Materno {reqTag}</Label>\r\n                                <Input\r\n                                    placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                                    type=\"text\"\r\n                                    name=\"maternal_lastname\"\r\n                                    pattern=\"^[ÑA-Zña-z ]*$\"\r\n                                    onChange={e => {handleInputChangePerson(e)}}\r\n                                    required\r\n                                />\r\n                                <Label className=\"form-control-label pt-3\">Número de Identidad (sin puntos y con un guión antes del último digito) {reqTag}</Label>\r\n                                <Input\r\n                                    placeholder=\"12345678-9\"\r\n                                    type=\"text\"\r\n                                    name=\"run\"\r\n                                    // pattern=\"^[ÑA-Zña-z ]*$\"\r\n                                    onChange={e => {handleInputChangePerson(e)}}\r\n                                    required\r\n                                />\r\n                                <Label className=\"form-control-label pt-3\">Fecha de nacimiento {reqTag}</Label>\r\n                                <Input\r\n                                    placeholder=\"2018-11-23\"\r\n                                    type=\"date\"\r\n                                    name=\"birthdate\"\r\n                                    min=\"1910-01-01\"\r\n                                    max={\"\"+hoy.getFullYear()+\"-\"+hoy.getMonth()+\"-\"+hoy.getDate()}\r\n                                    onChange={e => {handleInputChangePerson(e)}}\r\n                                    required\r\n                                />\r\n                                <Label className=\"form-control-label pt-3\">Dirección</Label>\r\n                                <Input\r\n                                    type=\"text\" maxLength=\"250\"\r\n                                    placeholder=\"Dirección\"\r\n                                    name=\"address\"\r\n                                    onChange={e => {handleInputChangePerson(e)}}\r\n                                />\r\n                                <br></br>\r\n                                <Col className=\"d-flex p-0\">\r\n                                    <Label className=\"form-control-label\">¿Paciente esta pensionado?</Label>\r\n                                    <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                        <Input \r\n                                            type=\"checkbox\"\r\n                                            name=\"is_retired\"\r\n                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                        />\r\n                                        <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                    </label>\r\n                                </Col>\r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <Label className=\"form-control-label pt-3\">Region {reqTag}</Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"region_id\"\r\n                                    required\r\n                                    onChange={e => handleInputChangePerson(e)}>\r\n                                        <option hidden value=\"\">Seleccione...</option>\r\n                                        {regions.map(e => (<option key={e.region_id} value={e.region_id}>{e.name}</option>))}\r\n                                </Input>\r\n                                <Label className=\"form-control-label pt-3\">Comuna de procedencia {reqTag}</Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"town_id\"\r\n                                    required\r\n                                    onChange={e => handleInputChangePerson(e)}>\r\n                                        <option hidden value=\"\">Seleccione...</option>\r\n                                        {towns.map(e => (<option key={e.town_id} value={e.town_id}>{e.name}</option>))}\r\n                                </Input>\r\n                                <Label className=\"form-control-label pt-3\">Enrolado por {reqTag}</Label>\r\n                                <Input \r\n                                    type=\"select\"\r\n                                    name=\"registered_by_id\"\r\n                                    required\r\n                                    onChange={e => handleInputChangePerson(e)}>\r\n                                        <option hidden value=\"\">Seleccione...</option>\r\n                                        {registereds.map(e => (<option key={e.registered_by_id} value={e.registered_by_id}>{e.name}</option>))}\r\n                                </Input>\r\n                                <Label className=\"form-control-label pt-3\">Teléfono fijo</Label>\r\n                                <Input\r\n                                    placeholder=\"+56 9 2299 7066\"\r\n                                    type=\"tel\"\r\n                                    name=\"phone\"\r\n                                    pattenr=\"[0-9]*\"\r\n                                    onChange={e => {handleInputChangePerson(e)}}\r\n                                />\r\n                                <Label className=\"form-control-label pt-3\">Teléfono celular</Label>\r\n                                <Input\r\n                                    placeholder=\"+56 9 2299 7066\"\r\n                                    type=\"tel\"\r\n                                    name=\"cellphone\"\r\n                                    pattenr=\"[+]569[0-9]{8}\"\r\n                                    onChange={e => {handleInputChangePerson(e)}}\r\n                                />\r\n                                <Label className=\"form-control-label pt-3\">Email</Label>\r\n                                <Input\r\n                                    placeholder=\"correo@dominio.cl\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    onChange={e => {handleInputChangePerson(e)}}\r\n                                />\r\n                                <br></br>\r\n                                <Col className=\"d-flex p-0\">\r\n                                    <Label className=\"form-control-label\">¿Paciente posee un cuidador?</Label>\r\n                                    <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                        <Input \r\n                                            type=\"checkbox\"\r\n                                            onChange={() => handleToggle()}\r\n                                        />\r\n                                        <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                    </label>\r\n                                </Col>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        {toggle === true &&\r\n                            <>\r\n                                {/* <h6 className=\"heading-small text-muted mb-4\">Cuidador</h6> */}\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label pt-3\">Nombres {reqTag}</Label>\r\n                                        <Input\r\n                                            required\r\n                                            placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                                            name=\"carer_names\"\r\n                                            type=\"text\"\r\n                                            pattern=\"^[ña-zÑA-Z ]*$\"\r\n                                            onChange={e => {handleInputChangeCarer(e)}}\r\n                                            value={newCarer.carer_names}\r\n                                        />\r\n                                        <Label className=\"form-control-label pt-3\">Apellido Paterno {reqTag}</Label>\r\n                                        <Input\r\n                                            required\r\n                                            placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                                            name=\"carer_paternal_lastname\"\r\n                                            type=\"text\"\r\n                                            pattern=\"^[ÑA-Z ña-z]*$\"\r\n                                            onChange={e => {handleInputChangeCarer(e)}}\r\n                                            value={newCarer.carer_paternal_lastname}\r\n                                        />\r\n                                        <Label className=\"form-control-label pt-3\">Apellido Materno {reqTag}</Label>\r\n                                        <Input\r\n                                            required\r\n                                            placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                                            name=\"carer_maternal_lastname\"\r\n                                            type=\"text\"\r\n                                            pattern=\"^[ÑA-Z ña-z]*$\"\r\n                                            onChange={e => {handleInputChangeCarer(e)}}\r\n                                            value={newCarer.carer_maternal_lastname}\r\n                                        />\r\n                                        <Label className=\"form-control-label pt-3\">Comuna de procedencia {reqTag}</Label>\r\n                                        <Input \r\n                                            type=\"select\"\r\n                                            name=\"carer_town_id\"\r\n                                            required\r\n                                            onChange={e => handleInputChangeCarer(e)}>\r\n                                                <option hidden value=\"\">Seleccione...</option>\r\n                                                {carerTowns.map(e => (<option key={e.town_id} value={e.town_id}>{e.name}</option>))}\r\n                                        </Input>\r\n                                    </Col> \r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label pt-3\">Teléfono fijo</Label>\r\n                                        <Input\r\n                                            placeholder=\"+56 9 2299 7066\"\r\n                                            name=\"carer_phone\"\r\n                                            type=\"tel\"\r\n                                            onChange={e => {handleInputChangeCarer(e)}}\r\n                                            value={newCarer.carer_phone}\r\n                                        />\r\n                                        <Label className=\"form-control-label pt-3\">Teléfono celular</Label>\r\n                                        <Input\r\n                                            placeholder=\"+56 9 2299 7066\"\r\n                                            name=\"carer_cellphone\"\r\n                                            type=\"tel\"\r\n                                            onChange={e => {handleInputChangeCarer(e)}}\r\n                                            value={newCarer.carer_cellphone}\r\n                                        />\r\n                                        <Label className=\"form-control-label pt-3\">Email</Label>\r\n                                        <Input\r\n                                            type=\"email\"\r\n                                            name=\"carer_email\"\r\n                                            placeholder=\"correo@dominio.cl\"\r\n                                            value={newCarer.carer_email}\r\n                                            onChange={e => {handleInputChangeCarer(e)}}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>\r\n                        }\r\n                        <Button className= \"float-right\" type=\"submit\" color=\"primary\" >Registrar</Button>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n            {next && \r\n                <Redirect to={{\r\n                    pathname: \"/admin/consultation-motive\",\r\n                    state: { id: createdPersonId, run: newPerson.run, name: newPerson.names, apellido : newPerson.paternal_lastname + \" \" + newPerson.maternal_lastname} \r\n                }}/> \r\n            }\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default PatientAdmission;","import React, {useState, useEffect, useRef} from 'react'\r\nimport {Button, Col, Container, Form, FormGroup, Input, InputGroup,Card, CardBody, Label, Table, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap'\r\nimport axios from '../../../helpers/axiosConfig'\r\nimport {Link} from 'react-router-dom';\r\nimport useList from 'hooks/useList';\r\nimport {getList} from 'helpers/ListHelper'; \r\nimport moment from 'moment';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst ListPatient = () => {\r\n    useEffect(() => {fetchPersons()}, []);  \r\n    const [persons, setPersons] = useState([]);\r\n    const [currentPerson, setCurrentPerson] = useState({});\r\n    const [group, setGroup] = useState('person');\r\n    const maritalStatus = useList(\"list/marital-status\");\r\n    const livesWith = useList(\"list/lives-with\");\r\n    const nativeOrigins = useList(\"list/native-origin\");\r\n    const previsions = useList(\"list/prevision\");\r\n    const educationLevels = useList(\"list/education-level\");\r\n    const covidRisks = useList(\"list/covid-risk\");\r\n    const acceptedConcents = useList(\"list/consent\");\r\n    const regions = useList(\"list/region\");\r\n    const towns = useList(\"list/town\");\r\n    const registereds = useList(\"list/registered-by\") \r\n\r\n    //SimpleModal######################################################################################################\r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options)\r\n    };\r\n    //SimpleModal######################################################################################################\r\n    \r\n    const fetchPersons = async () => {\r\n        const res = await getList(\"person/listpatient\");\r\n        setPersons(res);\r\n    };  \r\n    \r\n    const handleInputChange = e => {\r\n        setCurrentPerson({\r\n            ...currentPerson,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputCheckedChange = e => {\r\n        setCurrentPerson({\r\n            ...currentPerson,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const showModal = (person) => {\r\n        setGroup(\"person\");\r\n        setCurrentPerson(person);\r\n        setDisplayModal(!displayModal);\r\n    }\r\n\r\n    const changeGroup = (group) => {\r\n        var form = document.getElementById('id-form-update');\r\n        if(form.checkValidity()) {\r\n            setGroup(group);\r\n        } else {\r\n            document.getElementById('id-btn-save').click();\r\n        };\r\n    };\r\n\r\n    const updatePerson = async e => {\r\n        e.preventDefault();\r\n        //alert('Funcionalidad en mantencion!!!!');\r\n        try {\r\n            const res = await axios.put(\"person\", currentPerson);\r\n            switch(res.data.result[0][0].cod) {\r\n                case 0: \r\n                    //window.location.reload();\r\n                    fetchPersons();\r\n                    setDisplayModal(!displayModal);\r\n                    break;\r\n                case 1: \r\n                    setModal({title: 'Usuario', text : 'El usuario ' + currentPerson.run + ' ya existe.', type: 1});\r\n                    break;\r\n                case 2:\r\n                    setModal({title: 'Usuario', text : 'El usuario ' + currentPerson.run + ' ya existe pero esta inactivo', type: 1});\r\n                    break;\r\n                default:\r\n                    setModal({title: 'Error', text : 'Despierte al administrador de sistemas ' + res.data.result[0][0].msg, type: 1});\r\n                    break;\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const updateStatePerson = async run => {\r\n        const res = await axios.put(\"person/\" + run);\r\n        if (!res.data.error) {\r\n            fetchPersons();\r\n        };\r\n    };\r\n\r\n    const reqTag = <span style={{color: \"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Card>\r\n                <CardBody>\r\n                    <h1>Listado de pacientes</h1>\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                            <tr className=\"text-center\">\r\n                                <th scope=\"col\">N°</th>\r\n                                <th scope=\"col\">Nombre</th>\r\n                                <th scope=\"col\">Apellido</th>\r\n                                <th scope=\"col\">Run</th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           {persons.map(\r\n                                (person, i) =>\r\n                                    <tr className=\"text-center\" key={person.person_id}>\r\n                                        <td>{i + 1}</td>\r\n                                        <td>{person.names}</td>\r\n                                        <td>{person.lastnames}</td>\r\n                                        <td>{person.run}</td>\r\n                                        <td>\r\n                                            <Button color=\"primary\" onClick={() => showModal(person)}>Editar</Button>\r\n                                            <Modal size=\"lg\" isOpen={displayModal}>\r\n                                                <Form id=\"id-form-update\" role=\"form\" onSubmit={e => updatePerson(e)}>\r\n                                                    <ModalHeader toggle={() => {setDisplayModal(!displayModal)}}>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'person' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('person')}>Paciente</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'carer' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('carer')}>Cuidador</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'motive' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('motive')}>Motivo consulta</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'sociodemo' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('sociodemo')}>Sociodemográficos</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'consent' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('consent')}>Consentimiento</a>\r\n                                                        <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'covid' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('covid')}>Covid</a>\r\n                                                    </ModalHeader>\r\n                                                    <ModalBody className=\"pt-1\">\r\n                                                        {group === 'person' && <>\r\n                                                            <h5 style={{color: \"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Nombres {reqTag}</Label>\r\n                                                                    <Input\r\n                                                                        required autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        value={currentPerson.names}\r\n                                                                        name=\"names\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Apellidos {reqTag}</Label>\r\n                                                                    <Input\r\n                                                                        required autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        value={currentPerson.lastnames}\r\n                                                                        name=\"lastnames\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Número de Identidad {reqTag}</Label>\r\n                                                                    <InputGroup>\r\n                                                                        <Input\r\n                                                                            required autoComplete=\"off\"\r\n                                                                            type=\"text\"\r\n                                                                            value={currentPerson.run}\r\n                                                                            name=\"run\"\r\n                                                                            onChange={e => {handleInputChange(e)}}\r\n                                                                        />\r\n                                                                    </InputGroup>\r\n                                                                    <Label className=\"form-control-label pt-3\">Fecha de nacimiento {reqTag}</Label>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        type=\"date\"\r\n                                                                        value={moment(currentPerson.birthdate).format('YYYY-MM-DD')}\r\n                                                                        name=\"birthdate\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Dirección</Label>\r\n                                                                    <Input\r\n                                                                        type=\"text\" maxLength=\"250\" autoComplete=\"off\"\r\n                                                                        placeholder=\"Dirección\"\r\n                                                                        name=\"address\"\r\n                                                                        value={currentPerson.address}\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Region {reqTag}</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"region_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.region_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {regions.map(e => (<option key={e.region_id} value={e.region_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Comuna de procedencia {reqTag}</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"town_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.town_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {towns.map(e => (<option key={e.town_id} value={e.town_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Enrolado por {reqTag}</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"registered_by_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.registered_by_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {registereds.map(e => (<option key={e.registered_by_id} value={e.registered_by_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono fijo</Label>\r\n                                                                    <Input\r\n                                                                        type=\"tel\" autoComplete=\"off\"\r\n                                                                        value={currentPerson.phone}\r\n                                                                        name=\"phone\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono celular</Label>\r\n                                                                    <Input\r\n                                                                        type=\"tel\" autoComplete=\"off\"\r\n                                                                        value={currentPerson.cellphone}\r\n                                                                        name=\"cellphone\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Email</Label>\r\n                                                                    <Input\r\n                                                                        name=\"email\" autoComplete=\"off\"\r\n                                                                        value={currentPerson.email}\r\n                                                                        type=\"email\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                    <br/><br/>\r\n                                                                    <Col className=\"d-flex p-0\">\r\n                                                                        <Label className=\"form-control-label\">¿Paciente esta pensionado?</Label>\r\n                                                                        <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                                                            <Input \r\n                                                                                type=\"checkbox\"\r\n                                                                                name=\"is_retired\"\r\n                                                                                checked={currentPerson.is_retired}\r\n                                                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                            />\r\n                                                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                                        </label>\r\n                                                                    </Col>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'carer' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Nombres</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_names\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_names}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Apellidos</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_lastnames\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_lastnames}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Comuna de procedencia</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\"\r\n                                                                        name=\"carer_town_id\"\r\n                                                                        required\r\n                                                                        value={currentPerson.carer_town_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            <option hidden value=\"\">Seleccione...</option>\r\n                                                                            {towns.map(e => (<option key={e.town_id} value={e.town_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono fijo</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_phone\" autoComplete=\"off\"\r\n                                                                        type=\"tel\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_phone}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Teléfono celular</Label>\r\n                                                                    <Input\r\n                                                                        name=\"carer_cellphone\" autoComplete=\"off\"\r\n                                                                        type=\"tel\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.carer_cellphone}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Email</Label>\r\n                                                                    <Input\r\n                                                                        type=\"email\" autoComplete=\"off\"\r\n                                                                        name=\"carer_email\"\r\n                                                                        value={currentPerson.carer_email}\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'motive' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col className=\"d-flex\">\r\n                                                                        <Label className=\"form-control-label pt-3\">¿Urgencia dental?</Label>\r\n                                                                        <label className=\"custom-toggle custom-toggle-warning ml-3 mt-3\">\r\n                                                                            <Input \r\n                                                                                type=\"checkbox\"\r\n                                                                                name=\"urgency\"\r\n                                                                                checked={currentPerson.urgency}\r\n                                                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                            />\r\n                                                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                                        </label>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label\">Motivo</Label>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"pain\"   \r\n                                                                            name=\"pain\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.pain}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"pain\"><strong>Dolor severo de causa dentaria</strong>, que no ceda a analgésicos.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"cavities\"  \r\n                                                                            name=\"cavities\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.cavities}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"cavities\"><strong>Manchas o heridas en cualquier parte de la boca</strong> que no desaparecen en 1 mes.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"wounds\"  \r\n                                                                            name=\"wounds\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.wounds}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"wounds\"><strong>Lesiones en mucosa/encía</strong>, debido a desajuste de prótesis dental.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"bleeding\"   \r\n                                                                            name=\"bleeding\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.bleeding}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"bleeding\"><strong>Hemorragia bucal.</strong></label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"fracture\"   \r\n                                                                            name=\"fracture\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.fracture}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"fracture\"><strong>Pérdida o fractura de restauraciones</strong> (tapaduras) o <strong>prótesis dentales.</strong></label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"trauma\"   \r\n                                                                            name=\"trauma\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.trauma}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"trauma\"><strong>Trauma reciente.</strong></label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"swelling\"   \r\n                                                                            name=\"swelling\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.swelling}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"swelling\"><strong>Hinchazón importante de boca</strong>, cara o cuello.</label>\r\n                                                                    </div>\r\n                                                                    <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                                        <Input\r\n                                                                            type=\"checkbox\"\r\n                                                                            id=\"treatment\"   \r\n                                                                            name=\"treatment\"                                                                        \r\n                                                                            className=\"custom-control-input\"\r\n                                                                            checked={currentPerson.treatment}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <label className=\"custom-control-label\" htmlFor=\"treatment\"><strong>Tratamiento dental requerido previo a procedimientos médicos</strong> críticos impostergables.</label>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label\">Otro</Label>\r\n                                                                    <Input\r\n                                                                        name=\"other\" maxLength=\"250\" autoComplete=\"off\"\r\n                                                                        type=\"textarea\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.other}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <br/>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\">\r\n                                                                        Encuesta OHIP-14Sp (\r\n                                                                            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSetI2HQMrH1lhqeQBUZT1ks2KKpxrhIpL-ceOm3jYEyIY_gwQ/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        max=\"9999\" min=\"-9999\"\r\n                                                                        value={currentPerson.ohip14sp_result}\r\n                                                                        name=\"ohip14sp_result\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\">\r\n                                                                        Índice de Barthel (\r\n                                                                            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input\r\n                                                                        max=\"9999\" min=\"-9999\"\r\n                                                                        value={currentPerson.dependency_level}\r\n                                                                        name=\"dependency_level\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n\r\n                                                        </>}\r\n                                                        {group === 'sociodemo' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Ocupacion</Label>\r\n                                                                    <Input\r\n                                                                        name=\"occupation\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.occupation}\r\n                                                                    />\r\n                                                                    <Label className=\"form-control-label pt-3\">Previsión</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"prevision_id\"\r\n                                                                        value={currentPerson.prevision_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {previsions.map(e=> (<option key={e.prevision_id} value={e.prevision_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Estado conyugal</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"marital_status_id\"\r\n                                                                        value={currentPerson.marital_status_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {maritalStatus.map(e=> (<option key={e.marital_status_id} value={e.marital_status_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Comuna de nacimiento</Label>\r\n                                                                    <Input\r\n                                                                        name=\"birth_commune\" autoComplete=\"off\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.birth_commune}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                                <Col md=\"6\">\r\n                                                                    <Label className=\"form-control-label pt-3\">Pueblo Originario</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"native_origin_id\"\r\n                                                                        value={currentPerson.native_origin_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {nativeOrigins.map(e=> (<option key={e.native_origin_id} value={e.native_origin_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Nivel educacional</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"educational_level_id\"\r\n                                                                        value={currentPerson.educational_level_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {educationLevels.map(e=> (<option key={e.educational_level_id} value={e.educational_level_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Red familiar</Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"lives_with_id\"\r\n                                                                        value={currentPerson.lives_with_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {livesWith.map(e=> (<option key={e.lives_with_id} value={e.lives_with_id}>{e.name}</option>))}\r\n                                                                    </Input>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'consent' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col className=\"d-flex\">\r\n                                                                    <Label className=\"form-control-label pt-3\">¿Leyo el consentimiento?</Label>\r\n                                                                    <label className=\"custom-toggle custom-toggle-warning ml-3 mt-3\">\r\n                                                                        <Input \r\n                                                                            type=\"checkbox\"\r\n                                                                            name=\"consent_read\"\r\n                                                                            checked={currentPerson.consent_read}\r\n                                                                            onChange={e => {handleInputCheckedChange(e)}}\r\n                                                                        />\r\n                                                                        <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                                    </label>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label pt-3\">¿Acepta el consentimiento? (\r\n                                                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"informed_consent_answer_id\"\r\n                                                                        value={currentPerson.informed_consent_answer_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {acceptedConcents.map(e=> (<option key={e.informed_consent_answer_id} value={e.informed_consent_answer_id}>{e.answer}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Observaciones</Label>\r\n                                                                    <Input\r\n                                                                        name=\"observations\" autoComplete=\"off\" maxLength=\"250\"\r\n                                                                        type=\"textarea\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.observations}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        {group === 'covid' && <>\r\n                                                            <FormGroup className=\"row\">\r\n                                                                <Col>\r\n                                                                    <Label className=\"form-control-label pt-3\">Encuesta caso COVID (\r\n                                                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSf7GsvK4AVlSlzQ8dFXcouJeNhKWzbHkjU78WTD7p92gNUpYg/viewform\" target=\"_blank\">ver</a>)\r\n                                                                    </Label>\r\n                                                                    <Input \r\n                                                                        type=\"select\" \r\n                                                                        name=\"covid19_risk_id\"\r\n                                                                        value={currentPerson.covid19_risk_id}\r\n                                                                        onChange={e => handleInputChange(e)}>\r\n                                                                            {covidRisks.map(e=> (<option key={e.covid19_risk_id} value={e.covid19_risk_id}>{e.covid_risk}</option>))}\r\n                                                                    </Input>\r\n                                                                    <Label className=\"form-control-label pt-3\">Temperatura</Label>\r\n                                                                    <Input\r\n                                                                        step=\"0.1\"\r\n                                                                        name=\"temperature\"\r\n                                                                        type=\"number\"\r\n                                                                        onChange={e => {handleInputChange(e)}}\r\n                                                                        value={currentPerson.temperature}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                        </>}\r\n                                                        <div className= \"float-right mb-4 mr-2\">\r\n                                                            <Button type=\"submit\" id=\"id-btn-save\" color=\"primary\">Guardar</Button>{' '}\r\n                                                            <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Cancelar</Button>\r\n                                                        </div>\r\n                                                    </ModalBody>\r\n                                                </Form>\r\n                                            </Modal>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button color=\"primary\">\r\n                                                <Link \r\n                                                    style={{color: \"white\"}} \r\n                                                    to={{\r\n                                                        pathname: \"/admin/covid-risk-reception\",\r\n                                                        state: {id: person.person_id, run: person.run, name: person.names, apellido: person.lastnames}\r\n                                                    }}>Recepcionar\r\n                                                </Link>                \r\n                                            </Button>\r\n                                        </td> \r\n                                        <td>\r\n                                            <SimpleModal ref={modalRef}/>\r\n                                            <Button color=\"danger\" size=\"sm\" onClick={() => setModal({title: 'Paciente', text: 'Desea eliminar al paciente ' + person.run + '?', type: 2, fx: () => updateStatePerson(person.run)})}>\r\n                                                <i className=\"far fa-trash-alt\"></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                        </tbody>\r\n                    </Table>\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ListPatient;","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n\r\nimport Dashboard from \"views/pages/dashboards/Dashboard.js\";\r\nimport Login from \"views/pages/examples/Login.js\";\r\nimport LoginExp from \"views/pages/examples/LoginExp.js\";\r\nimport Register from \"views/pages/examples/Register.js\";\r\nimport UserTest from \"views/pages/patient/list-user\";\r\nimport RegisterUser from \"views/pages/patient/register-user\";\r\nimport PatientAdmission from \"views/pages/patient/patient-admission\"\r\nimport ListPatient from \"views/pages/patient/list-patient\";\r\nimport ListRecord from \"views/pages/patient/list-records\"\r\nimport ConsultationAppointment from \"views/pages/patient/consultation-appointment\"\r\nimport Referral from \"views/pages/patient/referral\"\r\nimport ListPatientAnamnesis from \"views/pages/patient/list-patient-anamnesis\"\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Home\",\r\n    icon: \"fa fa-columns text-primary\",\r\n    miniName: \"D\",\r\n    component: Dashboard,\r\n    layout: \"/admin\" \r\n  },\r\n  {\r\n    path: \"/patient-admission\",\r\n    name: \"Pre Ingreso\",\r\n    icon: \"fa fa-address-book text-primary\",\r\n    miniName: \"PI\",\r\n    component: PatientAdmission,\r\n    layout: \"/admin\" \r\n  },\r\n\r\n\r\n    //   {\r\n    //     path: \"/consultation-motive\",\r\n    //     name: \"Motivo Consulta\",\r\n    //     miniName: \"MC\",\r\n    //     component: ConsultationMotive,\r\n    //     layout: \"/admin\"\r\n    //  },\r\n    //   {\r\n    //     path: \"/covid-risk\",\r\n    //     name: \"Riesgo Covid\",\r\n    //     miniName: \"RC\",\r\n    //     component: CovidRisk,\r\n    //     layout: \"/admin\"\r\n    //   },\r\n    //   {\r\n    //     path: \"/informed-consent\",\r\n    //     name: \"Consentimiento Informado\",\r\n    //     miniName: \"CI\",\r\n    //     component: InformedConsent,\r\n    //     layout: \"/admin\"\r\n    //   },\r\n    //   {\r\n    //     path: \"/sociodemographic-data\",\r\n    //     name: \"Datos Sociodemográficos\",\r\n    //     miniName: \"DS\",\r\n    //     component: SociodemographicData,\r\n    //     layout: \"/admin\"\r\n    //   },\r\n         \r\n    \r\n  \r\n  {\r\n    path: \"/consultation-appointment\",\r\n    name: \"Agendar Consulta\",\r\n    icon: \"fa fa-address-book text-primary\",\r\n    miniName: \"AC\",\r\n    component: ConsultationAppointment,\r\n    layout: \"/admin\" \r\n  },\r\n  {\r\n    path: \"/list-patient\",\r\n    name: \"Recepcionar paciente\",\r\n    miniName: \"LP\",\r\n    icon: \"ni fas fa-user-plus text-primary\",\r\n    component: ListPatient,\r\n    layout: \"/admin\"\r\n  \r\n  },\r\n  {\r\n  \r\n    path: \"/list-patient-anamnesis\",\r\n    name: \"Crear Anamnesis \",\r\n    miniName: \"LPA\",\r\n    icon: \"ni fas fa-user-plus text-primary\",\r\n    component: ListPatientAnamnesis,\r\n    layout: \"/admin\"\r\n \r\n   \r\n  },\r\n  {\r\n    path: \"/referral\",\r\n    name: \"Interconsultas\",\r\n    icon: \"fa fa-address-book text-primary\",\r\n    miniName: \"IC\",\r\n    component: Referral,\r\n    layout: \"/admin\" \r\n  },\r\n  // {\r\n  //   collapse: true,\r\n  //   name: \"Paginas sueltas\",\r\n  //   icon: \"fa fa-briefcase-medical text-primary\",\r\n  //   state: \"atencionCollapse\",\r\n  //   views: [ \r\n      \r\n  //    /* \r\n  //     {\r\n  //       path: \"/extra-oral\",\r\n  //       name: \"Examen Extra Oral\",\r\n  //       miniName: \"EO\",\r\n  //       component: ExtraOral,\r\n  //       layout: \"/admin\"\r\n  //     }, \r\n  //     {\r\n  //       path: \"/soft-tissues-exam\",\r\n  //       name: \"Examen de tejidos blandos\",\r\n  //       miniName: \"Etb\",\r\n  //       component: SoftTissuesExam,\r\n  //       layout: \"/admin\"\r\n  //     }, \r\n\r\n  //     {\r\n  //       path: \"/odontogram\",\r\n  //       name: \"Odontograma\",\r\n  //       miniName: \"O\",\r\n  //       component: Odontogram,\r\n  //       layout: \"/admin\"\r\n  //     }, \r\n  //     */\r\n  //     {\r\n  //       path: \"/periodontograma\",\r\n  //       name: \"Periodontograma\",\r\n  //       miniName: \"P\",\r\n  //       component: Periodontograma,\r\n  //       layout: \"/admin\"\r\n  //     }\r\n  //   ]\r\n  // },\r\n  {\r\n    path: \"/list-record\",\r\n    name: \"Fichas clinicas\",\r\n    miniName: \"LF\",\r\n    icon: \"ni fas fa-user-plus text-primary\",\r\n    component: ListRecord,\r\n    layout: \"/admin\"\r\n    \r\n  },\r\n  {\r\n    collapse: true,\r\n    name: \"Administrar Usuarios\",\r\n    icon: \"ni fas fa-user-plus text-primary\",\r\n    state: \"AdminstrarCollapse\",\r\n    layout: \"/admin\",\r\n    views: [\r\n      {\r\n        path: \"/user\",\r\n        name: \"Registrar Usuario\",\r\n        miniName: \"RU\",\r\n        component: RegisterUser,\r\n        layout: \"/admin\"\r\n      },\r\n      {\r\n        path: \"/list-user\",\r\n        name: \"Listado de Usuarios\",\r\n        miniName: \"PU\",\r\n        component: UserTest,\r\n        isAdmin: true,\r\n        layout: \"/admin\"\r\n      },      \r\n    ]\r\n  },\r\n  \r\n  {\r\n    path: \"/login\",\r\n    component: Login,\r\n    layout: \"/auth\"\r\n  },\r\n  {\r\n    path: \"/loginexp\",\r\n    component: LoginExp,\r\n    layout: \"/auth\"\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    component: Register,\r\n    layout: \"/auth\"\r\n  }\r\n\r\n];\r\n\r\nexport default routes;\r\n","// import \"assets/css/custom-style.css\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport React, {useState, useEffect, useRef} from 'react';\r\nimport {Alert, Button, Col, Container, FormGroup, Input, Card, CardBody, Label, Table, Modal, ModalHeader, ModalBody, InputGroupAddon, InputGroup} from 'reactstrap';\r\nimport {getList} from 'helpers/ListHelper';\r\nimport moment from 'moment';\r\nimport axios from '../../../helpers/axiosConfig';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst ConsultationAppointment = ({location}) => {\r\n    \r\n    const [cleanLocation, setCleanLocation] = useState(false)\r\n    const [newAppointment, setNewAppointment] = useState(false);\r\n    const reqTag = <span style={{color:\"#DC3545\"}}>*</span>\r\n    let l_run = \"\"\r\n    if(location?.state?.run) {\r\n        l_run = location.state.run;\r\n    }\r\n\r\n    const modalRef = useRef()\r\n    const setSimpleModal = (options) => {\r\n        modalRef.current.setModal(options);\r\n    };  \r\n\r\n    const [searchTerm, setSearchTerm] = useState(l_run);\r\n    const [person, setPerson] = useState({});\r\n    const [persons, setPersons] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchPersons = async () => {\r\n        const res = await getList(\"list/person\");\r\n        setLoading(false)\r\n        setPersons(res);\r\n    };\r\n\r\n    useEffect(() => { \r\n        setTimeout(fetchPersons, 1000);\r\n        cambiar();\r\n        return () => {\r\n            setCleanLocation(true);\r\n        }\r\n        \r\n    }, []);\r\n\r\n    /*Professionals###########################################################################*/ \r\n    const defaultProfessional = {professional_id: 0, professional_fullname: \"\"};\r\n    const [professional, setProfessional] = useState(defaultProfessional);\r\n    const [professionals, setProfessionals] = useState([]);\r\n    const [displayModalProfessionals, setDisplayModalProfessionals] = useState(false);\r\n    const [searchTermProfessional, setSearchTermProfessional] = useState(\"\");\r\n\r\n    const showModalProfessionals = async () => {\r\n        fetchProfessionals();\r\n        setDisplayModalProfessionals(!displayModalProfessionals);\r\n        setSearchTermProfessional(\"\");\r\n    }\r\n\r\n    const obtener = async professional => {\r\n        setProfessional(professional)\r\n        setDisplayModalProfessionals(!displayModalProfessionals);\r\n    };\r\n\r\n    const fetchProfessionals = async () => {\r\n        const res = await getList(\"user/user-professional\");\r\n        setProfessionals(res);\r\n    };\r\n    /*Professionals###########################################################################*/ \r\n\r\n    /*Appointments###############################################################################*/ \r\n    const [displayModalAppointments, setDisplayModalAppointments] = useState(false);\r\n    const [appointments, setAppointments] = useState([]);\r\n    \r\n    const showModalAppointments = async (person) => {\r\n        setPerson(person);\r\n        fetchAppointments(person.person_id);\r\n        setDisplayModalAppointments(!displayModalAppointments);\r\n    }\r\n\r\n    const fetchAppointments = async person_id => {\r\n        const res = await getList(\"consultation-appointment/\" + person_id);\r\n        setAppointments(res);\r\n    }; \r\n    /*Appointments###############################################################################*/ \r\n\r\n    /*Appointment################################################################################*/ \r\n    const defaultAppointment = {cons_appo_id: 0, cons_appo_date: moment(), cons_appo_time: \"09:00\", professional_id: \"\", cons_appo_place: \"\", cons_appo_description: \"\"};\r\n    const [displayModalAppointment, setDisplayModalAppointment] = useState(false);\r\n    const [appointment, setAppointment] = useState(defaultAppointment);\r\n\r\n    const showModalAppointmentToCreate = person => {\r\n        setPerson(person);\r\n        setAppointment(defaultAppointment);\r\n        setProfessional(defaultProfessional);\r\n        setDisplayModalAppointment(!displayModalAppointment);\r\n    };\r\n\r\n    const showModalAppointmentToUpdate = appointment => {\r\n        setAppointment(appointment);\r\n        setProfessional({professional_id: appointment.professional_id, professional_fullname: appointment.professional_fullname})\r\n        setDisplayModalAppointment(!displayModalAppointment);\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setAppointment({\r\n            ...appointment,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    /*Appointment################################################################################*/ \r\n\r\n    /*Crud#######################################################################################*/ \r\n    const disableAppointment = async id => {\r\n        await axios.put(\"consultation-appointment/\" + id);\r\n        setSimpleModal({})\r\n        fetchAppointments(person.person_id);\r\n    };\r\n\r\n    const updateAppointment = async () => {\r\n        try {\r\n            const res = await axios.post( \"consultation-appointment/\" + appointment.cons_appo_id,\r\n            {   \r\n                cons_appo_date: appointment.cons_appo_date, \r\n                cons_appo_time: appointment.cons_appo_time,\r\n                professional_id: professional.professional_id,\r\n                cons_appo_place: appointment.cons_appo_place,\r\n                cons_appo_description: appointment.cons_appo_description\r\n            });\r\n\r\n            if (!res.data.error) {\r\n                setDisplayModalAppointment(!displayModalAppointment);\r\n                fetchAppointments(person.person_id);\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const saveAppointment = async () => {\r\n        try {\r\n            const res = await axios.post(\"consultation-appointment\",\r\n            {   person_id: person.person_id, \r\n                cons_appo_date: appointment.cons_appo_date , \r\n                cons_appo_time: appointment.cons_appo_time,\r\n                professional_id: professional.professional_id,\r\n                cons_appo_place: appointment.cons_appo_place,\r\n                cons_appo_description: appointment.cons_appo_description\r\n            });\r\n            if (!res.data.error) {\r\n                setDisplayModalAppointment(!displayModalAppointment);\r\n                setNewAppointment(true);\r\n                //showModalAppointments(person);\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n    /*Crud#######################################################################################*/ \r\n    \r\n    const [ingresado, setIngresado]=useState(false)\r\n\r\n    const cambiar =()=>{\r\n        if(location?.state?.ingresado){\r\n              setIngresado(!ingresado)\r\n            }\r\n        }\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <SimpleModal ref={modalRef}/>\r\n            \r\n            {location?.state?.ingresado && <Alert color=\"success\" isOpen={ingresado} toggle={() => {setIngresado(false)}}>\r\n                Paciente ingresado exitosamente\r\n            </Alert> }\r\n            <Alert color=\"success\" isOpen={newAppointment} toggle={() => {setNewAppointment(false)}}>\r\n                La consulta fue agendada exitosamente\r\n            </Alert>\r\n            <Card>\r\n                <CardBody>\r\n                    \r\n                    <h1>Agendar Consulta</h1>\r\n                    <Input \r\n                        type=\"text\" \r\n                        placeholder=\"Buscar...\"\r\n                        name=\"look_for\"\r\n                        value={searchTerm}\r\n                        onChange={e => setSearchTerm(e.target.value)}\r\n                    />\r\n                    <br/>\r\n                    {loading \r\n                        ?<div className=\"w-100 d-flex justify-content-center\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                        :<Table className=\"align-items-center\" responsive>\r\n                            <thead className=\"thead-light\">\r\n                                <tr className=\"text-center\">\r\n                                    <th scope=\"col\">ID</th>\r\n                                    <th scope=\"col\">Rut</th>\r\n                                    <th scope=\"col\">Nombre</th>\r\n                                    <th scope=\"col\">Apellidos</th>    \r\n                                    <th scope=\"col\"></th>\r\n                                    <th scope=\"col\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {persons.filter(val => {\r\n                                    if(searchTerm == \"\") {\r\n                                        return val;\r\n                                    } else if (val.run.includes(searchTerm) || val.fullname.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                        return val;\r\n                                    }\r\n                                }).map(e_person => (\r\n                                    <tr className=\"text-center\" key={e_person.person_id}>\r\n                                        <td>{e_person.person_id}</td>\r\n                                        <td>{e_person.run}</td>\r\n                                        <td>{e_person.names}</td>\r\n                                        <td>{e_person.lastnames}</td>\r\n                                        <td><Button color=\"primary\" onClick={() => showModalAppointmentToCreate(e_person)}>Nuevo</Button></td>\r\n                                        <td><Button onClick={() => showModalAppointments(e_person)}>Listado</Button></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n            <Modal isOpen={displayModalAppointment}>\r\n                <ModalHeader toggle={() => {setDisplayModalAppointment(!displayModalAppointment)}}>\r\n                    Agenda\r\n                </ModalHeader>\r\n                <ModalBody className= \"pt-2\">\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label\">Fecha {reqTag}</Label>\r\n                            <Input\r\n                                value={moment(appointment.cons_appo_date).format('YYYY-MM-DD')}\r\n                                type=\"date\"\r\n                                name=\"cons_appo_date\"\r\n                                onChange={e => {handleInputChange(e)}}\r\n                                required\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label\">Hora {reqTag}</Label>\r\n                            <Input\r\n                                value={appointment.cons_appo_time}\r\n                                type=\"time\"\r\n                                name=\"cons_appo_time\"\r\n                                onChange={e => {handleInputChange(e)}}\r\n                                required\r\n                            />\r\n                            <h5 align=\"right\" style={{marginRight: \"10px\", marginBottom: \"0px\"}}>La cita posee una duración de 2 horas</h5>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label\">Profesional {reqTag}</Label>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    style={{backgroundColor: \"white\"}}\r\n                                    required\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    name=\"professional_fullname\"\r\n                                    value={professional.professional_fullname}\r\n                                />\r\n                                <InputGroupAddon addonType=\"append\">\r\n                                    <i className=\"fas fa-search btn btn-primary\" onClick={() => showModalProfessionals()}></i>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label\">Lugar</Label>\r\n                            <Input \r\n                                autoComplete=\"off\" maxLength=\"250\" type=\"textarea\"\r\n                                name=\"cons_appo_place\"\r\n                                value={appointment.cons_appo_place}\r\n                                onChange={e => handleInputChange(e)}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label\">Descripción</Label>\r\n                            <Input \r\n                                autoComplete=\"off\" maxLength=\"250\"\r\n                                type=\"textarea\"\r\n                                name=\"cons_appo_description\"\r\n                                value={appointment.cons_appo_description}\r\n                                onChange={e => handleInputChange(e)}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <div className= \"float-right mb-2 mr-2\">\r\n                        {appointment.cons_appo_id == 0 \r\n                            ? <Button color=\"primary\" onClick={() => {saveAppointment()}}>Guardar</Button>\r\n                            : <Button color=\"primary\" onClick={() => {updateAppointment()}}>Modificar</Button>\r\n                        }\r\n                    </div>\r\n                    <h5 style={{color:\"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal size=\"lg\" isOpen={displayModalAppointments}>\r\n                <ModalHeader toggle={() => {setDisplayModalAppointments(!displayModalAppointments)}}>\r\n                    Agenda\r\n                </ModalHeader>\r\n                <ModalBody className= \"pt-1\">\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                            <tr className=\"text-center\">\r\n                                <th scope=\"col\">Paciente</th>\r\n                                <th scope=\"col\">Dia / Hora</th>\r\n                                <th scope=\"col\">Profesional</th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {appointments.map(appointment => (\r\n                                <tr className=\"text-center\" key={appointment.cons_appo_id}>\r\n                                    <td>{appointment.run}</td>\r\n                                    <td>{moment(appointment.cons_appo_date).format('DD-MM-YYYY')} / {moment(appointment.cons_appo_time,\"HH:mm\").format('HH:mm')}</td>\r\n                                    <td>{appointment.professional_fullname}</td>\r\n                                    <td>\r\n                                        <Button color=\"primary\" onClick={() => showModalAppointmentToUpdate(appointment)}>Editar</Button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button color=\"danger\" size=\"sm\" onClick={\r\n                                            () => setSimpleModal({title: 'Agenda', text : '¿Desea eliminar agenda del ' + moment(appointment.cons_appo_date).format('DD-MM-YYYY') + ' a las ' + moment(appointment.cons_appo_time,\"HH:mm\").format('HH:mm') + '?', type: 2, fx: () => disableAppointment(appointment.cons_appo_id)})\r\n                                        }><i className=\"far fa-trash-alt\"></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal size=\"lg\" isOpen={displayModalProfessionals}>\r\n                <ModalHeader toggle={() => {setDisplayModalProfessionals(!displayModalProfessionals)}}>\r\n                    Profesionales\r\n                </ModalHeader>\r\n                <ModalBody className= \"pt-1\">\r\n                    <Input \r\n                        type=\"text\" \r\n                        placeholder=\"Buscar profesional...\"\r\n                        value={searchTermProfessional}\r\n                        onChange={e => setSearchTermProfessional(e.target.value)}\r\n                    />\r\n                    <br/>\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                            <tr className=\"text-center\">\r\n                                <th scope=\"col\">Profesional</th>\r\n                                <th scope=\"col\">Área de Especialidad</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {professionals.filter(val => {\r\n                                if(searchTermProfessional == \"\") {\r\n                                    return val;\r\n                                } else if (val.professional_run.includes(searchTermProfessional) || val.professional_fullname.toLowerCase().includes(searchTermProfessional.toLowerCase()) || val.professional_medical_area_name.toLowerCase().includes(searchTermProfessional.toLowerCase())) {\r\n                                    return val;\r\n                                }\r\n                            }).map(professional => (\r\n                                <tr className=\"text-center\" key={professional.professional_id + '' + professional.professional_medical_area_id}>\r\n                                    <td>{professional.professional_fullname}</td>\r\n                                    <td>{professional.professional_medical_area_name}</td>\r\n                                    <td>{professional.professional_email}</td>\r\n                                    <td>\r\n                                        <Button onClick={() => obtener(professional)} color=\"primary\">Seleccionar</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </ModalBody>\r\n            </Modal>\r\n            {cleanLocation && \r\n                <Redirect to={\r\n                    {pathname: \"/admin/consultation-appointment\",\r\n                    state: {}}\r\n                }/> \r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ConsultationAppointment;","import React, {useState, useEffect} from 'react'\r\nimport {\r\n    Button, Col, Container, Card, CardBody,\r\n    Table,\r\n    Alert\r\n\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst ListPatientAnamnesis = ({location}) => {\r\n\r\n    const [datos, setDatos] = useState([])\r\n    const [editModal, setEditModal] = useState();\r\n    const [deletModal, setDeletModal] = useState();\r\n    const [showDelete, setShowDelete] = useState()\r\n\r\n\r\n\r\n    const editToggle = () => setEditModal(!editModal);\r\n    //const deleteToggle = () => setDeletModal(!deletModal);\r\n    const deleteToggleDelete = (run) => {\r\n        setShowDelete({\r\n            ...showDelete,\r\n            [run]: false\r\n        })\r\n    }\r\n    const deleteToggleModal = (run) => {\r\n        setDeletModal({\r\n            ...deletModal,\r\n            [run]: !deletModal[run]\r\n        })\r\n    }\r\n\r\n\r\n    class Person {\r\n        constructor(id, idRun, name, lastname, run, urgency, pain, cavities, wounds, bleeding, fracture, other, answer_id, covid19_risk_id,\r\n                    phone, cellphone, email, occupation, prevision_id, marital_status_id, native_origin_id, educational_level_id) {\r\n\r\n            this.id = id\r\n            this.idRun = idRun\r\n            this.name = name;\r\n            this.lastname = lastname;\r\n            this.run = run;\r\n            this.urgency = urgency;\r\n            this.pain = pain;\r\n            this.cavities = cavities;\r\n            this.wounds = wounds;\r\n            this.bleeding = bleeding;\r\n            this.fracture = fracture;\r\n            this.other = other;\r\n            this.answer_id = answer_id;\r\n            this.covid19_risk_id = covid19_risk_id;\r\n            this.phone = phone;\r\n            this.cellphone = cellphone;\r\n            this.email = email;\r\n            this.occupation = occupation;\r\n            this.prevision_id = prevision_id;\r\n            this.marital_status_id = marital_status_id;\r\n            this.native_origin_id = native_origin_id;\r\n            this.educational_level_id = educational_level_id;\r\n        }\r\n    }\r\n\r\n    var personas = []\r\n\r\n    const listPatient = async () => {\r\n\r\n        const res = await Axios.get(\"person/listpatient\")\r\n            .then(response => {\r\n                response.data.result.forEach(element => {\r\n                    setShowDelete({[element.run]: false})\r\n                    setDeletModal({[element.run]: false})\r\n                    personas.push(new Person(element.person_id, element.run_id, element.names, element.lastnames, element.run, element.urgency,\r\n                        element.pain, element.cavities, element.wounds, element.bleeding, element.fracture, element.other, element.informed_consent_answer_id,\r\n                        element.covid19_risk_id, element.phone, element.cellphone, element.email,\r\n                        element.occupation, element.prevision_id, element.marital_status_id, element.native_origin_id, element.educational_level_id));\r\n\r\n                });\r\n            })\r\n\r\n        setDatos(personas)\r\n    }\r\n\r\n\r\n    const [odontoFichaAnamnesis, setOdontoFichaAnamnesis] = useState(false)\r\n    const [nuevaOdontoAnamnesis, setNuevaOdontoAnamnesis] = useState(false)\r\n    const [medicoFichaAnamnesis, setMedicoFichaAnamnesis] = useState(false)\r\n    const [nuevaMedicoAnamnesis, setNuevaMedicoAnamnesis] = useState(false)\r\n    const [generalFichaAnamnesis, setGeneralFichaAnamnesis] = useState(false)\r\n    const [nuevaGeneralAnamnesis, setNuevaGeneralAnamnesis] = useState(false)\r\n    const [name, setName] = useState(\"\")\r\n    const [run, setRun] = useState(\"\")\r\n    const [lastname, setLastName] = useState(\"\")\r\n    const [id, setId] = useState(0)\r\n\r\n    const datosPersona = (id, name, lastname, run) => {\r\n        setName(name)\r\n        setRun(run)\r\n        setLastName(lastname)\r\n        setId(id)\r\n    }\r\n\r\n    const consultaAnamnesisOdonto = async (id, name, lastname, run) => {\r\n\r\n        const res = await Axios.get(\"geriatrical-odonto-anamnesis/crud/\" + id\r\n        )\r\n\r\n        if (res.data.result.length === 1) {\r\n            datosPersona(id, name, lastname, run)\r\n            setOdontoFichaAnamnesis(true)\r\n        } else {\r\n            datosPersona(id, name, lastname, run)\r\n            setNuevaOdontoAnamnesis(true)\r\n        }\r\n\r\n    }\r\n    const consultaAnamnesisMedico = async (id, name, lastname, run) => {\r\n\r\n        const res = await Axios.get(\"geriatrical-medical-anamnesis/crud/\" + id\r\n        )\r\n\r\n        if (res.data.result.length === 1) {\r\n            datosPersona(id, name, lastname, run)\r\n            setMedicoFichaAnamnesis(true)\r\n        } else {\r\n            datosPersona(id, name, lastname, run)\r\n            setNuevaMedicoAnamnesis(true)\r\n        }\r\n\r\n    }\r\n    const consultaAnamnesisGeneral = async (id, name, lastname, run) => {\r\n\r\n        const res = await Axios.get(\"general-anamnesis/\" + id\r\n        )\r\n\r\n        if (res.data.result.length === 1) {\r\n            datosPersona(id, name, lastname, run)\r\n            setGeneralFichaAnamnesis(true)\r\n        } else {\r\n            datosPersona(id, name, lastname, run)\r\n            setNuevaGeneralAnamnesis(true)\r\n        }\r\n\r\n    }\r\n\r\n    const [modalReception, setModalReception]=useState(false)\r\n    const [modalGeneral, setModalGeneral]=useState(false)\r\n    const [modalMedica, setModalMedica]=useState(false)\r\n    const [modalOdonto, setModalOdonto]=useState(false)\r\n\r\n    const modal=()=>{\r\n        if(location?.state?.reception){\r\n            setModalReception(!modalReception)\r\n        }\r\n        if(location?.state?.anamnesisGeneral){\r\n            setModalGeneral(!modalGeneral)\r\n        }\r\n        if(location?.state?.medicalAnamnesis){\r\n            setModalMedica(!modalMedica)\r\n        }\r\n        if(location?.state?.dentalAnamnesis){\r\n            setModalOdonto(!modalOdonto)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        listPatient();\r\n        modal();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <Card>\r\n                <CardBody>\r\n                    {location?.state?.reception && <Alert color=\"success\" isOpen={modalReception} toggle={() => {setModalReception(false)}}>\r\n                        Recepción realizada exitosamente\r\n                    </Alert>}\r\n                    {location?.state?.anamnesisGeneral && <Alert color=\"success\" isOpen={modalGeneral} toggle={() => {setModalGeneral(false)}}>\r\n                        Anamnesis General creada exitosamente\r\n                    </Alert>}\r\n                    {location?.state?.medicalAnamnesis && <Alert color=\"success\" isOpen={modalMedica} toggle={() => {setModalMedica(false)}}>\r\n                    Anamnesis Médico-geriátrica creada exitosamente\r\n                    </Alert>}\r\n                    {location?.state?.dentalAnamnesis && <Alert color=\"success\" isOpen={modalOdonto} toggle={() => {setModalOdonto(false)}}>\r\n                    Anamnesis Odonto-geriátrica creada exitosamente\r\n                    </Alert>}\r\n                    <h1>\r\n                        Listado de pacientes\r\n                    </h1>\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                        <tr className=\"text-center\">\r\n                            <th scope=\"col\">N°</th>\r\n                            <th scope=\"col\">Nombre</th>\r\n                            <th scope=\"col\">Apellido</th>\r\n                            <th scope=\"col\">Run</th>\r\n                            <th scope=\"col\">Nueva Anamnesis</th>\r\n                            <th scope=\"col\"></th>\r\n                            <th scope=\"col\"></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            datos.map(\r\n                                (person, i) =>\r\n\r\n                                    <tr className=\"text-center\" key={person.id}>\r\n                                        <td>\r\n                                            {i + 1}\r\n                                        </td>\r\n                                        <td>\r\n                                            {person.name}\r\n                                        </td>\r\n                                        <td>\r\n                                            {person.lastname}\r\n                                        </td>\r\n                                        <td>\r\n                                            {person.run}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <Button\r\n                                                onClick={() => consultaAnamnesisGeneral(person.id, person.name, person.lastname, person.run)}\r\n                                                color=\"primary\">\r\n                                                General\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button\r\n                                                onClick={() => consultaAnamnesisMedico(person.id, person.name, person.lastname, person.run)}\r\n                                                color=\"primary\">\r\n                                                Medico Geriatra\r\n                                            </Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button\r\n                                                onClick={() => consultaAnamnesisOdonto(person.id, person.name, person.lastname, person.run)}\r\n                                                color=\"primary\">\r\n                                                Odonto Geriatra\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                    {nuevaGeneralAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/anamnesis-general\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {generalFichaAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/general-anamnesis-u\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {nuevaMedicoAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/physical-parameters\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {medicoFichaAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/medical-anamnesis-u\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {nuevaOdontoAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/background\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                    {odontoFichaAnamnesis && <Redirect to={{\r\n                        pathname: \"/admin/dental-anamnesis-u\",\r\n                        state: {id: id, run: run, name: name}\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ListPatientAnamnesis\r\n","// import \"assets/css/custom-style.css\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport React, {useState, useEffect, useRef} from 'react';\r\nimport {Button, Col, Container, FormGroup, Input, Card, CardBody, Label, Table, Modal, ModalHeader, ModalBody, InputGroup, InputGroupAddon} from 'reactstrap';\r\nimport {getList} from 'helpers/ListHelper';\r\nimport moment from 'moment';\r\nimport axios from '../../../helpers/axiosConfig';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst Referral = ({location}) => {\r\n\r\n    const [cleanLocation, setCleanLocation] = useState(false)\r\n    let l_run = \"\"\r\n    if(location?.state?.run) {\r\n        l_run = location.state.run;\r\n    }\r\n    \r\n    const [searchTermPerson, setSearchTermPerson] = useState(l_run);\r\n    const [loading, setLoading] = useState(true);\r\n    const [persons, setPersons] = useState([]);\r\n    const [person, setPerson] = useState({});\r\n\r\n    const fetchPersons = async () => {\r\n        const res = await getList(\"list/person\");\r\n        setLoading(false)\r\n        setPersons(res);\r\n    };\r\n\r\n    useEffect(() => { \r\n        setTimeout(fetchPersons, 1000);\r\n        return () => {\r\n            setCleanLocation(true);\r\n        }\r\n    }, []);\r\n\r\n    const modalRef = useRef()\r\n    const setSimpleModal = (options) => {\r\n        modalRef.current.setModal(options);\r\n    };\r\n\r\n    /*Referrals###############################################################################*/ \r\n    const [displayModalReferrals, setDisplayModalReferrals] = useState(false);\r\n    const [referrals, setReferrals] = useState([]);\r\n    const showModalReferrals = async (person) => {\r\n        setPerson(person);\r\n        fetchReferrals(person.person_id);\r\n        setDisplayModalReferrals(!displayModalReferrals);\r\n    }\r\n    const fetchReferrals = async person_id => {\r\n        const res = await getList(\"referral/\" + person_id);\r\n        setReferrals(res);\r\n    };  \r\n    /*Referrals###############################################################################*/ \r\n\r\n    /*Professionals###########################################################################*/ \r\n    const defaultProfessional = {professional_id: 0, professional_fullname: \"\", professional_run: \"\", professional_email: \"\", professional_medical_area_id: 0, professional_medical_area_name: \"\"};\r\n    const [professional, setProfessional] = useState(defaultProfessional);\r\n    const [professionals, setProfessionals] = useState([]);\r\n\r\n    const [displayModalProfessionals, setDisplayModalProfessionals] = useState(false);\r\n    const [searchTermProfessional, setSearchTermProfessional] = useState(\"\");\r\n\r\n    const showModalProfessionals = async () => {\r\n        fetchProfessionals();\r\n        setDisplayModalProfessionals(!displayModalProfessionals);\r\n        setSearchTermProfessional(\"\");\r\n    }\r\n\r\n    const obtener = async professional => {\r\n        setProfessional(professional)\r\n        setDisplayModalProfessionals(!displayModalProfessionals);\r\n    };\r\n\r\n    const fetchProfessionals = async () => {\r\n        const res = await getList(\"user/user-professional\");\r\n        setProfessionals(res);\r\n    };\r\n    /*Professionals###########################################################################*/ \r\n\r\n    /*Referral################################################################################*/\r\n    const defaultReferral = {referral_id: 0, referral_description: \"\"};\r\n    const [displayModalReferral, setDisplayModalReferral] = useState(false);\r\n    const [referral, setReferral] = useState(defaultReferral);\r\n    \r\n    const showModalReferralToCreate = (person) => {\r\n        setPerson(person);\r\n        setReferral(defaultReferral);\r\n        setProfessional(defaultProfessional);\r\n        setDisplayModalReferral(!displayModalReferral);\r\n    };\r\n\r\n    const showModalReferralToUpdate = referral => {\r\n        setReferral(referral);\r\n        setProfessional(referral);\r\n        setDisplayModalReferral(!displayModalReferral);\r\n    };\r\n\r\n    const handleInputChangeReferral = e => {\r\n        setReferral({\r\n            ...referral,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    /*Referral################################################################################*/ \r\n    \r\n    /*Crud####################################################################################*/ \r\n    const disableReferral = async id => {\r\n        await axios.put(\"referral/\" + id);\r\n        setSimpleModal({})\r\n        fetchReferrals(person.person_id);\r\n    };\r\n\r\n    const updateReferral = async () => {\r\n        try {\r\n            const res = await axios.post(\"referral/\" + referral.referral_id,\r\n            {   professional_id: professional.professional_id, \r\n                professional_medical_area_id: professional.professional_medical_area_id, \r\n                referral_description: referral.referral_description\r\n            });\r\n            if (!res.data.error) {\r\n                setDisplayModalReferral(!displayModalReferral);\r\n                fetchReferrals(person.person_id);\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const emailBody = \r\n    `\r\n        <html>\r\n            <h2>Interconsulta</h2>\r\n            <ul>\r\n                <li>Paciente: ${person.names + ' ' + person.lastnames}</li>\r\n                <li>Rut: ${person.run}</li>\r\n                <li>Profesional: ${professional.professional_fullname}</li>\r\n                <li>Area: ${professional.professional_medical_area_name}</li>\r\n                <li>Descripcion: ${referral.referral_description}</li>\r\n            </ul>\r\n            <br></br>\r\n            <em>Este email fue generado automaticamente, por favor no responder</em>\r\n        </html>    \r\n    `\r\n    const saveReferral = async () => {\r\n        try {\r\n            const res = await axios.post(process.env.REACT_APP_API_URL + \"referral\",\r\n            {   person_id: person.person_id,\r\n                professional_id: professional.professional_id, \r\n                professional_medical_area_id: professional.professional_medical_area_id, \r\n                referral_description: referral.referral_description,\r\n                professional_email: professional.professional_email,\r\n                emailBody: emailBody\r\n            });\r\n            if (!res.data.error) {\r\n                setDisplayModalReferral(!displayModalReferral);\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n    /*Crud####################################################################################*/ \r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <SimpleModal ref={modalRef}/>\r\n            <Card>\r\n                <CardBody>\r\n                    {location?.state?.run && <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>}\r\n                    <h1>Interconsulta</h1>\r\n                    <Input \r\n                        type=\"text\" \r\n                        placeholder=\"Buscar paciente...\"\r\n                        value={searchTermPerson}\r\n                        onChange={e => setSearchTermPerson(e.target.value)}\r\n                    />\r\n                    <br/>\r\n                    {loading \r\n                        ?<div className=\"w-100 d-flex justify-content-center\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                        :<Table className=\"align-items-center\" responsive>\r\n                            <thead className=\"thead-light\">\r\n                                <tr className=\"text-center\">\r\n                                    <th scope=\"col\">Run</th>\r\n                                    <th scope=\"col\">Nombre</th>\r\n                                    <th scope=\"col\">Apellidos</th>    \r\n                                    <th scope=\"col\"></th>\r\n                                    <th scope=\"col\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {persons.filter(val => {\r\n                                    if(searchTermPerson == \"\") {\r\n                                        return val;\r\n                                    } else if (val.run.includes(searchTermPerson) || val.fullname.toLowerCase().includes(searchTermPerson.toLowerCase())) {\r\n                                        return val;\r\n                                    }\r\n                                }).map(e_person => (\r\n                                    <tr className=\"text-center\" key={e_person.person_id}>\r\n                                        <td>{e_person.run}</td>\r\n                                        <td>{e_person.names}</td>\r\n                                        <td>{e_person.lastnames}</td>\r\n                                        <td>\r\n                                            <Button color=\"primary\" onClick={() => showModalReferralToCreate(e_person)}>Nuevo</Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button onClick={() => showModalReferrals(e_person)}>Listado</Button>\r\n                                        </td>                                    \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n            <Modal isOpen={displayModalReferral}>\r\n                <ModalHeader toggle={() => {setDisplayModalReferral(!displayModalReferral)}}>\r\n                    Interconsulta\r\n                </ModalHeader>\r\n                <ModalBody className= \"pt-1\">\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label\">Profesional</Label>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    style={{backgroundColor: \"white\"}}\r\n                                    readOnly\r\n                                    type=\"text\"\r\n                                    name=\"referral_user_fullname\"\r\n                                    value={professional.professional_fullname}\r\n                                />\r\n                                <InputGroupAddon addonType=\"append\">\r\n                                    <i className=\"fas fa-search btn btn-primary\" onClick={() => showModalProfessionals()}></i>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label\">Área de Especialidad Odontológica/Médica</Label>\r\n                            <Input \r\n                                style={{backgroundColor: \"white\"}}\r\n                                readOnly\r\n                                type=\"text\"\r\n                                name=\"professional_medical_area_name\"\r\n                                value={professional.professional_medical_area_name}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label\">Email</Label>\r\n                            <Input \r\n                                style={{backgroundColor: \"white\"}}\r\n                                readOnly\r\n                                type=\"email\"\r\n                                name=\"professional_email\"\r\n                                value={professional.professional_email}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label\">Descripción</Label>\r\n                            <Input \r\n                                autoComplete=\"off\" maxLength=\"250\"\r\n                                type=\"textarea\"\r\n                                name=\"referral_description\"\r\n                                value={referral.referral_description}\r\n                                onChange={e => handleInputChangeReferral(e)}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <div className= \"float-right mb-2 mr-2\">\r\n                        {referral.referral_id == 0 \r\n                            ? <Button color=\"primary\" onClick={() => {saveReferral()}}>Guardar</Button>\r\n                            : <Button color=\"primary\" onClick={() => {updateReferral()}}>Editar</Button>\r\n                        }\r\n                    </div>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal size=\"lg\" isOpen={displayModalProfessionals}>\r\n                <ModalHeader toggle={() => {setDisplayModalProfessionals(!displayModalProfessionals)}}>\r\n                    Interconsulta\r\n                </ModalHeader>\r\n                <ModalBody className= \"pt-1\">\r\n                    <Input \r\n                        type=\"text\" \r\n                        placeholder=\"Buscar profesional...\"\r\n                        value={searchTermProfessional}\r\n                        onChange={e => setSearchTermProfessional(e.target.value)}\r\n                    />\r\n                    <br/>\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                            <tr className=\"text-center\">\r\n                                <th scope=\"col\">Profesional</th>\r\n                                <th scope=\"col\">Área de Especialidad</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {professionals.filter(val => {\r\n                                if(searchTermProfessional == \"\") {\r\n                                    return val;\r\n                                } else if (val.professional_run.includes(searchTermProfessional) || val.professional_fullname.toLowerCase().includes(searchTermProfessional.toLowerCase()) || val.professional_medical_area_name.toLowerCase().includes(searchTermProfessional.toLowerCase())) {\r\n                                    return val;\r\n                                }\r\n                            }).map(professional => (\r\n                                <tr className=\"text-center\" key={professional.professional_id + '' + professional.professional_medical_area_id}>\r\n                                    <td>{professional.professional_fullname}</td>\r\n                                    <td>{professional.professional_medical_area_name}</td>\r\n                                    <td>{professional.professional_email}</td>\r\n                                    <td>\r\n                                        <Button onClick={() => obtener(professional)} color=\"primary\">Seleccionar</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal size=\"lg\" isOpen={displayModalReferrals}>\r\n                <ModalHeader toggle={() => {setDisplayModalReferrals(!displayModalReferrals)}}>\r\n                    Interconsulta\r\n                </ModalHeader>\r\n                <ModalBody className= \"pt-1\">\r\n                    <Table className=\"align-items-center\" responsive>\r\n                        <thead className=\"thead-light\">\r\n                            <tr className=\"text-center\">\r\n                                <th scope=\"col\">Fecha Creacion</th>\r\n                                <th scope=\"col\">Profesional</th>\r\n                                <th scope=\"col\">Área de Especialidad</th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {referrals.map(referral => (\r\n                                <tr className=\"text-center\" key={referral.referral_id}>\r\n                                    <td>{moment(referral.referral_created_date).format('DD-MM-YYYY')}</td>\r\n                                    <td>{referral.professional_fullname}</td>\r\n                                    <td>{referral.professional_medical_area_name}</td>\r\n                                    <td>\r\n                                        <Button color=\"primary\" onClick={() => showModalReferralToUpdate(referral)}>Editar</Button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button onClick={() => setSimpleModal({title: 'Interconsulta', text : '¿Desea eliminar la interconsulta con el profesional ' + referral.professional_fullname + '?', type: 2, fx: () => disableReferral(referral.referral_id)})}>Eliminar</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </ModalBody>\r\n            </Modal>\r\n            {cleanLocation && \r\n                <Redirect to={\r\n                    {pathname: \"/admin/consultation-referral\",\r\n                    state: {}}\r\n                }/> \r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Referral;","import React, {useState, useEffect} from 'react';\r\nimport {Button, Container, Card, CardBody, Table, Input} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../../assets/css/loading.css'\r\nimport {getList} from 'helpers/ListHelper';\r\n\r\nconst ListRecords = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchPersons = async () => {\r\n        const res = await getList(\"list/person\");\r\n        setLoading(false)\r\n        setPersons(res);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPersons();\r\n    }, []);\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Card>\r\n                <CardBody>\r\n                    <h1>Fichas Clinicas</h1>\r\n                    <Input type=\"text\" placeholder=\"Buscar...\" autoComplete=\"off\" name=\"look_for\" \r\n                        value={searchTerm}\r\n                        onChange={e => setSearchTerm(e.target.value)}\r\n                    />\r\n                    <br/>\r\n                    {loading \r\n                        ?<div className=\"w-100 d-flex justify-content-center\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                        :<Table className=\"align-items-center\" responsive>\r\n                            <thead className=\"thead-light\">\r\n                                <tr className=\"text-center\">\r\n                                    <th scope=\"col\">ID</th>\r\n                                    <th scope=\"col\">Run</th>\r\n                                    <th scope=\"col\">Nombre</th>\r\n                                    <th scope=\"col\">Apellidos</th>\r\n                                    <th scope=\"col\">Ficha Clinica</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {/* {loading && <div className=\"loader align-self-center text-center justify-content-center\"></div>} */}\r\n                            <tbody>\r\n                                {persons.filter(val => {\r\n                                    if(searchTerm == \"\") {\r\n                                        return val;\r\n                                    } else if (val.run.includes(searchTerm) || val.fullname.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                        return val;\r\n                                    }\r\n                                }).map(e_person => (\r\n                                    <tr className=\"text-center\" key={e_person.person_id}>\r\n                                        <td>{e_person.person_id}</td>\r\n                                        <td>{e_person.run}</td>\r\n                                        <td>{e_person.names}</td>\r\n                                        <td>{e_person.lastnames}</td>\r\n                                        <td>\r\n                                            {/* <Button onClick={() => showModalAppointments(e_person)}>Listar</Button> */}\r\n                                            <Link to={{\r\n                                                    pathname: \"/admin/clinical-record\",\r\n                                                    state: {\r\n                                                        id: e_person.person_id,\r\n                                                        run: e_person.run,\r\n                                                        name: e_person.names,\r\n                                                        apellido: e_person.lastnames\r\n                                                    }\r\n                                                }} style={{color: \"white\"}}><Button color=\"primary\">\r\n                                                Ver</Button></Link>\r\n                                            \r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ListRecords;\r\n","import React, {useState} from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Row, InputGroup,\r\n    InputGroupText, InputGroupAddon, Card, CardBody, Label, ListGroup, lisgro\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst ConsultationMotive = ({location}) => {\r\n\r\n    const [urgency, setUrgency] = useState(true)\r\n    const [pain, setPain] = useState(false)\r\n    const [cavities, setCavities] = useState(false)\r\n    const [wounds, setWounds] = useState(false)\r\n    const [bleeding, setBleeding] = useState(false)\r\n    const [fracture, setFracture] = useState(false)\r\n\r\n    const [trauma, setTrauma] = useState(false)\r\n    const [swelling, setSwelling] = useState(false)\r\n    const [treatment, setTreatment] = useState(false)\r\n\r\n\r\n    const [other, setOther] = useState('')\r\n    const [next, setNext] = useState(false)\r\n    const [ohip, setOhip] =useState('')\r\n    const [barthel, setBarthel] =useState('')\r\n\r\n    const addPreConsultationMotive = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"person/pre-medical-consultation\",\r\n            {\r\n                personId: location.state.id,\r\n                urgency: urgency,\r\n                pain: pain,\r\n                cavities: cavities,\r\n                wounds: wounds,\r\n                bleeding: bleeding,\r\n                fracture: fracture,\r\n                trauma: trauma,\r\n                swelling: swelling,\r\n                treatment: treatment,\r\n                other: other,\r\n                ohip:ohip,\r\n                barthel:barthel\r\n            }\r\n        )\r\n        if (!res.data.error)\r\n            setNext(true)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Motivo Ingreso\r\n                    </h1>\r\n                    <Form onSubmit={addPreConsultationMotive} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"8\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                >\r\n                                    ¿Urgencia dental?\r\n                                </Label>\r\n                                <div><label className=\"custom-toggle custom-toggle-warning mr-1\">\r\n                                    <Input checked={urgency} type=\"checkbox\" onChange={(e) => {\r\n                                        setUrgency(!urgency)\r\n                                    }}/>\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label></div>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                >\r\n                                    Motivo\r\n                                </Label>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"pain\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPain(!pain)\r\n                                        }}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"pain\"><strong>Dolor severo de causa dentaria</strong>, que no ceda a analgésicos.</label>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"cavities\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setCavities(!cavities)\r\n                                        }}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"cavities\"><strong>Manchas o heridas en cualquier parte de la boca</strong> que no desaparecen en 1 mes.</label>\r\n                                </div>\r\n\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"wounds\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setWounds(!wounds)\r\n                                        }}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"wounds\"><strong>Lesiones en mucosa/encía</strong>, debido a desajuste de prótesis dental.</label>\r\n                                </div>\r\n\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"bleeding\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setBleeding(!bleeding)\r\n                                        }}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"bleeding\"><strong>Hemorragia bucal.</strong></label>\r\n                                </div>\r\n\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"fracture\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setFracture(!fracture)\r\n                                        }}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"fracture\"><strong>Pérdida o fractura de restauraciones</strong> (tapaduras) o <strong>prótesis dentales.</strong></label>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"trauma\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setTrauma(!trauma)\r\n                                        }}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"trauma\"><strong>Trauma reciente.</strong></label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"swelling\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setSwelling(!swelling)\r\n                                        }}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"swelling\"><strong>Hinchazón importante de boca</strong>, cara o cuello.</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"treatment\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setTreatment(!treatment)\r\n                                        }}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"treatment\"><strong>Tratamiento dental requerido previo a procedimientos médicos</strong> críticos impostergables.</label>\r\n                                </div>\r\n\r\n\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Otro\r\n                                </Label>\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        setOther(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <h5 className=\"heading-small\" >Cuestionarios</h5>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"3\">\r\n                                <Label  \r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                    > Encuesta OHIP-14Sp (\r\n                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSetI2HQMrH1lhqeQBUZT1ks2KKpxrhIpL-ceOm3jYEyIY_gwQ/viewform\"\r\n                                        target=\"_blank\">\r\n                                            ver</a>)\r\n                                </Label>\r\n                                <Input\r\n                                    placeholder=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    name=\"folstein_value\"\r\n                                    type=\"number\"\r\n                                    onChange={(e) => {setOhip(e.target.value) }}\r\n                                    // required\r\n                                />\r\n                            </Col>\r\n                            <Col md=\"1\">\r\n                            </Col>\r\n                            <Col md=\"3\">\r\n                                <Label  \r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                    > Índice de Barthel (\r\n                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSemuQyOJFSXvhQYjtf_ZKziNjYgvgKGFDTSMU1UlzffJzahPA/viewform\"\r\n                                        target=\"_blank\">\r\n                                            ver</a>)\r\n                                </Label>\r\n                                <Input\r\n                                    placeholder=\"\"  \r\n                                    id=\"example-text-input\"\r\n                                    name=\"pfeiffer_value\"\r\n                                    type=\"number\"\r\n                                    onChange={(e) => { setBarthel(e.target.value) }}\r\n                                    // required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n\r\n                                <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    {next && <Redirect to={{\r\n                        pathname: \"/admin/covid-risk\",\r\n                        state: {\r\n                            id: location.state.id,\r\n                            run: location.state.run,\r\n                            name: location.state.name,\r\n                            apellido: location.state.apellido\r\n                        }\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ConsultationMotive\r\n","import React, {useState} from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\nimport useList from 'hooks/useList';\r\n\r\nconst CovidRisk = ({location}) => {\r\n    const [covidRiskId, setcovidRiskId] = useState(1)\r\n    const casos = useList(\"list/covid-risk\")\r\n    const [next, setNext] = useState(false)\r\n\r\n    const addCovidRisk = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"person/trigae-covid19\",\r\n            {\r\n                personId: location.state.id,\r\n                covidRiskId: covidRiskId\r\n            }\r\n        )\r\n        if (!res.data.error)\r\n            setNext(true)\r\n\r\n    }\r\n    \r\n    const reqTag = <span style={{color:\"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Riesgo Covid\r\n                    </h1>\r\n                    <h5 style={{color:\"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n                    <Form onSubmit={addCovidRisk} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\"\r\n                                    >Encuesta Caso Covid (\r\n                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSf7GsvK4AVlSlzQ8dFXcouJeNhKWzbHkjU78WTD7p92gNUpYg/viewform\"\r\n                                        target=\"_blank\">\r\n                                            ver</a>) {reqTag}</Label>\r\n                                <Input\r\n                                    id=\"exampleFormControlSelect3\"\r\n                                    type=\"select\"\r\n                                    required\r\n                                    onChange={e => setcovidRiskId(e.target.value)}>\r\n                                    <option hidden value=\"\">Seleccione...</option>\r\n                                    {casos.map(condicion => (<option key={condicion.covid19_risk_id}\r\n                                                                     value={condicion.covid19_risk_id}>{condicion.covid_risk}</option>))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n\r\n                                <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    {next && <Redirect to={{\r\n                        pathname: \"/admin/informed-consent\",\r\n                        state: {\r\n                            id: location.state.id,\r\n                            run: location.state.run,\r\n                            name: location.state.name,\r\n                            apellido: location.state.apellido\r\n                        }\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CovidRisk\r\n","import React, { useState } from 'react'\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label} from 'reactstrap'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport { Redirect } from 'react-router-dom';\r\nimport useList from 'hooks/useList';\r\n\r\n\r\nconst SociodemographicData = ({location}) => {\r\n    const defaultSocio = {occupation: \"\", birth_commune: \"\", prevision_id: 1, marital_status_id: 1, native_origin_id: 1, educational_level_id: 1, lives_with_id: 1}\r\n    const [socio, setSocio] = useState(defaultSocio);\r\n    const [next, setNext]=useState(false)\r\n\r\n    const previsions = useList(\"list/prevision\");\r\n    const maritalStatus = useList(\"list/marital-status\");  \r\n    const nativeOrigins = useList(\"list/native-origin\");  \r\n    const educationLevels = useList(\"list/education-level\");  \r\n    const livesWith = useList(\"list/lives-with\");\r\n    \r\n    const handleInputChange = e => {\r\n        setSocio({\r\n            ...socio,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    \r\n    const addSocialdemographicDataToPerson = async e => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"person/sociodemographic-data\",\r\n            {\r\n                personId :location.state.id,\r\n                occupation: socio.occupation,\r\n                previsionId: socio.prevision_id,\r\n                maritalStatusId: socio.marital_status_id,\r\n                birthCommune: socio.birth_commune,\r\n                nativeOriginId: socio.native_origin_id,\r\n                educationalLevelId: socio.educational_level_id,\r\n                livesWithId: socio.lives_with_id\r\n            }\r\n        );\r\n\r\n        if (!res.data.error){\r\n            setNext(true);\r\n        };  \r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1> Datos Sociodemográficos</h1>\r\n                    <Form onSubmit={addSocialdemographicDataToPerson} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Ocupación</Label>\r\n                                <Input\r\n                                    placeholder=\"Trabajador Social\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    name=\"occupation\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Previsión</Label>\r\n                                <Input \r\n                                    id=\"exampleFormControlSelect3\" \r\n                                    type=\"select\" \r\n                                    name=\"prevision_id\"\r\n                                    onChange={e => handleInputChange(e)}>\r\n                                        {previsions.map(e=> (<option key={e.prevision_id} value={e.prevision_id}>{e.name}</option>))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Estado conyugal</Label>\r\n                                <Input \r\n                                    id=\"exampleFormControlSelect3\" \r\n                                    type=\"select\" \r\n                                    name=\"marital_status_id\"\r\n                                    onChange={e => handleInputChange(e)}>\r\n                                        {maritalStatus.map(e=> (<option key={e.marital_status_id} value={e.marital_status_id}>{e.name}</option>))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Comuna de nacimiento</Label>\r\n                                <Input\r\n                                    placeholder=\"Temuco\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    name=\"birth_commune\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Pueblo Originario</Label>\r\n                                <Input \r\n                                    id=\"exampleFormControlSelect3\" \r\n                                    type=\"select\" \r\n                                    name=\"native_origin_id\"\r\n                                    onChange={e => handleInputChange(e)}>\r\n                                        {nativeOrigins.map(e=> (<option key={e.native_origin_id} value={e.native_origin_id}>{e.name}</option>))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Nivel educacional</Label>\r\n                                <Input \r\n                                    id=\"exampleFormControlSelect3\" \r\n                                    type=\"select\" \r\n                                    name=\"educational_level_id\"\r\n                                    onChange={e => handleInputChange(e)}>\r\n                                        {educationLevels.map(e=> (<option key={e.educational_level_id} value={e.educational_level_id}>{e.name}</option>))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Red familiar</Label>\r\n                                <Input \r\n                                    id=\"exampleFormControlSelect3\" \r\n                                    type=\"select\" \r\n                                    name=\"lives_with_id\"\r\n                                    onChange={e => handleInputChange(e)}>\r\n                                        {livesWith.map(e=> (<option key={e.lives_with_id} value={e.lives_with_id}>{e.name}</option>))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                            \r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                            \r\n                              <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n                            \r\n                            </Col>\r\n                           \r\n                        </FormGroup>\r\n                    </Form>\r\n                    { next && <Redirect to={{\r\n                    pathname: \"/admin/consultation-appointment\",\r\n                    state: { id: location.state.id, run: location.state.run, name: location.state.name, apellido : location.state.apellido, ingresado: true} \r\n                    }} /> }\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SociodemographicData\r\n","import React, {useState} from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label, Alert\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\nimport useList from 'hooks/useList';\r\n\r\nconst CovidRisk = ({location}) => {\r\n    const [covidRiskId, setcovidRiskId] = useState(1)\r\n    const [temperature, setTemperature] = useState()\r\n    const casos = useList(\"list/covid-risk\")\r\n    const [next, setNext] = useState(false)\r\n    const [valor, setValor] = useState(0)\r\n\r\n    const addCovidRisk = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"person/trigae-covid19/update\",\r\n            {\r\n                personId: location.state.id,\r\n                covidRiskId: covidRiskId,\r\n                temperatura: temperature\r\n            }\r\n        )\r\n        if (!res.data.error)\r\n            setNext(true)\r\n\r\n    }\r\n\r\n    const reqTag = <span style={{color: \"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Riesgo Covid\r\n                    </h1>\r\n                    <h5 style={{color: \"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n                    <Form onSubmit={addCovidRisk} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\"\r\n                                    >Encuesta Caso Covid (\r\n                                        <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSf7GsvK4AVlSlzQ8dFXcouJeNhKWzbHkjU78WTD7p92gNUpYg/viewform\">\r\n                                            ver</a>) {reqTag}</Label>\r\n                                <Input\r\n                                    id=\"exampleFormControlSelect3\"\r\n                                    type=\"select\"\r\n                                    required\r\n                                    onChange={e => setcovidRiskId(e.target.value)}>\r\n                                    <option hidden value=\"\">Seleccione...</option>\r\n                                    {casos.map(condicion => (<option key={condicion.covid19_risk_id}\r\n                                                                     value={condicion.covid19_risk_id}>{condicion.covid_risk}</option>))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmslFor=\"example-text-input\"\r\n                                >\r\n                                    TEMPERATURA {reqTag}\r\n                                </Label>\r\n                                <Input\r\n                                    placeholder=\"3\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    pattern=\"{0-9}*\"\r\n                                    min=\"30\"\r\n                                    max=\"50\"\r\n                                    step=\".1\"\r\n                                    onChange={(e) => {\r\n                                        setTemperature(e.target.value)\r\n                                    }}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        {temperature && <div>\r\n                            {temperature <= 35 && <Alert color=\"primary\">\r\n                                <strong>Hipotermia!</strong>\r\n                            </Alert>}\r\n                            {temperature < 37.8 && temperature > 35 && <Alert color=\"success\">\r\n                                Temperatura normal\r\n                            </Alert>}\r\n                            {temperature >= 37.8 && <Alert color=\"danger\">\r\n                                <strong>Derivar a hospital</strong>\r\n                            </Alert>}\r\n                        </div>}\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n\r\n                                <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n\r\n\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    {next && <Redirect to={{\r\n                        pathname: \"/admin/informed-consent-reception\",\r\n                        state: {\r\n                            id: location.state.id,\r\n                            run: location.state.run,\r\n                            name: location.state.name,\r\n                            apellido: location.state.apellido\r\n                        }\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CovidRisk\r\n","import React, {useState, useEffect} from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {getList} from 'helpers/ListHelper';\r\n\r\nconst InformedConsent = ({location}) => {\r\n    const [file, setFile] = useState()\r\n    const [next, setNext] = useState(false)\r\n\r\n    async function load(fx, route) {\r\n        const response = await getList(route)\r\n        if (response.status === 200) {\r\n            fx(response.data.result)\r\n        }\r\n    }\r\n\r\n    const enviar = async (e) => {\r\n        e.preventDefault()\r\n        if (file !== undefined) await archivo()\r\n        setNext(true)\r\n    }\r\n\r\n    const archivo = () => {\r\n        const f = new FormData();\r\n\r\n        f.append(\"file\", file[0])\r\n\r\n        Axios.post(\"file/\" + location.state.run, f)\r\n            .then(response => {\r\n                console.log(response)\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n\r\n    }\r\n    // useEffect(() => { \r\n    //     load(setAcceptedConcent, \"list/consent\")\r\n    // }, [])\r\n\r\n\r\n    // const addInformedConsent = async (e) => {\r\n    //     e.preventDefault()\r\n    //     const res = await Axios.post(process.env.REACT_APP_API_URL + \"person/informed-consent\",\r\n    //       { \r\n    //         personId : location.state.id,\r\n    //         informed_consent_answer_id: acceptedConcentId,\r\n    //         observations: observations,\r\n    //         consentRead:consentRead\r\n    //       }\r\n    //     )\r\n    //     if (!res.data.error)\r\n    //      setNext(true) \r\n    //      \r\n\r\n    //   }\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Consentimiento Informado\r\n                    </h1>\r\n                    <Form onSubmit={enviar} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <b>Por favor, lea con detención el consentimiento informado{\" \"}\r\n                                <a href=\"https://drive.google.com/drive/u/4/folders/1Tg7sQlE7y9l4TqlJ3dXc7cY807qXKf5C\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    disponible aquí.</a></b>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"6\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmslFor=\"example-text-input\"\r\n                                >\r\n                                    Subir archivo PDF\r\n                                </Label><br/>\r\n                                <input type=\"file\" accept=\".pdf\" onChange={(e) => setFile(e.target.files)}\r\n                                       /><br/><br/>\r\n                                       \r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmslFor=\"example-text-input\"\r\n                                >\r\n                                    Aceptación\r\n                                </Label>\r\n                                <div><label className=\"custom-toggle custom-toggle-warning mr-1\">\r\n                                    <Input type=\"checkbox\" onChange={(e) => {\r\n                                    }}/>\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label></div>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n\r\n                            </Col>\r\n                            <Col md=\"0,5\">\r\n                                <Button color=\"primary\" type=\"submit\">Guardar</Button>\r\n                            </Col>\r\n\r\n                        </FormGroup>\r\n\r\n                    </Form>\r\n                    {next && <Redirect to={{\r\n                        pathname: \"/admin/list-patient-anamnesis\",\r\n                        state: {id: location.state.id, run: location.state.run, name: location.state.name, reception:true}\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InformedConsent\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label} from 'reactstrap'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {getList} from 'helpers/ListHelper';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst AnamnesisGeneral = ({location}) => {\r\n\r\n    const addAnamnesis = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"general-anamnesis/\",\r\n            {\r\n\r\n                personId: location.state.id,\r\n                allergies: selData.alergias,\r\n                otherDisease: selData.otros_observaciones,\r\n                underTreatment: selData.bajo_tratamiento,\r\n                previousSurgeries: selData.cirugias,\r\n                medicineDose: selData.farmacos,\r\n                medicineAllergies: selData.alergias_farmacos,\r\n                radioChemoTherapy: selData.radioterapia,\r\n                selectedDiseases: selDiseases,\r\n                consult_motive: selData.motivo_consulta,\r\n                consult_motive_history: selData.motivo_consulta_historial,\r\n                medic_alert: selData.alerta_medica\r\n            })\r\n        if (!res.data.error)\r\n            setNext(true)\r\n\r\n\r\n    };\r\n    const [prmDiseases, setPrmDiseases] = useState([]);\r\n    const [selDiseases, setSelDiseases] = useState([]);\r\n    const [selData, setSelData] = useState({bajo_tratamiento: false});\r\n    const [next, setNext] = useState(false)\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(setPrmDiseases, \"list/diseases\")\r\n    }, [])\r\n\r\n    const handleInputChangeCheck = e => {\r\n        var ind = selDiseases.indexOf(e.target.id)\r\n        if (selDiseases.includes(e.target.id)) {\r\n            selDiseases.splice(ind, 1)\r\n            console.log(selDiseases)\r\n        } else {\r\n            setSelDiseases(selDiseases.concat(e.target.id))\r\n        }\r\n    };\r\n\r\n    const handleInputChange = e => {\r\n        console.log(e.target.text)\r\n        setSelData({\r\n            ...selData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputChangeYN = e => {\r\n        setSelData({\r\n            ...selData,\r\n            [e.target.name]: !selData.bajo_tratamiento\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(selDiseases)\r\n        console.log(selData)\r\n    })\r\n\r\n    const reqTag = <span style={{color: \"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>Paciente</h1>\r\n                    <Form onSubmit={addAnamnesis} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Motivo\r\n                                    Consulta</Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    name=\"motivo_consulta\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                    // required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Historial del\r\n                                    motivo de Consulta</Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    name=\"motivo_consulta_historial\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                    //required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Alerta médica\r\n                                    especial y comentarios relevantes sobre el paciente</Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    name=\"alerta_medica\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                    //required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"exampleFormControlSelect3\">Antecedentes\r\n                                    mórbidos personales</Label>\r\n                                {prmDiseases.map(disease => (\r\n                                    <div key={disease.name}\r\n                                         className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                        <Input\r\n                                            className=\"custom-control-input\"\r\n                                            id={disease.disease_id}\r\n                                            type=\"checkbox\"\r\n                                            name={disease.name}\r\n                                            onChange={e => {\r\n                                                handleInputChangeCheck(e)\r\n                                            }}\r\n                                        />\r\n                                        <label className=\"custom-control-label\"\r\n                                               htmlFor={disease.disease_id}>{disease.name}</label>\r\n                                    </div>\r\n                                ))}\r\n                                <div>\r\n                                    <Input\r\n                                        placeholder=\"Otros/Observaciones\"\r\n                                        defaultValue=\"\"\r\n                                        type=\"textarea\"\r\n                                        name=\"otros_observaciones\" //Nose a que campo de la base de datos se refiere\r\n                                        onChange={e => {\r\n                                            handleInputChange(e)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Está bajo\r\n                                    tratamiento</Label>\r\n                                <div><label className=\"custom-toggle custom-toggle-warning mr-1\">\r\n                                    <Input\r\n                                        type=\"checkbox\"\r\n                                        name=\"bajo_tratamiento\" //Nose a que campo de la base de datos se refiere\r\n                                        onChange={e => {\r\n                                            handleInputChangeYN(e)\r\n                                        }}/>\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label></div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Alergias </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"alergias\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Cirugías previas/\r\n                                    Hospitalización/ </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"cirugias\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Fármacos y\r\n                                    Posología </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"farmacos\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Alergia a Fármacos\r\n                                    (especificar cuál) </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"alergias_farmacos\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" htmlFor=\"example-text-input\">Radioterapia /\r\n                                    Quimioterapia </Label>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    //required\r\n                                    name=\"radioterapia\" //Nose a que campo de la base de datos se refiere\r\n                                    onChange={e => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n\r\n                                <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    {next && <Redirect to={{\r\n                        pathname: \"/admin/list-patient-anamnesis\",\r\n                        state: {\r\n                            id: location.state.id,\r\n                            run: location.state.run,\r\n                            name: location.state.name,\r\n                            apellido: location.state.apellido,\r\n                            anamnesisGeneral:true\r\n                        }\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AnamnesisGeneral","import React, { useState } from 'react'\r\nimport {\r\n  Button, Col, Container, Form, FormGroup, Input, Row, InputGroup,\r\n  InputGroupText, InputGroupAddon, Card, CardBody, Label, Progress\r\n} from 'reactstrap'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst AnamnesisMedicoGeriatra = ({location}) => {\r\n  const [anamId, setAnamId] =useState(0)\r\n  const [datos, setDatos] = useState({\r\n    velocidadMarcha: null,\r\n    peso: null,\r\n    altura: null,\r\n    imc: null,\r\n    temperatura: null,\r\n    sistolic: null,\r\n    diastolic: null,\r\n    frecCardiaca: null,\r\n    saturacionO2: null,\r\n    fuerzaMuscular: '1',\r\n    glicemia: null,\r\n    extraInfo:null,\r\n    folsteinTest: null,\r\n    pfeifferTest: null,\r\n    yesavageTest: null\r\n  });\r\n  const handleInputChange = (e) => {\r\n    setDatos({\r\n      ...datos,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  const [next, setNext] = useState(false)\r\n  \r\n\r\n  const calcIMC = () => {\r\n    let w = Number(datos.peso);\r\n    let hSq = Number(datos.altura) ** 2;\r\n    return w / hSq;\r\n  }\r\n\r\n \r\n  const addAMG = async e => {\r\n    \r\n    e.preventDefault();\r\n    \r\n    const res = await Axios.post( \"geriatrical-medical-anamnesis\", {\r\n      personId: location.state.id,\r\n      walkingSpeed: Number(datos.velocidadMarcha),\r\n      weight: Number(datos.peso),\r\n      height: Number(datos.altura),\r\n      bmi: calcIMC(),\r\n      bloodPressure: datos.sistolic + \"/\" + datos.diastolic,\r\n      temperature: Number(datos.temperatura),\r\n      heartRate: Number(datos.frecCardiaca),\r\n      oxygenSaturation: Number(datos.saturacionO2),\r\n      muscularStrength: datos.fuerzaMuscular,\r\n      glycemia: Number(datos.glicemia),\r\n      extraInfo: datos.extraInfo\r\n    });\r\n    if (res.data.result) {\r\n      \r\n      setAnamId(res.data.result.insertId)\r\n      setNext(true)\r\n    };\r\n\r\n    // console.log({\r\n    //     person_id: location.state.id,\r\n    //     velocidadMarcha: Number(datos.velocidadMarcha),\r\n    //     peso: Number(datos.peso),\r\n    //     altura: Number(datos.altura),\r\n    //     imc: calcIMC(),\r\n    //     temperatura: Number(datos.temperatura),\r\n    //     presionArterial: datos.sistolic + \"/\" + datos.diastolic,\r\n    //     frecCardiaca: Number(datos.frecCardiaca),\r\n    //     saturacionO2: Number(datos.saturacionO2),\r\n    //     fuerzaMuscular: datos.fuerzaMuscular,\r\n    //     glicemia: Number(datos.glicemia),\r\n    //     folsteinTest: Number(datos.folsteinTest),\r\n    //     pfeifferTest: Number(datos.pfeifferTest),\r\n    //     yesavageTest: Number(datos.yesavageTest)\r\n    //   })\r\n  }\r\n\r\n  const reqTag = <span style={{color: \"#DC3545\"}}>*</span>\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <CardBody>\r\n        <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n          <h1>\r\n            Anamnesis Médico - Geriatra\r\n          </h1>\r\n          <h5 className=\"heading-small\" >Parametros Fisicos</h5>\r\n          <Form role=\"form\" onSubmit={addAMG}>\r\n            <FormGroup className=\"row\">\r\n              <Col md=\"4\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Velocidad de marcha \r\n              </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={3}\r\n                    step=\"0.1\"\r\n                    name=\"velocidadMarcha\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText>m/s</InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Peso \r\n              </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={200}\r\n                    step=\"1\"\r\n                    name=\"peso\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText>kg</InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Altura \r\n              </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={0.5}\r\n                    max={3}\r\n                    step=\"0.01\"\r\n                    name=\"altura\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText>m</InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Col md=\"4\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Presión Arterial (Sistólica / Diastólica) \r\n              </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={80}\r\n                    max={250}\r\n                    step=\"1\"\r\n                    name=\"sistolic\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText>/</InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={50}\r\n                    max={200}\r\n                    step=\"1\"\r\n                    name=\"diastolic\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText>mmHg</InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Temperatura \r\n              </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={15}\r\n                    max={50}\r\n                    step=\"1\"\r\n                    name=\"temperatura\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText>ºC</InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Frecuencia Cardíaca \r\n              </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={40}\r\n                    max={220}\r\n                    step=\"1\"\r\n                    name=\"frecCardiaca\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText>lat/m</InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Col md=\"4\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Saturación de Oxígeno \r\n              </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={60}\r\n                    max={100}\r\n                    step=\"1\"\r\n                    name=\"saturacionO2\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText>%SpO2</InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Fuerza Muscular \r\n              </Label>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>Grado</InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"fuerzaMuscular\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4-</option>\r\n                    <option>4</option>\r\n                    <option>4+</option>\r\n                    <option>5</option>\r\n                  </Input>\r\n                </InputGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Glicemia \r\n              </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={50}\r\n                    max={150}\r\n                    step=\"1\"\r\n                    name=\"glicemia\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    //required\r\n                  />\r\n                  <InputGroupAddon addonType=\"append\">\r\n                    <InputGroupText>mg/dl</InputGroupText>\r\n                  </InputGroupAddon>\r\n                </InputGroup>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup className=\"row\">\r\n              <Col md=\"8\">\r\n              <Label\r\n                className=\"form-control-label\"\r\n                htmlFor=\"example-text-input\"\r\n              >\r\n                Información Adicional\r\n              </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"extraInfo\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n            </FormGroup>\r\n            \r\n            <FormGroup className=\"row\">\r\n              <Col md=\"10\">\r\n                \r\n              </Col>\r\n              <Col md=\"2\">\r\n                <Button type=\"submit\"  color=\"primary\">Guardar</Button>\r\n              </Col>\r\n              {next && <Redirect to={{\r\n                        pathname: \"/admin/evaluations\",\r\n                        state: {id: location.state.id, run: location.state.run, name: location.state.name, apellido:location.state.apellido,  anamId: anamId}\r\n                    }}/>}\r\n            </FormGroup>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AnamnesisMedicoGeriatra;","import React, {useState} from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Card, CardHeader, CardBody, Label, Alert\r\n} from 'reactstrap'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\nimport useList from 'hooks/useList';\r\n\r\nconst CovidRisk = ({location}) => {\r\n\r\n    const casos = useList(\"list/covid-risk\")\r\n    const [next, setNext] = useState(false)\r\n    const [datos, setDatos] = useState({\r\n        folstein_value: null,\r\n        pfeiffer_value: null,\r\n        yesavage_value: null,\r\n    });\r\n\r\n    const [boton, setBoton] = useState(0)\r\n\r\n    const [nombreImagen, setNombreImagen] = useState(\"\")\r\n    const [file, setFile] = useState()\r\n    const [fotos, setFotos] = useState([])\r\n\r\n\r\n    const ruta = \"static/images_anam_medico/\" + location.state.run\r\n\r\n    const addPhoto = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"photo/medico_geriatra\",\r\n            {\r\n\r\n                anamnId: location.state.anamId,\r\n                nombreImagen: nombreImagen,\r\n                ruta: ruta,\r\n            })\r\n\r\n\r\n    }\r\n\r\n    const archivo = (e) => {\r\n        const f = new FormData();\r\n\r\n        f.append(\"file\", file[0], nombreImagen)\r\n        e.preventDefault()\r\n        Axios.post(\"file/img_medico/\" + location.state.run, f)\r\n            .then(response => {\r\n                console.log(response)\r\n\r\n            }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (boton === 1) {\r\n            addEvaluations(e);\r\n        }\r\n        if (boton === 2) {\r\n            enviar(e);\r\n            addPhoto(e);\r\n            obtainPhoto(e);\r\n        }\r\n    }\r\n    const enviar = async (e) => {\r\n\r\n        await archivo(e)\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(datos)\r\n    }\r\n\r\n    const addEvaluations = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"geriatrical-medical-anamnesis/evaluations\",\r\n            {\r\n                anamnId: location.state.anamId,\r\n                folstein_value: datos.folstein_value,\r\n                pfeiffer_value: datos.pfeiffer_value,\r\n                yesavage_value: datos.yesavage_value,\r\n            })\r\n        if (!res.data.error)\r\n            setNext(true)\r\n    }\r\n\r\n\r\n    const obtainPhoto = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"photo/medico_geriatra/obtain\",\r\n            {\r\n                anamnId: location.state.anamId,\r\n            })\r\n        if (!res.data.error)\r\n            setFotos(res.data.result)\r\n        console.log(res.data.result)\r\n\r\n    }\r\n\r\n    const url = (array) => {\r\n\r\n\r\n    }\r\n\r\n    const reqTag = <span style={{color: \"#DC3545\"}}>*</span>\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Anamnesis Médico - Geriatra\r\n                    </h1>\r\n                    \r\n                    <h5 className=\"heading-small\">Evaluaciones Cognitivas</h5>\r\n\r\n                    <Form onSubmit={onSubmit} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"4\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Cuestionario Minimental de Folstein (\r\n                                    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScRtpK-rWTYO1W2BrPXahVfY_YZ5aQ8Hf3NlrKnWvt4UAV8JQ/viewform\"\r\n                                       target=\"_blank\">\r\n                                        ver</a>) \r\n                                </Label>\r\n                                <Input\r\n                                    placeholder=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    name=\"folstein_value\"\r\n                                    type=\"number\"\r\n                                    onChange={(e) => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                    \r\n                                />\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Test de Pfeiffer (\r\n                                    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScOfJZpOKaTXd2OQ6RkgpvhByXY51RzeNtlH24rkiQJ1DCZiw/viewform\"\r\n                                       target=\"_blank\">\r\n                                        ver</a>) \r\n                                </Label>\r\n                                <Input\r\n                                    placeholder=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    name=\"pfeiffer_value\"\r\n                                    type=\"number\"\r\n                                    onChange={(e) => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                    \r\n                                />\r\n                            </Col>\r\n                            \r\n                        </FormGroup>\r\n                        <h5 className=\"heading-small\">Evaluación Anímica</h5>\r\n\r\n                        <FormGroup className=\"row\">\r\n                        <Col md=\"4\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Cuestionario de Yesavage (\r\n                                    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScmoS5sWNzDJG9k7ssG4D4M_2jCT8IqplAQ8beLLPZNqfPSjg/viewform\"\r\n                                       target=\"_blank\">\r\n                                        ver</a>) \r\n                                </Label>\r\n                                <Input\r\n                                    placeholder=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    name=\"yesavage_value\"\r\n                                    type=\"number\"\r\n                                    onChange={(e) => {\r\n                                        handleInputChange(e)\r\n                                    }}\r\n                                    \r\n                                />\r\n                            </Col> \r\n                        </FormGroup>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <h3>Ingreso de imagenes</h3>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Form onSubmit={enviar} role=\"form\">\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col md=\"4\">\r\n                                            <Label\r\n                                                className=\"form-control-label\"\r\n                                            >\r\n                                                Nombre Imagen\r\n                                            </Label>\r\n                                            <Input\r\n                                                defaultValue=\"\"\r\n                                                id=\"example-text-input\"\r\n                                                type=\"text\"\r\n                                                onChange={(e) => {\r\n                                                    setNombreImagen(e.target.value + \".jpg\")\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col md=\"4\">\r\n                                            <input type=\"file\" accept=\"image/*\"\r\n                                                   onChange={(e) => setFile(e.target.files)}\r\n                                                   required/>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n\r\n                                        {fotos.map((foto, i) => (\r\n                                            <tr><a rel=\"noopener noreferrer\" target=\"_blank\"\r\n                                                   href={`${process.env.REACT_APP_API_URL}` + `${foto.url}` + \"/\" + `${foto.foto_nombre}`}> {foto.foto_nombre}</a>\r\n                                            </tr>\r\n                                        ))}\r\n\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col md=\"10\">\r\n                                            <Button type=\"submit\" onClick={() => (setBoton(2))}\r\n                                                    color=\"primary\">Guardar</Button>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Form>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                               \r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                                <Button type=\"submit\" onClick={() => (setBoton(1))} color=\"primary\">Guardar</Button>\r\n                            </Col>\r\n                            {next && <Redirect to={{\r\n                                pathname: \"/admin/list-patient-anamnesis\",\r\n                                state: {id: location.state.id, run: location.state.run, name: location.state.name, medicalAnamnesis:true}\r\n                            }}/>}\r\n                        </FormGroup>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CovidRisk\r\n","import React, { useState,useEffect } from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Row, InputGroup,\r\n    InputGroupText, InputGroupAddon, Card, CardBody, Label, Progress\r\n} from 'reactstrap'\r\nimport classnames from \"classnames\";\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getList } from 'helpers/ListHelper';\r\nconst InformedConsent = ({location}) => {\r\n    const [consentRead, setConsentRead] = useState(true)   \r\n    const [next, setNext]=useState(false)\r\n    const [observations, setObservations]=useState(\"\")\r\n\r\n    \r\n    const [acceptedConcentId, setAcceptedConcentId] = useState(1)\r\n    const [acceptedConcents, setAcceptedConcents] = useState([]);\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n    useEffect(() => { \r\n        getData(setAcceptedConcents, \"list/consent\")\r\n    }, [])\r\n\r\n\r\n    const addInformedConsent = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"person/informed-consent\",\r\n          { \r\n            personId : location.state.id,\r\n            informed_consent_answer_id: acceptedConcentId,\r\n            observations: observations,\r\n            consentRead:consentRead\r\n          }\r\n        )\r\n        if (!res.data.error)\r\n         setNext(true) \r\n        \r\n        \r\n      }\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Consentimiento Informado\r\n                    </h1>\r\n                    <Form onSubmit={addInformedConsent} role=\"form\">\r\n                    <FormGroup className=\"row\">\r\n                            \r\n                            <Col md=\"10\">\r\n                                <b>Por favor, lea con detención el consentimiento informado{\" \"}\r\n                                <a href=\"https://drive.google.com/drive/u/4/folders/1Tg7sQlE7y9l4TqlJ3dXc7cY807qXKf5C\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    disponible aquí.</a></b>\r\n                            </Col>                 \r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                \r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    ¿Tomó conocimiento del consentimiento?\r\n                                </Label>\r\n                                <div><label className=\"custom-toggle custom-toggle-success mr-1\">\r\n                                    <input type=\"checkbox\" checked={consentRead} onChange={(e) => setConsentRead(!consentRead)} />\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label></div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    ¿Acepta el consentimiento?\r\n                                </Label>\r\n                                <Input id=\"exampleFormControlSelect3\" type=\"select\" onChange={(e) => { setAcceptedConcentId(e.target.value) }}>\r\n                                    {acceptedConcents.map(consent=> (\r\n                                        <option key={consent.informed_consent_answer_id} value={consent.informed_consent_answer_id}>{consent.answer}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Observaciones\r\n                                </Label>\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    onChange={(e) => { setObservations(e.target.value) }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                       \r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                            \r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                            \r\n                              <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n                            \r\n                              \r\n                            </Col>\r\n                        </FormGroup>\r\n                        \r\n                    </Form>\r\n                    { next && <Redirect to={{\r\n                    pathname: \"/admin/sociodemographic-data\",\r\n                    state: { id: location.state.id, run: location.state.run, name: location.state.name, apellido : location.state.apellido} \r\n                    }} /> }\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InformedConsent\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label\r\n} from 'reactstrap'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport { Link , Redirect} from 'react-router-dom';\r\nconst PatientCarer = () => {\r\n\r\n  const [createdPersonId, setCreatedPersonId] = useState(0)\r\n   const [toggle, setToggle] = useState(false)\r\n   const [next, setNext]=useState(false)\r\n   const[datos, setDatos]=useState({\r\n     carerNames:\"\",\r\n     carerPaternalLastname:\"\",\r\n     carerMaternalLastname:\"\",\r\n     carerPhone:\"\",\r\n     carerCellPhone:\"\",\r\n     carerEmail:\"\",\r\n     contador:\"\",\r\n   })\r\n  const handleInputChange = (e) =>{\r\n     setDatos({\r\n       ...datos,\r\n       [e.target.name]: e.target.value\r\n     })\r\n      console.log(datos)\r\n  }\r\n\r\n  const addPerson = async (e) => {\r\n    e.preventDefault()\r\n    const res = await Axios.post(\"person\",\r\n      {\r\n        run: datos.run + \"-\" + datos.verificationNumber,\r\n        names: datos.names,\r\n        lastnames: datos.paternalLastname + \" \" + datos.maternalLastname,\r\n        birthdate: datos.birthDate,\r\n        phone: datos.phone,\r\n        cellphone: datos.cellphone,\r\n        email: datos.email\r\n      }\r\n    )\r\n    console.log(res)\r\n    if (!res.data.error)\r\n      \r\n      await setCreatedPersonId(res.data.result[2].insertId)\r\n      await setDatos({\r\n        \r\n        ...datos,\r\n        \r\n      })\r\n      await setNext(true)\r\n      \r\n  }\r\n\r\n  const addCarer = async (e) => {\r\n    e.preventDefault()\r\n    const res = await Axios.post(\"carer/\",\r\n      {\r\n        personId: datos.createdPersonId,\r\n        names: datos.carerNames,\r\n        lastnames: datos.carerPaternalLastname + \" \" + datos.carerMaternalLastname,\r\n        phone: datos.carerPhone,\r\n        cellphone: datos.carerCellPhone,\r\n        email: datos.carerEmail\r\n      })\r\n  }\r\n  const hoy = new Date()\r\n\r\n  const reqTag = <span style={{color:\"#DC3545\"}}>*</span>\r\n\r\n  return (\r\n    <Container>\r\n         \r\n      \r\n        <Card>\r\n          <CardBody>\r\n            <h6 className=\"heading-small text-muted mb-4\">\r\n              Cuidador\r\n                        </h6>\r\n            <h5 style={{color:\"#DC3545\"}}>* Existen campos obligatorios</h5>\r\n            <Form onSubmit={addCarer} role=\"form\">\r\n              <FormGroup className=\"row\">\r\n                <Col>\r\n                  <Label\r\n                    className=\"form-control-label\"\r\n                    htmlFor=\"example-text-input\"\r\n                  >\r\n                    Nombres {reqTag}\r\n                            </Label>\r\n                  <Input\r\n                    placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                    id=\"example-text-input\"\r\n                    name=\"carerNames\"\r\n                    type=\"text\"\r\n                    pattern=\"^[ña-zÑA-Z ]*$\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    required\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <Col>\r\n                  <Label\r\n                    className=\"form-control-label\"\r\n                    htmlFor=\"example-text-input\"\r\n                  >\r\n                    Apellido Paterno {reqTag}\r\n                            </Label>\r\n                  <Input\r\n                    placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                    id=\"example-text-input\"\r\n                    name=\"carerPaternalLastnames\"\r\n                    type=\"text\"\r\n                    pattern=\"^[ÑA-Z ña-z]*$\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    required\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <Col>\r\n                  <Label\r\n                    className=\"form-control-label\"\r\n                    htmlFor=\"example-text-input\"\r\n                  >\r\n                    Apellido Materno {reqTag}\r\n                            </Label>\r\n                  <Input\r\n                    placeholder=\"Debe colocar primera letra en Mayúscula\"\r\n                    id=\"example-text-input\"\r\n                    name=\"carerMaternalLastncame\"\r\n                    type=\"text\"\r\n                    pattern=\"^[ÑA-Z ña-z]*$\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    required\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <Col>\r\n                  <Label\r\n                    className=\"form-control-label\"\r\n                    htmlFor=\"example-text-input\"\r\n                  >\r\n                    Teléfono fijo\r\n                            </Label>\r\n                  <Input\r\n                    placeholder=\"+56 9 2299 7066\"\r\n                    name=\"carerPhone\"\r\n                    id=\"example-text-input\"\r\n                    type=\"tel\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <Col>\r\n                  <Label\r\n                    className=\"form-control-label\"\r\n                    htmlFor=\"example-text-input\"\r\n                  >\r\n                    Teléfono celular {reqTag}\r\n                            </Label>\r\n                  <Input\r\n                    placeholder=\"+56 9 2299 7066\"\r\n                    id=\"example-text-input\"\r\n                    name=\"carerCellPhone\"\r\n                    type=\"tel\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                    required\r\n\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <Col>\r\n                  <Label\r\n                    className=\"form-control-label\"\r\n                    htmlFor=\"example-text-input\"\r\n                  >\r\n                    Email\r\n                            </Label>\r\n                  <Input\r\n                    placeholder=\"correo@dominio.cl\"\r\n                    id=\"example-text-input\"\r\n                    name=\"carerEmail\"\r\n                    type=\"email\"\r\n                    onChange={(e) => { handleInputChange(e) }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup className=\"row\">\r\n                <Col md=\"10\"></Col>\r\n                <Col md=\"2\">\r\n                  <Button type=\"submit\" color=\"primary\">Registrar Cuidador</Button>\r\n                </Col>\r\n              </FormGroup>\r\n            </Form>\r\n            { next && <Redirect to={{\r\n                pathname: \"/admin/consultation-motive\",\r\n                state: { id: createdPersonId, run: datos.run + \"-\" + datos.verificationNumber, name: datos.names, apellido : datos.paternalLastname} \r\n              }} /> }\r\n          </CardBody>\r\n        </Card>\r\n      \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PatientCarer\r\n","import Axios from '../../../helpers/axiosConfig';\r\nimport AuthHelper from 'helpers/AuthHelper';\r\nimport {getList} from 'helpers/ListHelper';\r\nimport useList from 'hooks/useList';\r\nimport React, {useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Row, InputGroup,\r\n    InputGroupText, InputGroupAddon, Card, CardBody, Table,\r\n    UncontrolledTooltip, UncontrolledPopover, PopoverBody,\r\n    CardHeader\r\n} from 'reactstrap'\r\nimport Label from 'reactstrap/lib/Label';\r\n\r\nconst FileView = props => {\r\n    const [fileInfo, setFileInfo] = useState();\r\n\r\n    useEffect(() => {\r\n        fileById()\r\n    }, [])\r\n\r\n    const openFile = url => {\r\n        var win = window.open(process.env.REACT_APP_API_URL + \"static/\" + url, '_blank');\r\n        win.focus();\r\n    }\r\n\r\n    const fileById = async () => {\r\n        const res = await Axios.get(\"review/file/\" + props.id);\r\n        if (res.data.result?.length) {\r\n            setFileInfo(res.data.result[0])\r\n        }\r\n    }\r\n    return <div>{fileInfo && <Button outline color=\"info\" onClick={() => {\r\n        openFile(fileInfo.url)\r\n    }}>{fileInfo.name}</Button>}</div>\r\n}\r\n\r\nconst Reviews = props => {\r\n    const [revText, setRevText] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n    const reviewTypes = useList('review/types');\r\n    const [reviews, setReviews] = useState([]);\r\n    const [selectedFilter, setSelectedFilter] = useState(\"-1\");\r\n    const [rtId, setRtId] = useState(-1);\r\n    const [fileWillPost, setFileWillPost] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchReviews()\r\n    }, [])\r\n\r\n    const rut = props.rut\r\n\r\n    const fetchReviews = async () => {\r\n        const res = await getList(\"review/get/\" + props.id);\r\n        setReviews(res);\r\n    };\r\n\r\n    const handleFileChange = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const resetFile = () => {\r\n        setFile(null);\r\n    }\r\n\r\n    const postReview = (e) => {\r\n        e.preventDefault();\r\n        if (fileWillPost && file) {\r\n            withFile()\r\n        } else {\r\n            noFile()\r\n        }\r\n    }\r\n\r\n    const noFile = async () => {\r\n        const res = await Axios.post(\"review\", {\r\n            personId: props.id,/* Id del paciente en atención */\r\n            userId: AuthHelper.getUserId(),/* Id del usuario en sesión */\r\n            reviewTypeId: rtId,\r\n            description: revText\r\n        });\r\n        if (!res.data.error) {\r\n            fetchReviews();\r\n            setRevText(\"\");\r\n        }\r\n    }\r\n\r\n    const withFile = async () => {\r\n        const res = await Axios.post(\"review/file/\", {\r\n            personId: props.id,/* Id del paciente en atención */\r\n            userId: AuthHelper.getUserId(),/* Id del usuario en sesión */\r\n            reviewTypeId: rtId,\r\n            description: revText,\r\n            url: rut + \"/\" + file.name,\r\n            fileName: file.name\r\n        });\r\n        if (!res.data.error) {\r\n            const f = new FormData();\r\n            f.append(\"file\", file, file.name)\r\n            await Axios.post(\"file/review/\" + rut, f)\r\n                .then(response => {\r\n                    console.log(response)\r\n                    resetFile();\r\n                    setFileWillPost(false);\r\n                }).catch(error => {\r\n                console.log(error)\r\n            })\r\n            fetchReviews();\r\n            setRevText(\"\");\r\n        }\r\n    }\r\n\r\n    const reviewType = rTypeId => {\r\n        let rt = reviewTypes.filter(rt => rt.id === rTypeId);\r\n        return rt[0]?.name\r\n    }\r\n\r\n    const filterRevs = () => {\r\n        return selectedFilter === \"-1\" ? reviews : reviews.filter(rev => String(rev.review_type_id) === selectedFilter)\r\n    }\r\n\r\n    return ((!reviewTypes) ? <div></div> :\r\n        <div>\r\n            <strong>Filtros:{\"  \"}</strong>\r\n            <FormGroup check inline>\r\n                <Label check>\r\n                    <input type=\"radio\" value=\"-1\" checked={selectedFilter === \"-1\"}\r\n                                onChange={e => setSelectedFilter(e.target.value)}/> Todos\r\n                </Label>\r\n            </FormGroup>\r\n            {reviewTypes.map(rt => (\r\n            <FormGroup check inline key={rt.id}>\r\n                <Label check>\r\n                    <input type=\"radio\" value={rt.id} checked={selectedFilter == rt.id}\r\n                            onChange={e => setSelectedFilter(e.target.value)}/> {rt.name}\r\n                </Label>\r\n            </FormGroup>\r\n            ))}\r\n            <hr/>\r\n            <div\r\n                className=\"timeline timeline-one-side\"\r\n                data-timeline-axis-style=\"none\"\r\n                data-timeline-content=\"axis\"\r\n                style={{overflow: 'scroll', height: '450px'}}\r\n            >\r\n                {filterRevs().map(rev =>\r\n                    <div key={rev.review_id} className=\"timeline-block\">\r\n            <span className=\"timeline-step\">\r\n                <small className=\"text-muted font-weight-bold\" id=\"rev_date\">\r\n                    {rev.c_time}<br/>{rev.c_date}\r\n                </small>\r\n                <UncontrolledTooltip target=\"rev_date\">\r\n                    {rev.c_date}/{rev.c_year}\r\n                </UncontrolledTooltip>\r\n            </span>\r\n                        <div className=\"timeline-content\">\r\n                            <h5 className=\"mt-2 mb-0\">{rev.names} en {reviewType(rev.review_type_id)}</h5>\r\n                            <p className=\"text-sm mt-1 mb-0\">\r\n                                {rev.description}\r\n                            </p>\r\n                            {Boolean(rev.has_file) && <FileView id={rev.review_id}/>}\r\n                        </div>\r\n                    </div>)}\r\n            </div>\r\n            <Form onSubmit={postReview}>\r\n                {rtId == 4 && <div><br/>\r\n                    Revise la plantilla principal de recetas <a target=\"_blank\" without rel=\"noopener noreferrer\" href=\"https://drive.google.com/drive/u/4/folders/1QyKDDUkRrbq4DIaseKIuaoba9XraAA96\">aquí</a>\r\n                </div>}\r\n                <br/>\r\n                <FormGroup className=\"row\">\r\n                    <Label className=\"form-control-label pt-3\" md=\"2\"><b>Tipo de comentario</b></Label>\r\n                    <Col md=\"10\">\r\n                        <Input type=\"select\" onChange={e => {\r\n                            setRtId(e.target.value)\r\n                        }} required>\r\n                            <option hidden value={-1}>(Seleccione)</option>\r\n                            {reviewTypes.map(rt =>\r\n                                <option key={rt.id} value={rt.id}>{rt.name}</option>\r\n                            )}\r\n                        </Input>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup className=\"row\">\r\n                    <Label md=\"3\">Adjuntar archivo?{\" \"}\r\n                    <label className=\"custom-toggle custom-toggle-info mr-1\">\r\n                        <Input type=\"checkbox\" checked={fileWillPost} onChange={() => {\r\n                            setFileWillPost(!fileWillPost)\r\n                        }}/>\r\n                        <span\r\n                            className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"\r\n                        />\r\n                    </label></Label>\r\n                    <Col md=\"9\">\r\n                    {fileWillPost &&\r\n                    <InputGroup>\r\n                        <Input\r\n                            autoComplete=\"off\"\r\n                            type=\"text\"\r\n                            name=\"treatment_plan\"\r\n                            readOnly\r\n                            placeholder=\"Elija archivo\"\r\n                            value={file ? file.name : \"\"}\r\n                        />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                            {file ?  <Button \r\n                                type=\"button\" color=\"danger\" \r\n                                onClick={resetFile}>\r\n                                Deshacer\r\n                            </Button>:\r\n                            <Button \r\n                                type=\"button\" color=\"info\" \r\n                                onClick={() => {document.getElementById('rFile').click()}}>\r\n                                Elegir archivo\r\n                            </Button>}\r\n                        </InputGroupAddon>\r\n                    </InputGroup>}\r\n                    <input \r\n                        type=\"file\" \r\n                        id=\"rFile\" \r\n                        style={{visibility: 'hidden'}} \r\n                        onChange={handleFileChange}\r\n                        required={fileWillPost}\r\n                    />\r\n                    </Col>\r\n                </FormGroup>\r\n                <InputGroup>\r\n                    <Input type=\"textarea\" value={revText} onChange={e => {\r\n                        setRevText(e.target.value)\r\n                    }} placeholder=\"Escriba aquí su comentario\" required={!fileWillPost}/>\r\n                    <Button color=\"primary\" disabled={rtId == -1} type=\"submit\">Subir</Button>\r\n                </InputGroup>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ClinicalRecord = ({location}) => {\r\n\r\n    // location.state = {\r\n    //     id: 1,\r\n    //     name: \"Manuel Garros\",\r\n    //     apellido: \"Rojas Suazo\",\r\n    //     run: \"19999999-2\"\r\n    // }\r\n\r\n    const blankMotive = {\r\n        \"id_pre_medical_consultation\": null,\r\n        \"person_id\": null,\r\n        \"urgency\": 0,\r\n        \"pain\": 0,\r\n        \"cavities\": 0,\r\n        \"wounds\": 0,\r\n        \"bleeding\": 0,\r\n        \"fracture\": 0,\r\n        \"trauma\": 0,\r\n        \"swelling\": 0,\r\n        \"treatment\": 0,\r\n        \"other\": \"\"\r\n    }\r\n\r\n    const [consultationMotive, setConsultationMotive] = useState(blankMotive);\r\n    const [diagsTreats, setDiagsTreats] = useState([]);\r\n    const [medicalData, setMedicalData] = useState();\r\n    const diseases = useList(\"general-anamnesis/disease/\" + location?.state?.id)\r\n    const [anamnId, setAnamnId] = useState(-1);\r\n\r\n\r\n    const getConsultationMotive = async () => {\r\n        const res = await Axios.get(process.env.REACT_APP_API_URL + \"person/pre-medical-consultation/\" + location?.state?.id);\r\n        let motive = res.data.result?.length ? res.data.result[0] : blankMotive\r\n        setConsultationMotive(motive);\r\n    }\r\n\r\n    const getDiagnosisAndTreatment = async () => {\r\n        const res = await Axios.get(process.env.REACT_APP_API_URL + \"geriatrical-odonto-anamnesis/diag-treat/\" + location?.state?.id);\r\n        if (res.data.result?.length) {\r\n            setDiagsTreats(res.data.result)\r\n        }\r\n    }\r\n\r\n    const getMedicalData = async () => {\r\n        const res = await Axios.get(process.env.REACT_APP_API_URL + \"general-anamnesis/data/\" + location?.state?.id);\r\n        if (res.data.result?.length) {\r\n            setMedicalData(res.data.result[0])\r\n        }\r\n    }\r\n\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    const motiveList = () => {\r\n        let motives = []\r\n        if (consultationMotive.pain) motives.push(\"dolor severo\")\r\n        if (consultationMotive.cavities) motives.push(\" caries o manchas\")\r\n        if (consultationMotive.wounds) motives.push(\" lesiones dentales\")\r\n        if (consultationMotive.bleeding) motives.push(\" sangrado bucal\")\r\n        if (consultationMotive.fracture) motives.push(\" fractura de prótesis\")\r\n        if (consultationMotive.trauma) motives.push(\" trauma\")\r\n        if (consultationMotive.swelling) motives.push(\" hinchazón oral\")\r\n        if (consultationMotive.treatment) motives.push(\" requiere tratamiento\")\r\n        return motives ? capitalize(String(motives).trim()) : \"N/A\"\r\n    }\r\n\r\n    const fetchLastDental = async () => {\r\n        const res = await getList(\"geriatrical-odonto-anamnesis/crud/\" + location?.state?.id);\r\n        setAnamnId((res.length) ? res[0].dental_anamnesis_id : -1)      \r\n    };  \r\n\r\n    useEffect(() => {\r\n        getConsultationMotive();\r\n        fetchLastDental();\r\n        motiveList();\r\n        getMedicalData();\r\n        getDiagnosisAndTreatment();\r\n    }, [])\r\n\r\n    // const reviewByType = type => {\r\n    //     let rt = reviewTypes.filter(rt => rt.name === type);\r\n    //     return rt[0] ? {revs: reviews.filter(r => r.review_type_id === rt[0].id), rtId: rt[0].id} : {revs: [], rtId: -1}\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <h2>\r\n                Ficha clínica del paciente\r\n            </h2>\r\n            <Row>\r\n                <Col md=\"4\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <h5 className=\"h3 mb-0\">Info. del paciente</h5>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Table borderless>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <th scope=\"row\">Nombre</th>\r\n                                    <td>{location?.state?.name}</td>\r\n                                </tr>\r\n                                </tbody>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <th scope=\"row\">Apellido(s)</th>\r\n                                    <td>{location?.state?.apellido}</td>\r\n                                </tr>\r\n                                </tbody>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <th scope=\"row\">RUN</th>\r\n                                    <td>{location?.state?.run}</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <h5 className=\"h3 mb-0\">Alertas médicas</h5>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            Urgencia dental: {consultationMotive.urgency ? 'Sí' : 'No'}<br/>\r\n                            Motivo Consulta: {motiveList()}<br/>\r\n                            Otros: {consultationMotive.other}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"4\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <h5 className=\"h3 mb-0\">Exámenes orales 3D</h5>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Button id=\"models\" color=\"primary\" disabled={anamnId===-1}>\r\n                                {anamnId!==-1 ? <Link style={{color: \"white\"}} to={{\r\n                                    state: {\r\n                                        id: location?.state?.id,\r\n                                        run: location?.state?.run,\r\n                                        name: location?.state?.name,\r\n                                        apellido: location?.state?.apellido,\r\n                                        anamId: anamnId\r\n                                    },\r\n                                    pathname: \"/admin/extra-oral\"\r\n                                    }}>\r\n                                    <i className=\"ni ni-app\"></i> Ir a los modelos\r\n                                </Link>: <span><i className=\"ni ni-app\"></i> Ir a los modelos</span>}\r\n                            </Button>\r\n                            {anamnId===-1 && <UncontrolledTooltip target=\"models\">\r\n                                Se requiere haber registrado la Anamnésis Odonto - Geriatra\r\n                            </UncontrolledTooltip>}\r\n                            <div><br/></div>\r\n                            \r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <h5 className=\"h3 mb-0\">Links rápidos</h5>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Link to={{\r\n                                state: {\r\n                                    id: location?.state?.id,\r\n                                    run: location?.state?.run,\r\n                                    name: location?.state?.name,\r\n                                    pellido: location?.state?.apellido\r\n                                },\r\n                                pathname: \"/admin/general-anamnesis-u\"\r\n                            }}>\r\n                                <i className=\"ni ni-bold-right\"></i>Anamnesis General\r\n                            </Link><br/>\r\n                            <Link to={{\r\n                                state: {\r\n                                    id: location?.state?.id,\r\n                                    run: location?.state?.run,\r\n                                    name: location?.state?.name,\r\n                                    apellido: location?.state?.apellido\r\n                                },\r\n                                pathname: \"/admin/medical-anamnesis-u\"\r\n                            }}>\r\n                                <i className=\"ni ni-bold-right\"></i>Anamnesis Médico Geriatra\r\n                            </Link><br/>\r\n                            <Link to={{\r\n                                state: {\r\n                                    id: location?.state?.id,\r\n                                    run: location?.state?.run,\r\n                                    name: location?.state?.name,\r\n                                    apellido: location?.state?.apellido\r\n                                },\r\n                                pathname: \"/admin/dental-anamnesis-u\"\r\n                            }}>\r\n                                <i className=\"ni ni-bold-right\"></i>Anamnesis Odonto Geriatra\r\n                            </Link><br/>\r\n                            <Link to={{\r\n                                state: {\r\n                                    id: location?.state?.id,\r\n                                    run: location?.state?.run,\r\n                                    name: location?.state?.name,\r\n                                    apellido: location?.state?.apellido\r\n                                },\r\n                                pathname: \"/admin/referral\"\r\n                            }}>\r\n                                <i className=\"ni ni-bold-right\"></i>Interconsultas\r\n                            </Link>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"4\"><Card>\r\n                    <CardHeader>\r\n                        <h5 className=\"h3 mb-0\">Enfermedades</h5>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <ul>\r\n                        {diseases.map((d, i) => \r\n                            <li key={i}>{d.name}</li>\r\n                        )}\r\n                        </ul>\r\n                    </CardBody>\r\n                </Card></Col>\r\n                <Col md=\"4\"><Card>\r\n                    <CardHeader>\r\n                        <h5 className=\"h3 mb-0\">Alergias</h5>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {medicalData?.allergies}<hr/>\r\n                        Alergias a fármacos: {medicalData?.medicine_allergies}\r\n                    </CardBody>\r\n                </Card></Col>\r\n                <Col md=\"4\"><Card>\r\n                    <CardHeader>\r\n                        <h5 className=\"h3 mb-0\">Fármacos y Posología</h5>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {medicalData?.medicine_dose}\r\n                    </CardBody>\r\n                </Card></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col><Card>\r\n                    <CardHeader>\r\n                        <h5 className=\"h3 mb-0\">Diagnóstico odontológico</h5>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <ul>\r\n                        {diagsTreats.map((dT, i) => \r\n                            Boolean(dT.odontological_diag.trim()) && <li key={i}>{dT.odontological_diag}</li>\r\n                        )}\r\n                        </ul>\r\n                    </CardBody>\r\n                </Card></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col><Card>\r\n                    <CardHeader>\r\n                        <h5 className=\"h3 mb-0\">Plan de tratamiendo</h5>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <ul>\r\n                        {diagsTreats.map((dT, i) => \r\n                            Boolean(dT.treatment_plan.trim()) && <li key={i}>{dT.treatment_plan}</li>\r\n                        )}\r\n                        </ul>\r\n                    </CardBody>\r\n                </Card></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col><Card>\r\n                    <CardHeader>\r\n                        <h5 className=\"h3 mb-0\">Comentarios</h5>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Reviews id={location?.state?.id} rut={location?.state?.run}/>\r\n                    </CardBody>\r\n                </Card></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ClinicalRecord\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Row, InputGroup,\r\n    InputGroupText, InputGroupAddon, Card, CardBody, Label, ListGroup, lisgro\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Background = ({location}) => {\r\n\r\n    const [alcohol, setAlcohol] = useState(false)\r\n    const [lastTime, setLastTime] = useState(\"\")\r\n    const [drugs, setDrugs] = useState(false)\r\n    const [smoke, setSmoke] = useState(false)\r\n    const [smokeCuantity, setSmokeCuantity]= useState(0)\r\n    const [badHabits, setBadHabits] = useState(\"\")   \r\n    const [bruxismo, setBruxismo] = useState(false)\r\n    const [anam_id, setAnamId] = useState(0)\r\n \r\n    const [next, setNext]=useState(false)\r\n\r\n    const addSmoke= () =>{\r\n        setSmoke(!smoke)\r\n        setSmokeCuantity(0)\r\n\r\n    }\r\n\r\n    const addBackground = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"geriatrical-odonto-anamnesis/background\",\r\n          {\r\n            personId : location.state.id,\r\n            alcohol: alcohol,\r\n            lastTime: lastTime,\r\n            drugs:drugs,\r\n            smoke:smoke,\r\n            smokeCuantity:smokeCuantity,\r\n            badHabits:badHabits,\r\n            bruxismo:bruxismo\r\n          }\r\n        )\r\n        if (!res.data.error)\r\n            setAnamId(res.data.result.insertId); \r\n            setNext(true); \r\n         \r\n      }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Anamnesis Odonto-geriátrica\r\n                    </h1>\r\n                    <h5 className=\"heading-small\" >Antecedentes</h5>\r\n                    \r\n                    <Form  onSubmit={addBackground} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label\r\n                                className=\"form-control-label\"\r\n                            >\r\n                                ¿Cuando fue la última vez que vine al dentista?\r\n                            </Label>\r\n                            \r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"textarea\"\r\n                                    onChange={(e) => { setLastTime(e.target.value) }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"2\">\r\n                                ¿Bebe alcohol?\r\n                            </Col>\r\n                            <Col md=\"10\">\r\n                                <label className=\"custom-toggle custom-toggle-warning mr-1\">\r\n                                    <Input type=\"checkbox\" onChange={(e) => { setAlcohol(!alcohol) }} />\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"2\">\r\n                            ¿Consume drogas?\r\n                            </Col>\r\n                            <Col md=\"10\">\r\n                                <label className=\"custom-toggle custom-toggle-warning mr-1\">\r\n                                    <Input type=\"checkbox\" onChange={(e) => { setDrugs(!drugs) }} />\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"2\">\r\n                                ¿Fuma?\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                                <label className=\"custom-toggle custom-toggle-warning mr-1\">\r\n                                    <Input type=\"checkbox\" onChange={(e) => { addSmoke() }} />\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label>\r\n                            </Col>\r\n                            {smoke &&\r\n                            <>\r\n                            <Col md=\"2\">\r\n                            Cantidad\r\n                            </Col> \r\n                            <Col md=\"2\">\r\n                            <label className=\"\">\r\n                                <Input type=\"number\" onChange={(e) => { setSmokeCuantity(e.target.value) }} />\r\n                               \r\n                            </label>\r\n                            </Col>\r\n                            </>\r\n                            \r\n                            }\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col >\r\n                            <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                                \r\n                            >\r\n                                Observaciones\r\n                            </Label>\r\n                            \r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"textarea\"\r\n                                    onChange={(e) => { setBadHabits(e.target.value) }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"2\">\r\n                                ¿Bruxismo?\r\n                            </Col>\r\n                            <Col md=\"10\">\r\n                                <label className=\"custom-toggle custom-toggle-warning mr-1\">\r\n                                    <Input type=\"checkbox\" onChange={(e) => { setBruxismo(!bruxismo) }} />\r\n                                    <span\r\n                                        className=\"custom-toggle-slider rounded-circle\"\r\n                                        data-label-off=\"No\"\r\n                                        data-label-on=\"Sí\"\r\n                                    />\r\n                                </label>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                               \r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                           \r\n                              <Button type=\"submit\" color=\"primary\">Registrar</Button>\r\n                             \r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    { next && <Redirect to={{\r\n                    pathname: \"/admin/muscular-exam\",\r\n                    state: { id: location.state.id, run: location.state.run, name: location.state.name, apellido : location.state.apellido, anamId: anam_id} \r\n                    }} /> } \r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Background\r\n","import React, {useState} from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label\r\n} from 'reactstrap'\r\n\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst DentalAnamnesis = ({location}) => {\r\n\r\n\r\n    const [defreal, setDefreaL] = useState(false)\r\n    const [ausenciaEncia, setAusenciaEncia] = useState(false)\r\n    const [recesionesGingivales, setRecesionesGingivales] = useState(false)\r\n    const [posicionAberrante, setPosicionAberrante] = useState(false)\r\n    const [profundidad, setProfundidad] = useState(false)\r\n    const [other, setOther] = useState(false)\r\n\r\n    const [parcialTeeth, setParcialTeeth] = useState(false)\r\n    const [totalTeeth, setTotalTeeth] = useState(false)\r\n    const [parcialRemovableProstheses, setParcialRemovableProstheses] = useState(false)\r\n    const [totalRemovableProstheses, setTotalRemovableProstheses] = useState(false)\r\n    const [fixedProstheses, setFixedProstheses] = useState(false)\r\n    const [fixedProsthesesImplants, setFixedProsthesesImplants] = useState(false)\r\n    const [prosthesesMaterial, setProsthesesMaterial] = useState(\"\")\r\n\r\n    const [icdas2Index, setIcdas2Index]=useState(0)\r\n    const [cpodIndex, setCpodIndex]=useState(0)\r\n    const [next, setNext] = useState(false)\r\n\r\n\r\n    const [boton, setBoton] = useState(0)\r\n\r\n    const [nombreImagen, setNombreImagen] = useState(\"\")\r\n    const [file, setFile] = useState()\r\n\r\n    const ruta = \"static/images_anam_odonto/\" + location.state.run\r\n    const [fotos, setFotos] = useState([])\r\n    const addPhoto = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"photo/odonto_geriatra\",\r\n            {\r\n\r\n                anamnId: location.state.anamId,\r\n                nombreImagen: nombreImagen,\r\n                ruta: ruta,\r\n            })\r\n    }\r\n    const obtainPhoto = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"photo/odonto_geriatra/obtain\",\r\n            {\r\n                anamnId: location.state.anamId,\r\n            })\r\n        if (!res.data.error)\r\n            setFotos(res.data.result)\r\n        console.log(res.data.result)\r\n\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (boton === 1) {\r\n            addDentalAnamnesis(e);\r\n        }\r\n        if (boton === 2) {\r\n            enviar();\r\n            addPhoto(e);\r\n            obtainPhoto(e);\r\n        }\r\n    }\r\n    const enviar = async () => {\r\n        await archivo()\r\n    }\r\n\r\n    const archivo = () => {\r\n        const f = new FormData();\r\n\r\n        f.append(\"file\", file[0], nombreImagen)\r\n\r\n        Axios.post(\"file/img_odonto/\" + location.state.run, f)\r\n            .then(response => {\r\n                console.log(response)\r\n\r\n            }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n    const addDentalAnamnesis = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"geriatrical-odonto-anamnesis/\",\r\n            {\r\n                anamId: location.state.anamId,\r\n\r\n                defreal: defreal,\r\n                ausenciaEncia: ausenciaEncia,\r\n                recesionesGingivales: recesionesGingivales,\r\n                posicionAberrante: posicionAberrante,\r\n                profundidad: profundidad,\r\n                other: other,\r\n                parcialTeeth: parcialTeeth,\r\n                totalTeeth: totalTeeth,\r\n                parcialRemovableProstheses: parcialRemovableProstheses,\r\n                totalRemovableProstheses: totalRemovableProstheses,\r\n                fixedProstheses: fixedProstheses,\r\n                fixedProsthesesImplants: fixedProsthesesImplants,\r\n                prosthesesMaterial: prosthesesMaterial,\r\n                icdas2Index:icdas2Index,\r\n                cpodIndex:cpodIndex\r\n\r\n            }, {headers: {'x-access-token': localStorage.getItem('user')}}\r\n        )\r\n        if (!res.data.error)\r\n            setNext(true)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Anamnesis Odonto-geriátrica\r\n                    </h1>\r\n                    <h5 className=\"heading-small\">Examen protésico</h5>\r\n\r\n                    <Form onSubmit={onSubmit} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"parcialTeeth\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setParcialTeeth(!parcialTeeth)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"parcialTeeth\"\r\n                                    >Dentado parcial</label>\r\n                                </div>\r\n\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"totalTeeth\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setTotalTeeth(!totalTeeth)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"totalTeeth\"\r\n                                    >Dentado total</label>\r\n                                </div>\r\n\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"parcialRemovableProstheses\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setParcialRemovableProstheses(!parcialRemovableProstheses)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"parcialRemovableProstheses\"\r\n                                    >Prótesis removible parcial\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"totalRemovableProstheses\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setTotalRemovableProstheses(!totalRemovableProstheses)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"totalRemovableProstheses\"\r\n                                    >Prótesis removible total\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"fixedProstheses\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setFixedProstheses(!fixedProstheses)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"fixedProstheses\"\r\n                                    >Prótesis fija\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"fixedProsthesesImplants\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setFixedProsthesesImplants(!fixedProsthesesImplants)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"fixedProsthesesImplants\"\r\n                                    >Prótesis fija sobre implantes\r\n                                    </label>\r\n                                </div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                >\r\n                                    Tipo de prótesis(Material)\r\n                                </Label>\r\n\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"textarea\"\r\n                                    onChange={(e) => {\r\n                                        setProsthesesMaterial(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <h5 className=\"heading-small\">Examen clínico de la encía </h5>\r\n                        <FormGroup className=\"row\">\r\n\r\n                            <Col md=\"6\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                    md=\"6\"\r\n                                >\r\n                                    Alteraciones mucogingivales\r\n                                </Label>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"defreal\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setDefreaL(!defreal)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"defreal\"\r\n                                    >Deficiencia reborde alveolar (horizontal y/o vertical)</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"ausenciaEncia\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setAusenciaEncia(!ausenciaEncia)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"ausenciaEncia\"\r\n                                    >Ausencia de encía adherida/mucosa queratinizada</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"recesionesGingivales\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setRecesionesGingivales(!recesionesGingivales)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"recesionesGingivales\"\r\n                                    >Recesiones gingivales</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"posicionAberrante\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPosicionAberrante(!posicionAberrante)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"posicionAberrante\"\r\n                                    >Inserción de frenillo en posición aberrante</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"profundidad\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setProfundidad(!profundidad)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"profundidad\"\r\n                                    >Profundidad de fondo de vestíbulo disminuida</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"other\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setOther(!other)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"other\"\r\n                                    >Otra</label>\r\n                                </div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <h5>Evaluación cariológica</h5>\r\n                        <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">\r\n                                            ICDAS 2 (\r\n                                                <a href=\"https://drive.google.com/drive/u/4/folders/1TX99pqC0ptNFf86B8iEPb0gTsC0VDkOX\" target=\"_blank\">ver</a>)\r\n                                        </Label>\r\n                                        <Input\r\n                                            max=\"9999\" min=\"-9999\"\r\n                                            \r\n                                            name=\"icdas2_index\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {setIcdas2Index(e.target.value)}}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">\r\n                                            CPOD (\r\n                                                <a href=\"https://drive.google.com/drive/u/4/folders/1TX99pqC0ptNFf86B8iEPb0gTsC0VDkOX\" target=\"_blank\">ver</a>)\r\n                                        </Label>\r\n                                        <Input\r\n                                            max=\"9999\" min=\"-9999\"\r\n                                            \r\n                                            name=\"cpod_index\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {setCpodIndex(e.target.value)}}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>                \r\n                        <Card>\r\n                            <CardBody>\r\n                                <h3>Ingreso de imágenes</h3>\r\n                                <Form onSubmit={enviar} role=\"form\">\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col md=\"4\">\r\n                                            <Label\r\n                                                className=\"form-control-label\"\r\n                                            >\r\n                                                Nombre Imagen\r\n                                            </Label>\r\n                                            <Input\r\n                                                defaultValue=\"\"\r\n                                                id=\"example-text-input\"\r\n                                                type=\"text\"\r\n                                                onChange={(e) => {\r\n                                                    setNombreImagen(e.target.value + \".jpg\")\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col md=\"4\">\r\n                                            <input type=\"file\" accept=\"image/*\"\r\n                                                   onChange={(e) => setFile(e.target.files)}\r\n                                                   required/>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n\r\n                                        {fotos.map((foto, i) => (\r\n\r\n                                            <tr><a rel=\"noopener noreferrer\" target=\"_blank\"\r\n                                                   href={`${process.env.REACT_APP_API_URL}` + `${foto.url}` + \"/\" + `${foto.foto_nombre}`}> {foto.foto_nombre}</a>\r\n                                            </tr>\r\n\r\n                                        ))}\r\n\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col md=\"10\">\r\n                                            <Button type=\"submit\" onClick={() => (setBoton(2))}\r\n                                                    color=\"primary\">Guardar</Button>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Form>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                                <Button type=\"submit\" onClick={() => (setBoton(1))} color=\"primary\">Guardar</Button>\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    {next && <Redirect to={{\r\n                        pathname: \"/admin/extra-oral\",\r\n                        state: {\r\n                            id: location.state.id,\r\n                            run: location.state.run,\r\n                            name: location.state.name,\r\n                            apellido: location.state.apellido,\r\n                            anamId: location.state.anamId\r\n                        }\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DentalAnamnesis\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, ModalHeader, Label, InputGroup, InputGroupAddon} from 'reactstrap';\r\nimport axios from '../../../helpers/axiosConfig';\r\nimport {getList} from 'helpers/ListHelper'; \r\nimport CardHeader from 'reactstrap/lib/CardHeader';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst DentalAnamnesis = ({location}) => {\r\n    //MODAL}}}###############################################################\r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options);\r\n    };\r\n\r\n    //LOCATION###############################################################\r\n    useEffect(() => {\r\n        if (!location?.state?.id) { \r\n            location.state.id = 0;\r\n        }\r\n        fetchLastDental(location.state.id);\r\n    }, []);\r\n\r\n    //FILE###################################################################\r\n    const [fileName, setFileName] = useState(\"\");\r\n    const [fileType, setFileType] = useState(\"\");\r\n    const [file, setFile] = useState({});\r\n    const [hasFile, setHasFile] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const extAllowed = \"jpeg jpg png pdf\";\r\n    const sizAllowed = 100000000;\r\n    const defaultHelpText = extAllowed + \" (max: \" + sizAllowed / 1000000 + \" MB)\";\r\n    const [helpText, setHelpText] =useState(defaultHelpText);\r\n\r\n    const handleHasFile = () => {\r\n        setHasFile(!hasFile);\r\n        cleanFile();\r\n        setHelpText(defaultHelpText);\r\n    };\r\n\r\n    const fetchFiles= async () => {\r\n        const res = await axios.post(\"photo/odonto_geriatra/obtain\", {anamnId: dental.dental_anamnesis_id})\r\n        if (!res.data.error) {\r\n            setFiles(res.data.result);\r\n            setModal({});\r\n        };       \r\n    };\r\n\r\n    const loadFile = (file) => {\r\n        if (file[0]?.name) {\r\n            const size = file[0].size;\r\n            const full = file[0]?.name;\r\n            const type = full.slice((full.lastIndexOf('.') - 1 >>> 0) + 2).toLowerCase();\r\n            if (extAllowed.indexOf(type) >= 0) {\r\n                if (size <= sizAllowed) {\r\n                    setFileName(full.slice(0, (full.lastIndexOf('.'))));\r\n                    setFileType(type);\r\n                    setFile(file);\r\n                    setHelpText(full);\r\n                    return;\r\n                } else {\r\n                    cleanFile();\r\n                    setHelpText(\"Tamaño de archivo invalido\");\r\n                    return;\r\n                };\r\n            };\r\n            cleanFile();\r\n            setHelpText(\"Formato de archivo invalido\");\r\n        };\r\n    };\r\n\r\n    const cleanFile = () => {\r\n        setFileName(\"\");\r\n        setFileType(\"\");\r\n        setFile({});\r\n    };\r\n\r\n    const uploadFile = () => {\r\n        if (fileName) {\r\n            const f = new FormData();\r\n            f.append(\"file\", file[0], fileName + '.' + fileType);\r\n            axios.post(\"file/img_odonto/\" + location.state.run, f)\r\n            .then(response => {\r\n                saveFile();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        };\r\n    };\r\n\r\n    const saveFile = async () => {\r\n        const res = await axios.post(\"photo/odonto_geriatra\",\r\n            {anamnId : dental.dental_anamnesis_id,\r\n            nombreImagen: fileName + '.' + fileType,\r\n            ruta: \"static/images_anam_odonto/\" + location.state.run}\r\n        );\r\n        if (!res.data.error) {\r\n            fetchFiles();\r\n            cleanFile();\r\n            setHelpText(defaultHelpText);\r\n            setHasFile(false);\r\n        }; \r\n    };    \r\n\r\n    const removeFile = async (fId, name) => {\r\n        const res = await axios.post(\"photo/odonto_geriatra/rm/\", {\r\n            fId : fId,\r\n            route : location.state.run + '/' + name\r\n        });\r\n        if (!res.data.error) {\r\n            fetchFiles();\r\n        }; \r\n    };\r\n\r\n    //CRUD###################################################################\r\n    const saveChanges = async () => {\r\n        try {\r\n            const res = await axios.post(\"geriatrical-odonto-anamnesis/crud\", dental);\r\n            if (res.data.result[0][0].cod == 0) {\r\n                console.log('Cambios guardados correctamente!');\r\n                setDental({...dental, dental_anamnesis_id: res.data.result[0][0].id});\r\n            } else {\r\n                console.log('Err: ' + res.data.result[0][0].msg);\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const saveChangesFromButton = async e => {\r\n        e.preventDefault();\r\n        saveChanges();\r\n    };    \r\n\r\n    //GROUP#################################################################\r\n    const [group, setGroup] = useState('background');\r\n    const changeGroup = (group) => {\r\n        var form = document.getElementById('id-form-update');\r\n        if(form.checkValidity()) {\r\n            saveChanges();\r\n            setGroup(group);\r\n        } else {\r\n            document.getElementById('id-btn-save').click();\r\n        };\r\n        fetchFiles();\r\n    };\r\n\r\n    //DENTAL#################################################################\r\n    const defaultDental = {dental_anamnesis_id: 0, /*person_id: 0,*/ /**/last_dental_visit: \"\", alcohol: 0, drugs: 0, tabacco: 0, tabacco_cuantity: 0, other_bad_habit:\"\", bruxism: 0, /**/painpr: 0, painfr: 0, clickr: 0, crepr: 0, painpl: 0, painfl: 0, clickl: 0, crepl: 0, masetero_d: 0, masetero_i: 0, temporal_d: 0, temporal_i: 0, pterigoideo_internoi: 0, pterigoideo_internod: 0, pterigoideo_externoi: 0, pterigoideo_externod: 0, neck_muscles: \"\", bloqueo_ar: \"\", diag: \"\", obs: \"\", /**/parcial_teeth: 0, total_teeth: 0, parcial_removable_prostheses: 0, total_removable_prostheses: 0, fixed_prostheses: 0, fixed_prostheses_implants: 0, prostheses_material: '', defreal: 0, ausencia_encia: 0, recesiones_gingivales: 0, posicion_aberrante: 0, profundidad: 0, other_mucogingival_alteration: 0, periodontal_diag: \"\", odontological_diag: \"\", treatment_plan: \"\", icdas2_index: \"\", cpod_index: \"\"};\r\n    const [dental, setDental] = useState(defaultDental);\r\n    const [has, setHas] = useState(false);\r\n    \r\n    const handleInputChange = e => {\r\n        setDental({\r\n            ...dental,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputCheckedChange = e => {\r\n        setDental({\r\n            ...dental,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    const fetchLastDental = async (person_id) => {\r\n        const res = await getList(\"geriatrical-odonto-anamnesis/crud/\" + person_id);\r\n        if (res.length === 1) {\r\n            setDental(res[0]);\r\n            setHas(true);\r\n        }; \r\n        // if (res.length === 1) {\r\n        //     setDental(res[0]);\r\n        //     //setHasDental(true);\r\n        // } else {\r\n        //     setDental({...defaultDental, person_id: person_id});\r\n        // };        \r\n    };  \r\n\r\n    //JSX####################################################################\r\n    return (\r\n        <Container>\r\n            <SimpleModal ref={modalRef}/>\r\n            <h4 className=\"heading-small text-muted mb-2 mt-2\">Anamnesis Odonto-geriátrica</h4>\r\n            {!has\r\n                ? <Card><h4>El paciente no tiene registros en Anamnesis Odonto-geriátrica.</h4></Card> \r\n                : <Card>\r\n                    <CardBody className=\"pb-0 pt-1\">\r\n                        <ModalHeader className=\"pb-5 pl-0\">\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'background' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('background')}>Antecedentes</a>\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'muscular' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('muscular')}>Examen Muscular y ATM</a>\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'prostheses' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('prostheses')}>Examen Protésico</a>\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'test' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('test')}>Evaluación cariológica</a>\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'periodon' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('periodon')}>Periodontograma</a>\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'repo' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('repo')}>Repositorio</a>\r\n                        </ModalHeader>\r\n                        <Form id=\"id-form-update\" onSubmit={(e) => {saveChangesFromButton(e)}} role=\"form\">\r\n                            {group === 'background' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">¿Cuando fue la última vez que vine al dentista?</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"last_dental_visit\"\r\n                                            value={dental.last_dental_visit}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col className=\"d-flex\">\r\n                                        <Label className=\"form-control-label\">¿Bebe alcohol?</Label>\r\n                                        <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                name=\"alcohol\"\r\n                                                checked={dental.alcohol}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                        </label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col className=\"d-flex\">\r\n                                        <Label className=\"form-control-label\">¿Consume drogas?</Label>\r\n                                        <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                name=\"drugs\"\r\n                                                checked={dental.drugs}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                        </label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col className=\"d-flex\">\r\n                                        <Label className=\"form-control-label\">¿Fuma?</Label>\r\n                                        <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                name=\"tabacco\"\r\n                                                checked={dental.tabacco}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                        </label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Cantidad de cigarros al dia</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" type=\"number\" step=\"1\"\r\n                                            name=\"tabacco_cuantity\"\r\n                                            value={dental.tabacco_cuantity}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Observaciones</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"other_bad_habit\"\r\n                                            value={dental.other_bad_habit}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col className=\"d-flex\">\r\n                                        <Label className=\"form-control-label\">¿Bruxismo?</Label>\r\n                                        <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                name=\"bruxism\"\r\n                                                checked={dental.bruxism}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                        </label>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>}\r\n                            {group === 'muscular' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label\">ATM Derecha</Label>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"painpr\"   \r\n                                                name=\"painpr\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.painpr}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"painpr\">Dolor a la palpación</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"painfr\"   \r\n                                                name=\"painfr\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.painfr}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"painfr\">Dolor funcional</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"clickr\"   \r\n                                                name=\"clickr\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.clickr}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"clickr\">Click</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"crepr\"   \r\n                                                name=\"crepr\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.crepr}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"crepr\">Crepitación</label>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label\">ATM Izquierda</Label>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"painpl\"   \r\n                                                name=\"painpl\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.painpl}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"painpl\">Dolor a la palpación</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"painfl\"   \r\n                                                name=\"painfl\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.painfl}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"painfl\">Dolor funcional</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"clickl\"   \r\n                                                name=\"clickl\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.clickl}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"clickl\">Click</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"crepl\"   \r\n                                                name=\"crepl\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.crepl}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"crepl\">Crepitación</label>\r\n                                        </div>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label\">Dolor</Label>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"masetero_d\"   \r\n                                                name=\"masetero_d\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.masetero_d}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"masetero_d\">Masétero derecho</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"masetero_i\"   \r\n                                                name=\"masetero_i\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.masetero_i}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"masetero_i\">Masétero izquierdo</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"temporal_d\"   \r\n                                                name=\"temporal_d\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.temporal_d}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"temporal_d\">Temporal derecho</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"temporal_i\"   \r\n                                                name=\"temporal_i\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.temporal_i}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"temporal_i\">Temporal Izquierdo</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"pterigoideo_internoi\"   \r\n                                                name=\"pterigoideo_internoi\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.pterigoideo_internoi}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"pterigoideo_internoi\">Pterigoideo interno derecho</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"pterigoideo_internod\"   \r\n                                                name=\"pterigoideo_internod\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.pterigoideo_internod}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"pterigoideo_internod\">Pterigoideo interno izquierdo</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"pterigoideo_externoi\"   \r\n                                                name=\"pterigoideo_externoi\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.pterigoideo_externoi}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"pterigoideo_externoi\">Pterigoideo externo derecho</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"pterigoideo_externod\"   \r\n                                                name=\"pterigoideo_externod\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.pterigoideo_externod}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"pterigoideo_externod\">Pterigoideo externo izquierdo</label>\r\n                                        </div>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Musculos del cuello</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"neck_muscles\"\r\n                                            value={dental.neck_muscles}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Bloqueo articular</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"bloqueo_ar\"\r\n                                            value={dental.bloqueo_ar}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Diagnostico</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"diag\"\r\n                                            value={dental.diag}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Observaciones</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"obs\"\r\n                                            value={dental.obs}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>}\r\n                            {group === 'prostheses' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label\">Examen protésico</Label>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"parcial_teeth\"   \r\n                                                name=\"parcial_teeth\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.parcial_teeth}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"parcial_teeth\">¿Dentado parcial?</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"total_teeth\"   \r\n                                                name=\"total_teeth\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.total_teeth}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"total_teeth\">¿Dentado total?</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"parcial_removable_prostheses\"   \r\n                                                name=\"parcial_removable_prostheses\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.parcial_removable_prostheses}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"parcial_removable_prostheses\">¿Prótesis removible parcial?</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"total_removable_prostheses\"   \r\n                                                name=\"total_removable_prostheses\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.total_removable_prostheses}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"total_removable_prostheses\">¿Prótesis removible total?</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"fixed_prostheses\"   \r\n                                                name=\"fixed_prostheses\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.fixed_prostheses}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"fixed_prostheses\">¿Prótesis fija?</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"fixed_prostheses_implants\"   \r\n                                                name=\"fixed_prostheses_implants\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.fixed_prostheses_implants}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"fixed_prostheses_implants\">¿Prótesis fija sobre implantes?</label>\r\n                                        </div>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Tipo de prótesis (Material)</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"prostheses_material\"\r\n                                            value={dental.prostheses_material}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label\">Examen clínico de la encía (Alteraciones mucogingivales)</Label>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"defreal\"   \r\n                                                name=\"defreal\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.defreal}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"defreal\">Deficiencia reborde alveolar (horizontal y/o vertical)</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"ausencia_encia\"   \r\n                                                name=\"ausencia_encia\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.ausencia_encia}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"ausencia_encia\">Ausencia de encía adherida/mucosa queratinizada</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"recesiones_gingivales\"   \r\n                                                name=\"recesiones_gingivales\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.recesiones_gingivales}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"recesiones_gingivales\">Recesiones gingivales</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"posicion_aberrante\"   \r\n                                                name=\"posicion_aberrante\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.posicion_aberrante}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"posicion_aberrante\">Inserción de frenillo en posición aberrante</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"profundidad\"   \r\n                                                name=\"profundidad\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.profundidad}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"profundidad\">Profundidad de fondo de vestíbulo disminuida</label>\r\n                                        </div>\r\n                                        <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                id=\"other_mucogingival_alteration\"   \r\n                                                name=\"other_mucogingival_alteration\"                                                                        \r\n                                                className=\"custom-control-input\"\r\n                                                checked={dental.other_mucogingival_alteration}\r\n                                                onChange={e => {handleInputCheckedChange(e)}}\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"other_mucogingival_alteration\">Otra</label>\r\n                                        </div>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>}\r\n                            {group === 'test' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">\r\n                                            ICDAS 2 (\r\n                                                <a href=\"https://drive.google.com/drive/u/4/folders/1TX99pqC0ptNFf86B8iEPb0gTsC0VDkOX\" target=\"_blank\">ver</a>)\r\n                                        </Label>\r\n                                        <Input\r\n                                            max=\"9999\" min=\"-9999\"\r\n                                            value={dental.icdas2_index}\r\n                                            name=\"icdas2_index\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {handleInputChange(e)}}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">\r\n                                            CPOD (\r\n                                                <a href=\"https://drive.google.com/drive/u/4/folders/1TX99pqC0ptNFf86B8iEPb0gTsC0VDkOX\" target=\"_blank\">ver</a>)\r\n                                        </Label>\r\n                                        <Input\r\n                                            max=\"9999\" min=\"-9999\"\r\n                                            value={dental.cpod_index}\r\n                                            name=\"cpod_index\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {handleInputChange(e)}}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>}\r\n                            {group === 'periodon' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label mb-3\">Periodontograma (<a href=\"https://sepa.es/periodontograma/index.html\" target=\"_blank\">Link a SEPA</a>)</Label>\r\n                                    </Col>\r\n                                </FormGroup> \r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Diagnostico periodontal</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"periodontal_diag\"\r\n                                            value={dental.periodontal_diag}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Diagnostico Odontologico</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"odontological_diag\"\r\n                                            value={dental.odontological_diag}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Plan de tratamiento</Label>\r\n                                        <Input\r\n                                            autoComplete=\"off\" maxLength=\"250\"\r\n                                            type=\"textarea\"\r\n                                            name=\"treatment_plan\"\r\n                                            value={dental.treatment_plan}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>}\r\n                            {group === 'repo' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label mb-3\">Archivos disponibles</Label>\r\n                                        {files.map((file) => (\r\n                                            <div key={file.foto_id} className=\"list-group mb-2\">\r\n                                                <InputGroup>\r\n                                                    <Button className=\"mr-2\" color=\"danger\" size=\"sm\" outline onClick={() => setModal({title: 'Confirmación', text: 'Desea eliminar ' + file.foto_nombre + '?', type: 2, fx: () => removeFile(file.foto_id, file.foto_nombre)})}><i className=\"far fa-trash-alt\"/></Button>\r\n                                                    <a rel=\"noopener noreferrer\" target=\"_blank\" href={process.env.REACT_APP_API_URL + `${file.url}` + \"/\" + `${file.foto_nombre}`}>{file.foto_nombre}</a>\r\n                                                </InputGroup>\r\n                                            </div>\r\n                                        ))}\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <Card>\r\n                                            <CardHeader>\r\n                                                <FormGroup className=\"row\">\r\n                                                    <Col className=\"d-flex\">\r\n                                                        <Label className=\"form-control-label\">¿Subir una nuevo archivo?</Label>\r\n                                                        <label className=\"custom-toggle custom-toggle-info ml-3\">\r\n                                                            <Input type=\"checkbox\" checked={hasFile} onChange={() => handleHasFile()}/>\r\n                                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                        </label>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                            </CardHeader>\r\n                                            {hasFile &&\r\n                                                <CardBody>\r\n                                                    <FormGroup>\r\n                                                        <InputGroup>\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <Button \r\n                                                                    type=\"button\" color=\"primary\"\r\n                                                                    onClick={() => uploadFile()}>\r\n                                                                    Agregar \r\n                                                                </Button>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                autoComplete=\"off\"\r\n                                                                type=\"text\"\r\n                                                                name=\"treatment_plan\"\r\n                                                                value={fileName}\r\n                                                                onChange={e => setFileName(e.target.value)}\r\n                                                            />\r\n                                                            <InputGroupAddon addonType=\"append\">\r\n                                                                <Button \r\n                                                                    type=\"button\" color=\"primary\" \r\n                                                                    onClick={() => {document.getElementById('files').click()}}>\r\n                                                                    Buscar\r\n                                                                </Button>\r\n                                                            </InputGroupAddon>\r\n                                                        </InputGroup>\r\n                                                        <h5 align=\"right\" style={{marginRight: \"10px\", marginBottom: \"0px\"}}>{helpText}</h5>\r\n                                                        <input \r\n                                                            type=\"file\" \r\n                                                            accept=\"image/*, .pdf\"\r\n                                                            id=\"files\" \r\n                                                            style={{visibility: 'hidden'}} \r\n                                                            onChange={e => loadFile(e.target.files)}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            }\r\n                                        </Card>\r\n                                    </Col>\r\n                                </FormGroup> \r\n                            </>}\r\n                            <div className= \"float-right mb-4 mr-2\">\r\n                                <Button type=\"submit\" id=\"id-btn-save\" color=\"primary\">Guardar</Button>{' '}\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DentalAnamnesis;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, ModalHeader, Label} from 'reactstrap';\r\nimport axios from '../../../helpers/axiosConfig';\r\nimport {getList} from 'helpers/ListHelper'; \r\nimport useList from 'hooks/useList';\r\n\r\nconst GeneralAnamnesis = ({location}) => {\r\n    const [has, setHas] = useState(false);\r\n    //LOCATION###############################################################\r\n    useEffect(() => {\r\n        if (!location?.state?.id) { \r\n            //location.state.id = 11;\r\n            fetchLastGeneral(0);\r\n        } else {\r\n            fetchLastGeneral(location.state.id);\r\n        };        \r\n    }, []);\r\n\r\n    //GENERAL###############################################################\r\n    const defaultGeneral = {general_anamnesis_id: 0, person_id: 0, allergies: \"\", other_disease: \"\", under_treatment: 0, previous_surgeries: \"\", medicine_dose: \"\", medicine_allergies: \"\", radio_chemo_therapy: \"\", consult_motive: \"\", consult_motive_history: \"\", medic_alert: \"\"};\r\n    const [general, setGeneral] = useState(defaultGeneral);\r\n    const fetchLastGeneral = async (person_id) => {\r\n        const res = await getList(\"general-anamnesis/\" + person_id);\r\n        if (res.length === 1) {\r\n            setGeneral(res[0]);\r\n            fetchDiseases(res[0].general_anamnesis_id);\r\n            setHas(true);\r\n        }; \r\n    }; \r\n\r\n    const handleInputChange = e => {\r\n        setGeneral({\r\n            ...general,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputCheckedChange = e => {\r\n        setGeneral({\r\n            ...general,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    const handleCurrentDiseases = e => {\r\n        setDiseases({\r\n            ...diseases,\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    //DISEASES##############################################################\r\n    const prmDiseases = useList(\"list/diseases\");\r\n    const [diseases, setDiseases] = useState([]);\r\n    const fetchDiseases = async (general_anamnesis_id) => {\r\n        const obj = {};\r\n        const res = await getList(\"general-anamnesis/crud/\" + general_anamnesis_id);\r\n        for (let i = 0; i < res.length; i++) {\r\n            obj[res[i]['disease_id']] = res[i]['has_disease'];\r\n        }\r\n        setDiseases(obj);\r\n    };  \r\n    \r\n    //CRUD##################################################################\r\n    const saveChanges = async (e) => {\r\n        e.preventDefault();\r\n        const d = [];\r\n        for(var i in diseases){\r\n            if(diseases[i]) {\r\n                d.push(i);\r\n            }; \r\n        };\r\n        try {\r\n            const res = await axios.post(\"general-anamnesis/crud\", {...general, d});\r\n            if (!res.data.error) {\r\n                console.log('Cambios guardados correctamente!');\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            };\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    //GROUP#################################################################\r\n    const [group, setGroup] = useState('motive');\r\n\r\n    //JSX##################################################################\r\n    return (\r\n        <Container>\r\n            <h1>Anamnesis general</h1>\r\n                {!has \r\n                    ? <Card><h4>El paciente no tiene registros en Anamnesis general.</h4></Card> \r\n                    : <Card>\r\n                        <CardBody className=\"pb-0 pt-1\">\r\n                            <ModalHeader className=\"pb-5 pl-0\">\r\n                                <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'motive' ? {color:\"#11cdef\"} : {})}} onClick={() => setGroup('motive')}>Motivo de consulta</a>\r\n                                <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'background' ? {color:\"#11cdef\"} : {})}} onClick={() => setGroup('background')}>Antecedentes mórbidos personales</a>\r\n                            </ModalHeader>\r\n                            <Form id=\"id-form-update\" onSubmit={(e) => saveChanges(e)} role=\"form\">\r\n                                {group === 'motive' && <>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Motivo Consulta</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"consult_motive\"\r\n                                                value={general.consult_motive}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Historial del motivo de Consulta</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"consult_motive_history\"\r\n                                                value={general.consult_motive_history}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Alerta médica especial y comentarios relevantes sobre el paciente</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"medic_alert\"\r\n                                                value={general.medic_alert}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col className=\"d-flex\">\r\n                                            <Label className=\"form-control-label\">Está bajo tratamiento</Label>\r\n                                            <label className=\"custom-toggle custom-toggle-warning ml-3\">\r\n                                                <Input\r\n                                                    type=\"checkbox\"\r\n                                                    name=\"under_treatment\"\r\n                                                    checked={general.under_treatment}\r\n                                                    onChange={e => {handleInputCheckedChange(e)}}\r\n                                                />\r\n                                                <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                            </label>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Alergias</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"allergies\"\r\n                                                value={general.allergies}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Cirugías previas/ Hospitalización/</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"previous_surgeries\"\r\n                                                value={general.previous_surgeries}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Fármacos y Posología</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"medicine_dose\"\r\n                                                value={general.medicine_dose}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Alergia a Fármacos (especificar cuál)</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"medicine_allergies\"\r\n                                                value={general.medicine_allergies}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Radioterapia / Quimioterapia</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"radio_chemo_therapy\"\r\n                                                value={general.radio_chemo_therapy}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </>}    \r\n                                {group === 'background' && <>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col md=\"10\">\r\n                                            {prmDiseases.map(prm => (\r\n                                                <div key={prm.disease_id} className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                                    <Input\r\n                                                        type=\"checkbox\"\r\n                                                        id={prm.disease_id}\r\n                                                        name={prm.disease_id}\r\n                                                        className=\"custom-control-input\"\r\n                                                        checked={diseases[prm.disease_id]}\r\n                                                        onChange={e => handleCurrentDiseases(e)}\r\n                                                    />\r\n                                                    <label className=\"custom-control-label\" htmlFor={prm.disease_id}>{prm.name}</label>\r\n                                                </div>\r\n                                            ))}\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col>\r\n                                            <Label className=\"form-control-label\">Otros / Observaciones</Label>\r\n                                            <Input\r\n                                                autoComplete=\"off\" maxLength=\"250\"\r\n                                                type=\"text\"\r\n                                                name=\"other_disease\"\r\n                                                value={general.other_disease}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </>}\r\n                                <div className= \"float-right mb-4 mr-2\">\r\n                                    <Button type=\"submit\" id=\"id-btn-save\" color=\"primary\">Guardar</Button>{' '}\r\n                                    {/* <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Cancelar</Button> */}\r\n                                </div>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default GeneralAnamnesis;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {Button, Col, Container, Form, FormGroup, Input, Card, CardBody, ModalHeader, Label, InputGroup, InputGroupAddon, InputGroupText, CardHeader} from 'reactstrap';\r\nimport axios from '../../../helpers/axiosConfig';\r\nimport {getList} from 'helpers/ListHelper'; \r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst MedicalAnamnesis = ({location}) => {\r\n    const [has, setHas] = useState(false);\r\n\r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options);\r\n    };\r\n\r\n    //LOCATION###############################################################\r\n    useEffect(() => {\r\n        if (!location?.state?.id) { \r\n            location.state.id = 0;\r\n        }\r\n        fetchLastMedical(location.state.id);\r\n    }, []);\r\n\r\n    //FILE###################################################################\r\n    const [fileName, setFileName] = useState(\"\");\r\n    const [fileType, setFileType] = useState(\"\");\r\n    const [file, setFile] = useState({});\r\n    const [hasFile, setHasFile] = useState(false);\r\n    const [files, setFiles] = useState([]);\r\n    const extAllowed = \"jpeg jpg png pdf\";\r\n    const sizAllowed = 100000000;\r\n    const defaultHelpText = extAllowed + \" (max: \" + sizAllowed / 1000000 + \" MB)\";\r\n    const [helpText, setHelpText] =useState(defaultHelpText);\r\n\r\n    const handleHasFile = () => {\r\n        setHasFile(!hasFile);\r\n        cleanFile();\r\n        setHelpText(defaultHelpText);\r\n    };\r\n\r\n    const fetchFiles= async () => {\r\n        const res = await axios.post(\"photo/medico_geriatra/obtain\", {anamnId: medical.geriatric_medical_anamnesis_id})\r\n        if (!res.data.error) {\r\n            setFiles(res.data.result);\r\n            setModal({});\r\n        };       \r\n    };\r\n\r\n    const loadFile = (file) => {\r\n        if (file[0]?.name) {\r\n            const size = file[0].size;\r\n            const full = file[0]?.name;\r\n            const type = full.slice((full.lastIndexOf('.') - 1 >>> 0) + 2).toLowerCase();\r\n            if (extAllowed.indexOf(type) >= 0) {\r\n                if (size <= sizAllowed) {\r\n                    setFileName(full.slice(0, (full.lastIndexOf('.'))));\r\n                    setFileType(type);\r\n                    setFile(file);\r\n                    setHelpText(full);\r\n                    return;\r\n                } else {\r\n                    cleanFile();\r\n                    setHelpText(\"Tamaño de archivo invalido\");\r\n                    return;\r\n                };\r\n            };\r\n            cleanFile();\r\n            setHelpText(\"Formato de archivo invalido\");\r\n        };\r\n    };\r\n\r\n    const cleanFile = () => {\r\n        setFileName(\"\");\r\n        setFileType(\"\");\r\n        setFile({});\r\n    };\r\n\r\n    const uploadFile = () => {\r\n        if (fileName) {\r\n            const f = new FormData();\r\n            f.append(\"file\", file[0], fileName + '.' + fileType);\r\n            axios.post(\"file/img_medico/\" + location.state.run, f)\r\n            .then(response => {\r\n                saveFile();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        };\r\n    };\r\n\r\n    const saveFile = async () => {\r\n        const res = await axios.post(\"photo/medico_geriatra\",\r\n            {anamnId : medical.geriatric_medical_anamnesis_id,\r\n            nombreImagen: fileName + '.' + fileType,\r\n            ruta: \"static/images_anam_medico/\" + location.state.run}\r\n        );\r\n        if (!res.data.error) {\r\n            fetchFiles();\r\n            cleanFile();\r\n            setHelpText(defaultHelpText);\r\n            setHasFile(false);\r\n        }; \r\n    };    \r\n\r\n    const removeFile = async (fId, name) => {\r\n        const res = await axios.post(\"photo/medico_geriatra/rm/\", {\r\n            fId : fId,\r\n            route : location.state.run + '/' + name\r\n        });\r\n        if (!res.data.error) {\r\n            fetchFiles();\r\n        }; \r\n    };\r\n\r\n    //CRUD###################################################################\r\n    const saveChanges = async () => {\r\n        try {\r\n            const res = await axios.put(\"geriatrical-medical-anamnesis/crud\", medical);\r\n            if (!res.data.error) {\r\n                console.log('Cambios guardados correctamente!');\r\n            } else {\r\n                console.log('Err: ' + res.data.result.code + ' ' + res.data.result.sqlMessage);\r\n            };\r\n\r\n        } catch(e) {\r\n            console.log('Err: ' + e);\r\n        };\r\n    };\r\n\r\n    const saveChangesFromButton = async e => {\r\n        e.preventDefault();\r\n        saveChanges();\r\n    };    \r\n\r\n    //GROUP#################################################################\r\n    const [group, setGroup] = useState('fisical');\r\n    const changeGroup = (group) => {\r\n        var form = document.getElementById('id-form-update');\r\n        if(form.checkValidity()) {\r\n            saveChanges();\r\n            setGroup(group);\r\n        } else {\r\n            document.getElementById('id-btn-save').click();\r\n        };\r\n        fetchFiles();\r\n    };\r\n\r\n    //MEDICAL###############################################################\r\n    const defaultMedical = {geriatric_medical_anamnesis_id: 0, person_id: 0, walking_speed: 0, weight: 0, heigth: 0, bmi: 0, blood_pressure: \"\", temperature: 0, heart_rate: 0, oxygen_saturation: 0, muscular_strength: \"s/e\", glycemia: 0, extra_info: \"\", folestein_mmse: 0, pfeiffer_test: 0, yesavage_test: 0};\r\n    const [medical, setMedical] = useState(defaultMedical);\r\n    \r\n    const handleInputChange = e => {\r\n        setMedical({\r\n            ...medical,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const fetchLastMedical = async (person_id) => {\r\n        const res = await getList(\"geriatrical-medical-anamnesis/crud/\" + person_id);\r\n        if (res.length === 1) {\r\n            setMedical(res[0]);\r\n            setHas(true);\r\n        } else {\r\n            setHas(false);\r\n        };        \r\n    };  \r\n\r\n    //JSX####################################################################\r\n    return (\r\n        <Container>\r\n            <SimpleModal ref={modalRef}/>\r\n            <h1>Anamnesis Médico-geriátrica</h1>\r\n            {!has \r\n                ? <Card><h4>El paciente no tiene registros en Anamnesis Médico-geriátrica.</h4></Card> \r\n                : <Card>\r\n                    <CardBody className=\"pb-0 pt-1\">\r\n                        {/* {location?.state?.run && <h3>{location.state.run} {location.state.name} {location.state.apellido}</h3>} */}\r\n                        <ModalHeader className=\"pb-5 pl-0\">\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'fisical' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('fisical')}>Parametros físicos</a>\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'test' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('test')}>Evaluaciones</a>\r\n                            <a style={{paddingRight: \"15px\", cursor: \"pointer\", ...(group === 'repo' ? {color:\"#11cdef\"} : {})}} onClick={() => changeGroup('repo')}>Repositorio</a>\r\n                        </ModalHeader>\r\n\r\n                        <Form id=\"id-form-update\" onSubmit={(e) => {saveChangesFromButton(e)}} role=\"form\">\r\n                            {group === 'fisical' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Velocidad de marcha</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"walking_speed\"\r\n                                                value={medical.walking_speed}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"0.1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>m/s</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Peso</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"weight\"\r\n                                                value={medical.weight}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\"  autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>Kg</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Altura</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"heigth\"\r\n                                                value={medical.heigth}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"0.01\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>m</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Presión Arterial (Sistólica / Diastólica)</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"blood_pressure\"\r\n                                                value={medical.blood_pressure}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                autoComplete=\"off\" type=\"text\"\r\n                                            />\r\n                                        <InputGroupAddon addonType=\"append\"><InputGroupText>mmHg</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Temperatura</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"temperature\"\r\n                                                value={medical.temperature}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>ºC</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Frecuencia Caríaca</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"heart_rate\"\r\n                                                value={medical.heart_rate}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>lat/m</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Saturación de Oxígeno</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"oxygen_saturation\"\r\n                                                value={medical.oxygen_saturation}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>%SpO2</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Fuerza Muscular</Label>\r\n                                        <InputGroup>\r\n                                            <InputGroupAddon addonType=\"prepend\"><InputGroupText>Grado</InputGroupText></InputGroupAddon>\r\n                                            <Input\r\n                                                name=\"muscular_strength\"\r\n                                                value={medical.muscular_strength}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"select\" autoComplete=\"off\"><option>s/e</option><option>1</option><option>2</option><option>3</option><option>4-</option><option>4</option><option>4+</option><option>5</option>\r\n                                            </Input>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Glicemia</Label>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                name=\"glycemia\"\r\n                                                value={medical.glycemia}\r\n                                                onChange={e => handleInputChange(e)}\r\n                                                type=\"number\" step=\"1\" autoComplete=\"off\"\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\"><InputGroupText>mg/dl</InputGroupText></InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col>\r\n                                        <Label className=\"form-control-label\">Información Adicional</Label>\r\n                                        <Input\r\n                                            type=\"textarea\" autoComplete=\"off\" maxLength=\"250\"\r\n                                            name=\"extra_info\"\r\n                                            value={medical.extra_info}\r\n                                            onChange={e => handleInputChange(e)}\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </>}\r\n                            {group === 'test' && <>\r\n                                <Label className=\"form-control-label\">Evaluaciones cognitivas</Label>\r\n                                <Col>\r\n                                    <Label className=\"form-control-label\">\r\n                                        Cuestionario Minimental de Folstein (\r\n                                            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScOfJZpOKaTXd2OQ6RkgpvhByXY51RzeNtlH24rkiQJ1DCZiw/viewform\" target=\"_blank\">ver</a>)\r\n                                    </Label>\r\n                                    <Input\r\n                                        max=\"9999\" min=\"-9999\"\r\n                                        value={medical.folestein_mmse}\r\n                                        name=\"folestein_mmse\"\r\n                                        type=\"number\"\r\n                                        onChange={e => {handleInputChange(e)}}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Label className=\"form-control-label\">\r\n                                        Test de Pfeiffer (\r\n                                            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScOfJZpOKaTXd2OQ6RkgpvhByXY51RzeNtlH24rkiQJ1DCZiw/viewform\" target=\"_blank\">ver</a>)\r\n                                    </Label>\r\n                                    <Input\r\n                                        max=\"9999\" min=\"-9999\"\r\n                                        value={medical.pfeiffer_test}\r\n                                        name=\"pfeiffer_test\"\r\n                                        type=\"number\"\r\n                                        onChange={e => {handleInputChange(e)}}\r\n                                    />\r\n                                </Col>\r\n                                <br/>\r\n                                <br/>\r\n                                <Label className=\"form-control-label\">Evaluación anímica</Label>\r\n                                <Col>\r\n                                    <Label className=\"form-control-label\">\r\n                                        Cuestionario de Yesavage (\r\n                                            <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScmoS5sWNzDJG9k7ssG4D4M_2jCT8IqplAQ8beLLPZNqfPSjg/viewform\" target=\"_blank\">ver</a>)\r\n                                    </Label>\r\n                                    <Input\r\n                                        max=\"9999\" min=\"-9999\"\r\n                                        value={medical.yesavage_test}\r\n                                        name=\"yesavage_test\"\r\n                                        type=\"number\"\r\n                                        onChange={e => {handleInputChange(e)}}\r\n                                    />\r\n                                </Col>\r\n                                <br/>\r\n                            </>}\r\n                            {group === 'repo' && <>\r\n                                <FormGroup className=\"row\">\r\n                                    <Col md=\"6\">\r\n                                        <Label className=\"form-control-label mb-3\">Archivos disponibles</Label>\r\n                                        {files.map((file) => (\r\n                                            <div key={file.foto_id} className=\"list-group mb-2\">\r\n                                                <InputGroup>\r\n                                                    <Button className=\"mr-2\" color=\"danger\" size=\"sm\" outline onClick={() => setModal({title: 'Confirmación', text: 'Desea eliminar ' + file.foto_nombre + '?', type: 2, fx: () => removeFile(file.foto_id, file.foto_nombre)})}><i className=\"far fa-trash-alt\"/></Button>\r\n                                                    <a rel=\"noopener noreferrer\" target=\"_blank\" href={process.env.REACT_APP_API_URL + `${file.url}` + \"/\" + `${file.foto_nombre}`}>{file.foto_nombre}</a>\r\n                                                </InputGroup>\r\n                                            </div>\r\n                                        ))}\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <Card>\r\n                                            <CardHeader>\r\n                                                <FormGroup className=\"row\">\r\n                                                    <Col className=\"d-flex\">\r\n                                                        <Label className=\"form-control-label\">¿Subir una nuevo archivo?</Label>\r\n                                                        <label className=\"custom-toggle custom-toggle-info ml-3\">\r\n                                                            <Input type=\"checkbox\" checked={hasFile} onChange={() => handleHasFile()}/>\r\n                                                            <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                                        </label>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                            </CardHeader>\r\n                                            {hasFile &&\r\n                                                <CardBody>\r\n                                                    <FormGroup>\r\n                                                        <InputGroup>\r\n                                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                                <Button \r\n                                                                    type=\"button\" color=\"primary\"\r\n                                                                    onClick={() => uploadFile()}>\r\n                                                                    Agregar \r\n                                                                </Button>\r\n                                                            </InputGroupAddon>\r\n                                                            <Input\r\n                                                                autoComplete=\"off\"\r\n                                                                type=\"text\"\r\n                                                                name=\"treatment_plan\"\r\n                                                                value={fileName}\r\n                                                                onChange={e => setFileName(e.target.value)}\r\n                                                            />\r\n                                                            <InputGroupAddon addonType=\"append\">\r\n                                                                <Button \r\n                                                                    type=\"button\" color=\"primary\" \r\n                                                                    onClick={() => {document.getElementById('files').click()}}>\r\n                                                                    Buscar\r\n                                                                </Button>\r\n                                                            </InputGroupAddon>\r\n                                                        </InputGroup>\r\n                                                        <h5 align=\"right\" style={{marginRight: \"10px\", marginBottom: \"0px\"}}>{helpText}</h5>\r\n                                                        <input \r\n                                                            type=\"file\" \r\n                                                            accept=\"image/*, .pdf\"\r\n                                                            id=\"files\" \r\n                                                            style={{visibility: 'hidden'}} \r\n                                                            onChange={e => loadFile(e.target.files)}\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            }\r\n                                        </Card>\r\n                                    </Col>\r\n                                </FormGroup> \r\n                            </>}\r\n                            <div className= \"float-right mb-4 mr-2\">\r\n                                <Button type=\"submit\" id=\"id-btn-save\" color=\"primary\">Guardar</Button>{' '}\r\n                                {/* <Button onClick={() => {setDisplayModal(!displayModal)}} color=\"secondary\">Cancelar</Button> */}\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MedicalAnamnesis;\r\n","import React, {useState} from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Card, CardBody, Label\r\n} from 'reactstrap'\r\n\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst MuscularExam = ({location}) => {\r\n\r\n    const [painpr, setPainpr] = useState(false)\r\n    const [painfr, setPainfr] = useState(false)\r\n    const [clickr, setClickr] = useState(false)\r\n    const [crepr, setCrepr] = useState(false)\r\n    const [painpl, setPainpl] = useState(false)\r\n    const [painfl, setPainfl] = useState(false)\r\n    const [clickl, setClickl] = useState(false)\r\n    const [crepl, setCrepl] = useState(false)\r\n    const [maseterod, setMaseterod] = useState(false)\r\n    const [maseteroi, setMaseteroi] = useState(false)\r\n    const [temporald, setTemporald] = useState(false)\r\n    const [temporali, setTemporali] = useState(false)\r\n    const [pterigoideoInternoi, setPterigoideoInternoi] = useState(false)\r\n    const [pterigoideoInternod, setPterigoideoInternod] = useState(false)\r\n    const [pterigoideoExternoi, setPterigoideoExternoi] = useState(false)\r\n    const [pterigoideoExternod, setPterigoideoExternod] = useState(false)\r\n    const [musculosCuello, setMusculosCuello] = useState(\"\")\r\n    const [bloqueoAr, setBloqueoAr] = useState(\"\")\r\n\r\n    const [diagnostico, setDiagnostico] = useState(\"\")\r\n    const [observaciones, setObservaciones] = useState(\"\")\r\n\r\n    const [next, setNext] = useState(false)\r\n\r\n    const addMuscularExam = async (e) => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"geriatrical-odonto-anamnesis/muscular-exam\",\r\n            {\r\n                anamId: location.state.anamId,\r\n                painpr: painpr,\r\n                painfr: painfr,\r\n                clickr: clickr,\r\n                crepr: crepr,\r\n                painpl: painpl,\r\n                painfl: painfl,\r\n                clickl: clickl,\r\n                crepl: crepl,\r\n                maseterod: maseterod,\r\n                maseteroi: maseteroi,\r\n                temporald: temporald,\r\n                temporali: temporali,\r\n                pterigoideoInternoi: pterigoideoInternoi,\r\n                pterigoideoInternod: pterigoideoInternod,\r\n                pterigoideoExternoi: pterigoideoExternoi,\r\n                pterigoideoExternod: pterigoideoExternod,\r\n                musculosCuello: musculosCuello,\r\n                bloqueoAr: bloqueoAr,\r\n\r\n                diagnostico: diagnostico,\r\n                observaciones: observaciones\r\n            }\r\n        )\r\n        if (!res.data.error)\r\n            setNext(true)\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <CardBody>\r\n                    <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Anamnesis Odonto-geriátrica\r\n                    </h1>\r\n                    <h5 className=\"heading-small\">Examen muscular</h5>\r\n                    <Form onSubmit={addMuscularExam} role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"4\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    ATM Derecha\r\n                                </Label>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"pain-pr\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPainpr(!painpr)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"pain-pr\"\r\n                                    >Dolor a la palpación </label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"pain-fr\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPainfr(!painfr)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"pain-fr\"\r\n                                    >Dolor función</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"click-r\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setClickr(!clickr)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"click-r\"\r\n                                    >Click</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"crep-r\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setCrepr(!crepr)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"crep-r\"\r\n                                    >Crepitación</label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    ATM Izquierda\r\n                                </Label>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"pain-pl\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPainpl(!painpl)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"pain-pl\"\r\n                                    >Dolor a la palpación </label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"pain-fl\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPainfl(!painfl)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"pain-fl\"\r\n                                    >Dolor función</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"click-l\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setClickl(!clickl)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"click-l\"\r\n                                    >Click</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"crep\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setCrepl(!crepl)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"crep\"\r\n                                    >Crepitación</label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Dolor\r\n                                </Label>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"masetero-d\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setMaseterod(!maseterod)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"masetero-d\"\r\n                                    >Masétero derecho</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"masetero-i\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setMaseteroi(!maseteroi)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"masetero-i\"\r\n                                    >Masétero izquierdo</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"temporal-d\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setTemporald(!temporald)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"temporal-d\"\r\n                                    >Temporal derecho</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"temporal-i\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setTemporali(!temporali)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"temporal-i\"\r\n                                    >Temporal Izquierdo</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"pterigoideo-interno-d\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPterigoideoInternod(!pterigoideoInternod)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"pterigoideo-interno-d\"\r\n                                    >Pterigoideo interno derecho</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"pterigoideo-interno-i\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPterigoideoInternoi(!pterigoideoInternoi)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"pterigoideo-interno-i\"\r\n                                    >Pterigoideo interno izquierdo</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"pterigoideo-externo-d\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPterigoideoExternod(!pterigoideoExternod)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"pterigoideo-externo-d\"\r\n                                    >Pterigoideo externo derecho</label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox custom-checkbox-primary\">\r\n                                    <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"pterigoideo-externo-i\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) => {\r\n                                            setPterigoideoExternoi(!pterigoideoExternoi)\r\n                                        }}\r\n                                    />\r\n                                    <label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"pterigoideo-externo-i\"\r\n                                    >Pterigoideo externo izquierdo</label>\r\n                                </div>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Musculos del cuello\r\n                                </Label>\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        setMusculosCuello(e.target.value)\r\n                                    }}\r\n\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Bloqueo articular\r\n                                </Label>\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        setBloqueoAr(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Diagnóstico\r\n                                </Label>\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        setDiagnostico(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                >\r\n                                    Observaciones\r\n                                </Label>\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        setObservaciones(e.target.value)\r\n                                    }}\r\n\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\"></Col>\r\n                            <Col md=\"2\">\r\n                                <Button type=\"submit\" color=\"primary\">Guardar</Button>\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    {next && <Redirect to={{\r\n                        pathname: \"/admin/dental-anamnesis\",\r\n                        state: {\r\n                            id: location.state.id,\r\n                            run: location.state.run,\r\n                            name: location.state.name,\r\n                            apellido: location.state.apellido,\r\n                            anamId: location.state.anamId\r\n                        }\r\n                    }}/>}\r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default MuscularExam","import React, { useState } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"reactstrap\";\r\n\r\n\r\n const AddMarkerForm = (props) => {\r\n     \r\n    const initialFormState = { \r\n        id: null, \r\n        idAnamnesis: null,\r\n        inspection:'',\r\n        palpation: '',\r\n        position_x: 0,\r\n        position_y: 0,\r\n        position_z: 0        \r\n    }\r\n    const [marker, setMarker] = useState(initialFormState)\r\n  \r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n    }\r\n    \r\n\r\n    return(\r\n        <>\r\n             <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.adding}>\r\n                <ModalHeader>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.addMarker(marker)\r\n\t\t\t\t        setMarker(initialFormState)\r\n                    }} \r\n                    role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" >Inspección</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"text\"\r\n                                    name=\"inspection\"\r\n                                    defaultValue={marker.inspection}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Palpación</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"text\"\r\n                                    name=\"palpation\"\r\n                                    defaultValue={marker.palpation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setAdding(false)}>Cancelar\r\n                             </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n    \r\n}\r\nexport default AddMarkerForm","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"reactstrap\";\r\n\r\nconst EditExtraOralForm = props => {\r\n    const [marker, setMarker] = useState(props.currentMarker)\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n    }\r\n\r\n    useEffect(() => {\r\n                setMarker(props.currentMarker)\r\n    },[props])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.editing}>\r\n                <ModalHeader>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.updateMarker(marker.id, marker)\r\n                    }} \r\n                    role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" >Inspección</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"text\"\r\n                                    name=\"inspection\"\r\n                                    defaultValue={marker.inspection}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Palpación</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"text\"\r\n                                    name=\"palpation\"\r\n                                    defaultValue={marker.palpation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setEditing(false)}>Cancelar\r\n                             </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default EditExtraOralForm","import React, { useState } from 'react'\r\nimport { Html } from \"@react-three/drei\";\r\nimport { useThree } from \"react-three-fiber\";\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    CardBody,\r\n    CardImg,\r\n    Row,\r\n    Col,\r\n    CardImgOverlay,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Popover,\r\n    PopoverHeader,\r\n    PopoverBody\r\n} from \"reactstrap\";\r\n\r\nconst TagExtraOral = (props) => {\r\n    const [hovered, setHover] = useState(false)\r\n    const [active, setActive] = useState(false)\r\n\r\n    const [modalDelete, setModalDelete] = useState(false);\r\n    const toggleDelete = () => setModalDelete(!modalDelete);\r\n    \r\n\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n    const toggle = () => setPopoverOpen(!popoverOpen);\r\n  \r\n\r\n    const handleClick = (e) => {\r\n        if(props.adding === 2){\r\n        setActive(!active)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <mesh\r\n           {...props}\r\n           scale={active ? [0.06, 0.06, 0.06] : [0.04, 0.04, 0.04]}\r\n           onClick={(e) => handleClick(e)}\r\n           onPointerOver={() => setHover(true)}\r\n           onPointerOut={() => setHover(false)}\r\n           position={[props.marker.position_x, props.marker.position_y, props.marker.position_z]/* scene.getObjectByName('mouseHelper').position */}\r\n           name='marker'\r\n           >\r\n               <sphereBufferGeometry args={[1, 32, 32]} />\r\n               <meshStandardMaterial color={hovered ? 'yellow' : 'lime'} emissive=\"blue\" roughness=\"0\" />\r\n               <Html center={false} style={{transform: 'translate3d(25%,-50%, 0)'}} zIndexRange={[90, 0]}>\r\n                   <Card style={{display: active ? 'block' : 'none', width: \"20rem\"}}>\r\n                        <ButtonGroup  size=\"lg\" style={{ zIndex: 100, position: 'absolute', right: \"0px\", top: \"0px\" }}>\r\n                           <Button  color=\"primary\" size=\"lg\" onClick={() => {props.editMarker(props.marker)}}><i className=\"fas fa-pencil-alt\"></i></Button>\r\n                           <Button color=\"danger\" size=\"sm\" onClick={toggleDelete}><i className=\"far fa-trash-alt\"></i></Button>\r\n                       </ButtonGroup>\r\n                       <CardImgOverlay onClick={() =>{console.log('abrir imagen')}}></CardImgOverlay>\r\n                       <CardImg\r\n                           alt=\"...\"\r\n                           src={require(\"assets/img/image-placeholder.png\")}\r\n                           top\r\n                       />   \r\n                       <CardBody style={{padding: \"10px\"}}>\r\n                              \r\n                                   <div className=\"small\" style={{padding: \"5px\"}} >\r\n                                   <Row >\r\n                                       <Col sm=\"5\"><h5>Inspección:</h5></Col>\r\n                                            <Col sm=\"7\">{props.marker.inspection}</Col>\r\n                                        <Col sm=\"5\"><h5>Palpación:</h5></Col>\r\n                                            <Col sm=\"7\">{props.marker.palpation}</Col>\r\n                                   </Row>\r\n                                   </div>\r\n                               \r\n                       </CardBody>\r\n                    </Card>\r\n                    <Modal isOpen={modalDelete} toggle={toggleDelete}>\r\n                        <ModalHeader toggle={toggleDelete} >Eliminar</ModalHeader>\r\n                        <ModalBody>¿Seguro que desea eliminar el marcador?</ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"danger\" onClick={() => {props.deleteMarker(props.marker.id)}}>Eliminar marcador</Button>{' '}\r\n                            <Button color=\"secundary\" onClick={toggleDelete}>Cancelar</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n               </Html>   \r\n           </mesh >\r\n    )\r\n}\r\nexport default TagExtraOral","import React from 'react'\r\nimport TagExtraOral from './TagExtraOral'\r\n\r\nconst MarkersGroup = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {props.markers.length > 0 ? (\r\n                 props.markers.map(marker => (\r\n                    <TagExtraOral key={marker.id} marker={marker} editMarker={props.editMarker} deleteMarker={props.deleteMarker} adding={props.adding}/>\r\n                ))\r\n            ) : (\r\n                console.log('')\r\n            )}        \r\n        </>\r\n    )    \r\n}\r\nexport default MarkersGroup","import React, { useRef } from \"react\";\r\nimport { extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\nextend({ OrbitControls });\r\n\r\nconst CameraControls = (props) => {\r\n  const {\r\n    camera,\r\n    gl: { domElement },\r\n  } = useThree();\r\n\r\n  const controls = useRef();\r\n\r\n  useFrame(() => controls.current.update());\r\n\r\n  return (\r\n    <orbitControls\r\n      ref={controls}\r\n      args={[camera, domElement]}\r\n      autoRotate={false}\r\n      enableZoom={true}\r\n      minDistance={props.minDistance}\r\n      maxDistance={props.maxDistance}\r\n      enableDamping={true}\r\n      dampingFactor={0.1}\r\n      enablePan={true}\r\n      maxAzimuthAngle={Math.PI/2}\r\n      minAzimuthAngle={-Math.PI/2}\r\n      maxPolarAngle={Math.PI-1}\r\n      minPolarAngle={1}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CameraControls;","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useThree } from 'react-three-fiber'\r\n\r\nconst MouseHelper = (props) => {\r\n\r\n    const {intersect} = useThree();\r\n\r\n    const helper = useRef();\r\n\r\n    const onMouseMove = () => {\r\n        if (intersect()[0]=== undefined) {return}\r\n        if (intersect().length > 0 && intersect()[0].object.name !== \"marker\") {\r\n            const p = helper.current.position.copy(intersect()[0].point)\r\n            const n = intersect()[0].face.normal.clone()\r\n            const mesh= intersect()[0].object\r\n            n.transformDirection( mesh.matrixWorld )\r\n            \r\n            n.multiplyScalar( 10 );\r\n            n.add( intersect()[0].point );\r\n            \r\n\r\n            helper.current.lookAt( n )\r\n            \r\n\r\n            if(props.typeExam === \"soft-tissues-exam\")\r\n             {props.handleOrientation(helper.current.rotation)}\r\n            \r\n    \r\n            props.handlePosition(helper.current.position)\r\n            \r\n            //console.log(helper.current.rotation)\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('mousemove', onMouseMove);        \r\n        return () => {\r\n        window.removeEventListener('mousemove', onMouseMove);\r\n        }\r\n    }, [])\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <mesh name={'mouseHelper'} ref={helper} visible={false} position={[0, 0, 0]} rotation={[0, 0, 0]}  >\r\n            <boxGeometry attach=\"geometry\" args={[0.01, 0.01, 0.02]} />\r\n            <meshStandardMaterial\r\n                attach=\"material\"\r\n                color=\"green\"\r\n            />\r\n            {/* <axesHelper args={[0.3, 0.3, 0.3]} /> */}\r\n        </mesh>\r\n    );\r\n}\r\n\r\n\r\nexport default MouseHelper;","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei/useGLTF'\r\n\r\nexport default function Model(props) {\r\n  const group = useRef()\r\n \r\n  const { nodes, materials } = useGLTF('/mesh/fantoma.gltf')\r\n\r\n  return (\r\n    <group ref={group} {...props}>\r\n      <mesh\r\n        material={materials.rostro}\r\n        geometry={nodes.rostro.geometry}\r\n        position={[0, 0.060551613569259644, 0.004202398471534252]}\r\n        rotation={[1.6643825434326098, 0, 0]}\r\n      />\r\n      <mesh\r\n        material={materials.mejillas}\r\n        geometry={nodes.mejillas.geometry}\r\n        position={[-0.000080880970926955, 0.011259406805038452, 0.029608502984046936]}\r\n        rotation={[0.5004097689342194, -0.001791890864640021, 1.566577833093736]}\r\n        scale={[0.02752080000936985, 0.02752080000936985, 0.02752080000936985]}\r\n      />\r\n      <mesh\r\n        material={materials.encia}\r\n        geometry={nodes.reb_alv_inf_papilas.geometry}\r\n        position={[-0.000799172383267432, -0.009652681648731232, 0.03410725295543671]}\r\n        rotation={[1.8928228644193699, 0, 0]}\r\n        scale={[0.2582273781299591, 0.2582273781299591, 0.2582273781299591]}\r\n      />\r\n      <mesh\r\n        material={materials.encia}\r\n        geometry={nodes.reb_alv_sup_papilas.geometry}\r\n        position={[0.000345383945386857, 0.025681160390377045, 0.050578609108924866]}\r\n        rotation={[1.7410711657057512, 0, 0]}\r\n        scale={[0.27773573994636536, 0.35650089383125305, 0.2803818881511688]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['11'].geometry}\r\n        position={[-0.003994331229478121, 0.010893426835536957, 0.0768766775727272]}\r\n        rotation={[-3.0071630492210586, 0.002414291791063278, 0.00906167556339743]}\r\n        scale={[0.011204231530427933, 0.011204230599105358, 0.011204234324395657]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['12'].geometry}\r\n        position={[-0.010505766607820988, 0.010835833847522736, 0.07499976456165314]}\r\n        rotation={[0.171762486364649, 0.1816762143486141, -0.13324115163286038]}\r\n        scale={[0.011716236360371113, 0.01171624194830656, 0.011716240085661411]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['13'].geometry}\r\n        position={[-0.014876807108521461, 0.011480335146188736, 0.07086978107690811]}\r\n        rotation={[-3.062080850076776, -0.15785569096305105, -0.14210624321810134]}\r\n        scale={[0.010929856449365616, 0.01092985924333334, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['14'].geometry}\r\n        position={[-0.017843618988990784, 0.011939216405153275, 0.06576838344335556]}\r\n        rotation={[-2.9558816327733015, -0.8441928409338672, 0.013479365597832632]}\r\n        scale={[0.002824323019012809, 0.002824323251843452, 0.002824322320520878]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['15'].geometry}\r\n        position={[-0.02155187539756298, 0.013107303529977798, 0.06107416749000549]}\r\n        rotation={[-2.8443970297594796, 0.006032054899517629, -0.17005640180211887]}\r\n        scale={[0.01092985738068819, 0.010929862037301064, 0.010929861105978489]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['16'].geometry}\r\n        position={[-0.023491911590099335, 0.015478692948818207, 0.05415882170200348]}\r\n        rotation={[0.3052715640704756, 0.1514005386779953, 0.00881980998714958]}\r\n        scale={[0.01092985738068819, 0.010929858312010765, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['17'].geometry}\r\n        position={[-0.026171064004302025, 0.01750633493065834, 0.04525551572442055]}\r\n        rotation={[0.2813074396516134, -0.016168546846929262, -0.07560743757460588]}\r\n        scale={[0.012300357222557068, 0.01230035349726677, 0.012300355359911919]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['18'].geometry}\r\n        position={[-0.02526138536632061, 0.021021351218223572, 0.03662993013858795]}\r\n        rotation={[-2.943025051433312, -0.007127610584466993, 0.02467918772471263]}\r\n        scale={[0.013175329193472862, 0.01317533291876316, 0.013175327330827713]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['21'].geometry}\r\n        position={[0.003753884928300977, 0.010954301804304123, 0.07641656696796417]}\r\n        rotation={[-3.0071630492210586, 0.002414291791063278, 0.00906167556339743]}\r\n        scale={[0.011204231530427933, 0.011204230599105358, 0.011204234324395657]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['22'].geometry}\r\n        position={[0.010648688301444054, 0.010981399565935135, 0.07463881373405457]}\r\n        rotation={[0.13500599460070634, 0.2000201263038056, -0.0927054542745681]}\r\n        scale={[0.011716235429048538, 0.01171624194830656, 0.011716238223016262]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['23'].geometry}\r\n        position={[0.015928350389003754, 0.01137053593993187, 0.07062441855669022]}\r\n        rotation={[-3.0521439426030064, -0.1690544039001924, -0.08175280710741449]}\r\n        scale={[0.010929858312010765, 0.010929865762591362, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['24'].geometry}\r\n        position={[0.019785869866609573, 0.01190902292728424, 0.06554607301950455]}\r\n        rotation={[-2.950575636043429, -1.0436269669490519, 0.017798599567659286]}\r\n        scale={[0.002779005095362663, 0.002779004164040089, 0.002779003232717514]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['25'].geometry}\r\n        position={[0.02267684042453766, 0.013182241469621658, 0.06102679669857025]}\r\n        rotation={[-2.776704751752609, -0.06559611469301187, -0.12021528960859659]}\r\n        scale={[0.01092985738068819, 0.010929862968623638, 0.010929855518043041]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['26'].geometry}\r\n        position={[0.024468332529067993, 0.015394609421491623, 0.05374370142817497]}\r\n        rotation={[0.2906544469516583, 0.07113730053424178, 0.15888895506087442]}\r\n        scale={[0.01092985738068819, 0.010929862968623638, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['26RR'].geometry}\r\n        position={[0.023969290778040886, 0.0202372744679451, 0.05526266247034073]}\r\n        rotation={[0.2906544469516583, 0.07113730053424178, 0.15888895506087442]}\r\n        scale={[0.01092985738068819, 0.010929862968623638, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['27'].geometry}\r\n        position={[0.02626725099980831, 0.017643023282289505, 0.04441720247268677]}\r\n        rotation={[0.19380006692502136, -0.002947695711077249, -0.0879387682806948]}\r\n        scale={[0.01135429460555315, 0.011354304850101471, 0.011354304850101471]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['28'].geometry}\r\n        position={[0.02643958292901516, 0.020649753510951996, 0.03665465861558914]}\r\n        rotation={[-2.974768386859708, 0.001369862461211565, -0.0982401554532288]}\r\n        scale={[0.012485920451581478, 0.012485918588936329, 0.012485921382904053]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['31'].geometry}\r\n        position={[0.002447221195325255, -0.01661025546491146, 0.058229316025972366]}\r\n        rotation={[-2.8271500671279814, 0.000549675068400726, 0.06565073128657505]}\r\n        scale={[0.01029480155557394, 0.010294806212186813, 0.010294806212186813]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['32'].geometry}\r\n        position={[0.006317142862826586, -0.016367049887776375, 0.05716734007000923]}\r\n        rotation={[-2.8228991376839048, -0.06116679668967896, 0.06881522208664206]}\r\n        scale={[0.010294799692928791, 0.010294809937477112, 0.010294808074831963]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['33'].geometry}\r\n        position={[0.010101011022925377, -0.01668919064104557, 0.05389733612537384]}\r\n        rotation={[-2.797139306653957, -0.007124261413611526, 0.025157747142358355]}\r\n        scale={[0.010294797830283642, 0.010294809937477112, 0.010294807143509388]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['34'].geometry}\r\n        position={[0.013997945934534073, -0.013729654252529144, 0.05071316286921501]}\r\n        rotation={[0.45716836781197906, -0.01762049218159059, -0.041652248302266805]}\r\n        scale={[0.01029480155557394, 0.010294802486896515, 0.010294807143509388]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['35'].geometry}\r\n        position={[0.017136117443442345, -0.01045650988817215, 0.045368023216724396]}\r\n        rotation={[0.2933683747535186, 0.022557511597531953, -0.08307932325151915]}\r\n        scale={[0.010693180374801159, 0.010693184100091457, 0.010693182237446308]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['36'].geometry}\r\n        position={[0.020051749423146248, -0.005422312766313553, 0.03839058801531792]}\r\n        rotation={[-2.8271498885702164, 1.30802818576e-7, 0.07269006711623194]}\r\n        scale={[0.010294799692928791, 0.010294802486896515, 0.01029480341821909]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['37'].geometry}\r\n        position={[0.02365131676197052, -0.000271812081336975, 0.02984842099249363]}\r\n        rotation={[-2.6623748135544107, 0.10443862010714858, -0.04716927697315141]}\r\n        scale={[0.01029480155557394, 0.01029480155557394, 0.01029480341821909]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['38'].geometry}\r\n        position={[0.027019735425710678, 0.004371806979179382, 0.02255745604634285]}\r\n        rotation={[0.26268483948667154, 0, 0]}\r\n        scale={[0.01029480155557394, 0.010294805280864239, 0.010294805280864239]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['41'].geometry}\r\n        position={[-0.002421815879642963, -0.016624249517917633, 0.05833512544631958]}\r\n        rotation={[-2.8271500671279814, 0.000549675068400726, 0.06565073128657505]}\r\n        scale={[0.01029480155557394, 0.010294806212186813, 0.010294806212186813]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['42'].geometry}\r\n        position={[-0.006706338375806808, -0.0164008978754282, 0.05740179121494293]}\r\n        rotation={[-2.8228991376839048, -0.06116679668967896, 0.06881522208664206]}\r\n        scale={[0.010294799692928791, 0.010294809937477112, 0.010294808074831963]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['43'].geometry}\r\n        position={[-0.011016355827450752, -0.015699779614806175, 0.05451933294534683]}\r\n        rotation={[-2.7287202043792913, 0.009174057244313387, -0.0668152686864502]}\r\n        scale={[0.010294804349541664, 0.010294805280864239, 0.010294805280864239]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['44'].geometry}\r\n        position={[-0.015221851877868176, -0.01249707117676735, 0.05043242126703262]}\r\n        rotation={[0.45716836781197906, -0.01762049218159059, -0.041652248302266805]}\r\n        scale={[0.01029480155557394, 0.010294802486896515, 0.010294807143509388]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['45'].geometry}\r\n        position={[-0.018012922257184982, -0.010478656738996506, 0.04450414702296257]}\r\n        rotation={[0.3811290984373485, 0.015172930194638928, -0.08473591065919076]}\r\n        scale={[0.011009068228304386, 0.01100907102227211, 0.011009070090949535]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['46'].geometry}\r\n        position={[-0.021531518548727036, -0.005402691662311554, 0.037969499826431274]}\r\n        rotation={[-2.828613097437125, 0.024724787440708322, -0.06593596484387185]}\r\n        scale={[0.010294797830283642, 0.010294800624251366, 0.010294805280864239]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['47'].geometry}\r\n        position={[-0.025020143017172813, -0.000635713338851929, 0.02924846112728119]}\r\n        rotation={[-2.578413478369357, -0.2753266534111244, 0.11464106521623652]}\r\n        scale={[0.010294805280864239, 0.010294805280864239, 0.010294804349541664]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['48'].geometry}\r\n        position={[-0.027460336685180664, 0.005100630223751068, 0.023030057549476624]}\r\n        rotation={[0.38706628116821845, 0.08692140128048739, 0.13731486619731875]}\r\n        scale={[0.01029480341821909, 0.01029480341821909, 0.010294806212186813]}\r\n      />\r\n      <mesh\r\n        material={materials.lengua_normal}\r\n        geometry={nodes.lengua_normal.geometry}\r\n        position={[-0.000008139821147779, -0.002079464495182037, 0.028254840523004532]}\r\n        rotation={[0.07953233935449347, 0, 0]}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/mesh/fantoma.gltf')\r\n","import React, { useState, useEffect, Suspense } from 'react'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport { Button, ButtonGroup, ButtonToolbar, Tooltip } from 'reactstrap'\r\nimport AddExtraOralForm from '../../../components/Fantoma/FormsExams/AddExtraOralForm'\r\nimport EditExtraOralForm from '../../../components/Fantoma/FormsExams/EditExtraOralForm'\r\nimport MarkersGroupExtraOral from '../../../components/Fantoma/Tag/MarkersGroupExtraOral'\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport CameraControls from '../../../components/Fantoma/CameraControls'\r\nimport MouseHelper  from '../../../components/Fantoma/MouseHelper'\r\nimport FantomaExtraOral  from '../../../components/Fantoma/FantomaExtraOral'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ExtraOral = ({location}) => {\r\n\r\n    const [positionHelper, setPositionHelper]= useState()\r\n\r\n    const [canvasSize, setCanvasSize] = useState({height: undefined}); \r\n    const [rSelected, setRSelected] = useState(null);\r\n\r\n    const [visibilityHelper, setVisibilityHelper] = useState(false) \r\n    \r\n    const initialFormState = { \r\n        id: null, \r\n        idAnamnesis: null,\r\n        inspection: '',\r\n        palpation: '',\r\n        position_x: null,\r\n        position_y: null,\r\n        position_z: null        \r\n    }\r\n\r\n    const getPositionHelper = (positionHelper) => {\r\n        setPositionHelper(positionHelper)\r\n    }\r\n\r\n    const [markers, setMarkers] = useState([])\r\n    const [currentMarker, setCurrentMarker ] = useState(initialFormState)\r\n    const [adding, setAdding ] = useState(false)\r\n    const [editing, setEditing ] = useState(false)\r\n\r\n    const [addTooltipOpen, setAddTooltipOpen] = useState(false);\r\n    const [editTooltipOpen, setEditTooltipOpen] = useState(false);\r\n    const addToggle = () => setAddTooltipOpen(!addTooltipOpen);\r\n    const editToggle = () => setEditTooltipOpen(!editTooltipOpen);\r\n\r\n\r\n\r\n    const getMarkers = async () => {\r\n        const newMarkers = [] \r\n        const res = await Axios.get(\"extra-oral-exam/\" + location.state.anamId)\r\n        \r\n        .then(response => {\r\n            setMarkers([])\r\n            response.data.result.forEach(element => {\r\n                newMarkers.push({\r\n                    id: element.extra_oral_exam_id,\r\n                    idAnamnesis: location.state.anamId, \r\n                    inspection: element.inspection,\r\n                    palpation: element.palpation,\r\n                    position_x:element.position_x, \r\n                    position_y:element.position_y, \r\n                    position_z:element.position_z, \r\n                });  \r\n                setMarkers([...newMarkers])   \r\n            });\r\n        })  \r\n    }\r\n\r\n\r\n    const helperAddMarker = ()=>{\r\n        if(rSelected===1){\r\n            setAdding(true)\r\n        }\r\n    }\r\n\r\n\r\n    const addMarker = async (marker) => {\r\n        if(rSelected===1){\r\n            setAdding(true)\r\n            const res = await Axios.post(\"extra-oral-exam\",\r\n                {\r\n                    dentalAnamnesisId : location.state.anamId,\r\n                    inspection: marker.inspection,\r\n                    palpation: marker.palpation,\r\n                    position_x: positionHelper.x,\r\n                    position_y: positionHelper.y,\r\n                    position_z: positionHelper.z,\r\n                }\r\n\t\t    )\r\n            if (!res.data.error)\r\n                //alert(\"Etiqueta guardada\")\r\n                setMarkers([ ...markers, marker ])\r\n                getMarkers()\r\n        }\r\n        setAdding(false)\r\n\t}\r\n\r\n    const updateMarker = async (id, updatedMarker) => {\r\n        setEditing(false)\r\n        const res = await Axios.put(\"extra-oral-exam\",\r\n            {\r\n                dentalAnamnesisId : location.state.anamId,\r\n                inspection: updatedMarker.inspection,\r\n                palpation: updatedMarker.palpation,\r\n                observation: updatedMarker.observation,\r\n                position_x: updatedMarker.position_x,\r\n                position_y: updatedMarker.position_y,\r\n                position_z: updatedMarker.position_z,\r\n                extraOralExamId: id\r\n            }\r\n        )\r\n        if (!res.data.error){\r\n\t\t    setMarkers(markers.map(marker => (marker.id === id ? updatedMarker : marker)))\r\n            getMarkers()\r\n            //alert(\"Etiqueta guardada\")\r\n        }\r\n\t}\r\n\r\n    const editMarker = marker => {\r\n\t\tsetEditing(true)\r\n        setCurrentMarker({ \r\n            id: marker.id, \r\n            idAnamnesis: marker.idAnamnesis,\r\n            inspection: marker.inspection,\r\n            palpation: marker.palpation,\r\n            position_x: marker.position_x,\r\n            position_y: marker.position_y,\r\n            position_z: marker.position_z\r\n        })\r\n    }\r\n\r\n    const deleteMarker = async (id) => {\r\n\r\n        setEditing(false)\r\n        const res = await Axios.delete(\"extra-oral-exam/\" + id);\r\n        if (!res.data.error) {\r\n            setMarkers(markers.filter(marker => marker.id !== id))\r\n            getMarkers()\r\n            //alert(\"Etiqueta eliminada\")\r\n        }\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst navbarSize = document.getElementsByClassName('navbar-top')[0];\r\n\t\tconst footerSize = document.getElementsByClassName('footer')[0];\r\n\t\tconst handleResize = () => {\r\n\t\t\tsetCanvasSize({\r\n\t\t\t\twidth: window.innerWidth - navbarSize.offsetWidth - footerSize.offsetWidth,\r\n\t\t\t\theight: window.innerHeight - navbarSize.offsetHeight - footerSize.offsetHeight\r\n\t\t\t});\r\n\t\t}\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n        handleResize();\r\n        \r\n        getMarkers()\r\n        return () => window.removeEventListener(\"resize\", handleResize); \r\n\t}, []);\r\n    \r\n\r\n    return (\r\n        <>\r\n        <ButtonToolbar style={{ zIndex: 100, position: 'absolute', top:'90%', left:'50%', transform:'translate(-50%, -50%)' }}>\r\n            <ButtonGroup>\r\n\t\t\t\t<Button color=\"primary\" size=\"lg\" onClick={() => setRSelected(1)} active={rSelected === 1} id=\"add\"><i className=\"fas fa-tags\" ></i></Button>\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        isOpen={addTooltipOpen}\r\n                        target={\"add\"}\r\n                        toggle={addToggle}\r\n                    >\r\n                        Añadir etiqueta\r\n                    </Tooltip>\r\n\t\t\t\t<Button color=\"primary\" size=\"lg\" onClick={() => setRSelected(2)} active={rSelected === 2} id=\"edit\"><i className=\"ni ni-active-40\" ></i></Button>\r\n                <Tooltip\r\n                        placement=\"top\"\r\n                        isOpen={editTooltipOpen}\r\n                        target={\"edit\"}\r\n                        toggle={editToggle}\r\n                    >\r\n                        Editar etiqueta\r\n                    </Tooltip>\r\n\t\t\t</ButtonGroup>\r\n        </ButtonToolbar>\r\n            <ButtonGroup style={{ zIndex: 100, position: 'absolute', top:'90%', left:'95%', transform:'translate(-100%, -50%)' }}>\r\n                <Button color=\"primary\" active size=\"lg\">Extra Oral</Button>\r\n                <Button color=\"primary\" size=\"lg\"><Link style={{color: \"white\"}} to={{\r\n                    state: {\r\n                        id: location?.state?.id,\r\n                        run: location?.state?.run,\r\n                        name: location?.state?.name,\r\n                        apellido: location?.state?.apellido,\r\n                        anamId: location?.state?.anamId\r\n                    },\r\n                    pathname: \"/admin/soft-tissues-exam\"\r\n                    }}>Tejidos Blandos</Link>\r\n                </Button>\r\n                <Button color=\"primary\" size=\"lg\"><Link style={{color: \"white\"}} to={{\r\n                    state: {\r\n                        id: location?.state?.id,\r\n                        run: location?.state?.run,\r\n                        name: location?.state?.name,\r\n                        apellido: location?.state?.apellido,\r\n                        anamId: location?.state?.anamId\r\n                    },\r\n                    pathname: \"/admin/odontogram\"\r\n                    }}>Odontograma</Link>\r\n                </Button>\r\n                <Button color=\"info\" size=\"lg\"><Link style={{color: \"white\"}} to={{\r\n                    state: {\r\n                        id: location?.state?.id,\r\n                        run: location?.state?.run,\r\n                        name: location?.state?.name,\r\n                        apellido: location?.state?.apellido,\r\n                        anamId: location?.state?.anamId\r\n                    },\r\n                    pathname: \"/admin/periodontogram\"\r\n                    }}>Periodontograma</Link>\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            {editing ? (\r\n                <EditExtraOralForm\r\n                    editing={editing}\r\n                    setEditing={setEditing}\r\n                    currentMarker={currentMarker}\r\n                    updateMarker={updateMarker}\r\n                />\r\n            ) : (\r\n                <AddExtraOralForm\r\n                    adding={adding}\r\n                    setAdding={setAdding} \r\n                    addMarker={addMarker} \r\n                />\r\n            )}\r\n            <Canvas className=\"canvas\"\r\n\t\t\t\tgl={{ antialias: true }}\r\n\t\t\t\tshadowMap\r\n\t\t\t\tpixelRatio={window.devicePixelRatio}\r\n\t\t\t\tstyle={{ height: canvasSize.height, cursor: visibilityHelper ? ('crosshair'):('default') }}\r\n\t\t\t\tcamera={{ fov: 55, position: [0, 0, 10] }}\r\n\t\t\t>\r\n\t\t\t\t<CameraControls minDistance={1.3} maxDistance={3.5}/>\r\n\t\t\t\t<spotLight intensity={0.4} position={[300, 300, 2000]} castShadow={true} />\r\n\t\t\t\t<spotLight intensity={0.35} position={[-3000, 1300, -1000]} castShadow={true} />\r\n\t\t\t\t<ambientLight intensity={0.07} />\r\n\t\t\t\t<Suspense fallback=\"loading\">\r\n                {rSelected === 1 ?(<MouseHelper visibility={visibilityHelper} handlePosition={getPositionHelper}/>):(<></>)}\r\n\t\t\t\t\t<FantomaExtraOral scale={[10, 10, 10]} position={[0, 0, 0]} onDoubleClick={helperAddMarker} onPointerOver={() => setVisibilityHelper(true)} onPointerOut={() => setVisibilityHelper(false)}/>\r\n                    <MarkersGroupExtraOral markers={markers} editMarker={editMarker} deleteMarker={deleteMarker} adding={rSelected} />\t\r\n\t\t\t\t</Suspense>\r\n\t\t\t\t{/* <Stats /> */}\r\n\t\t\t</Canvas>\r\n        </>\r\n    )\r\n}\r\nexport default ExtraOral","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    Row,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from \"reactstrap\";\r\nimport { getList } from 'helpers/ListHelper';\r\n\r\n\r\n\r\nconst AddMarkerForm = (props) => {\r\n    const initialFormState = {\r\n        id: null,\r\n        idAnamnesis: null,\r\n        form: 1,\r\n        length: 0,\r\n        width: 0,\r\n        height: 0,\r\n        color: 1,\r\n        surface: 1,\r\n        consistency: 1,\r\n        evolution_time: null,\r\n        evolution_form: 1,\r\n        symptomatology: 1,\r\n        edge: 1,\r\n        localization: 1,\r\n        observation: '',\r\n        position_x: 0,\r\n        position_y: 0,\r\n        position_z: 0,\r\n    }\r\n    const [marker, setMarker] = useState(initialFormState)\r\n\r\n    const [formData, setFormData] = useState([]);\r\n    const [colorData, setColorData] = useState([]);\r\n    const [surfaceData, setSurfaceData] = useState([]);\r\n    const [consistencyData, setConsistencyData] = useState([]);\r\n    const [evolutionFormData, setEvolutionFormData] =useState([]);\r\n    const [symptomatologyData, setSymptomatologyData] = useState([]);\r\n    const [edgeData, setEdgeData] = useState([]);\r\n    const [localizationData, setLocalizationData] = useState([]);\r\n\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(setFormData, \"list/forms\")\r\n        getData(setColorData, \"list/colors\")\r\n        getData(setSurfaceData, \"list/surfaces\")\r\n        getData(setConsistencyData, \"list/consistencies\")\r\n        getData(setEvolutionFormData, \"list/evolution-forms\")\r\n        getData(setSymptomatologyData, \"list/symptomatologies\")\r\n        getData(setEdgeData, \"list/edges\")\r\n        getData(setLocalizationData, \"list/localizations\")\r\n    }, [])\r\n\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n        console.log(marker.orientation_x)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.adding}\r\n                size=\"xl\"\r\n            >\r\n                <ModalHeader >\r\n                   Descripción de la lesión\r\n                </ModalHeader>\r\n                <ModalBody className=\"pt-1\">\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.addMarker(marker)\r\n                        setMarker(initialFormState)\r\n                    }}\r\n                        role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma</Label>\r\n                                <Input\r\n                                    id=\"form\"\r\n                                    type=\"select\"\r\n                                    name=\"form\"\r\n                                    defaultValue={marker.form}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {formData.map(form => (\r\n                                        <option \r\n                                            key={form.name} \r\n                                            value={form.form_id} \r\n                                            onFocus={(e)=>console.log(e.target) } \r\n                                            id={form.name}  \r\n                                            data-toggle=\"tooltip\" \r\n                                            title={form.description}\r\n                                            >\r\n                                                {form.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Color</Label>\r\n                                <Input\r\n                                    id=\"color\"\r\n                                    type=\"select\"\r\n                                    name=\"color\"\r\n                                    defaultValue={marker.color}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {colorData.map(color => (\r\n                                        <option key={color.value} value={color.color_id} id={color.value} >{color.value}</option>\r\n                                    ))}\r\n                                    \r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Superficie</Label>\r\n                                <Input\r\n                                    id=\"surface\"\r\n                                    type=\"select\"\r\n                                    name=\"surface\"\r\n                                    defaultValue={marker.surface}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {surfaceData.map(surface => (\r\n                                        <option key={surface.value} value={surface.surface_id}>{surface.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup> \r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\" >Tamaño</Label>\r\n                                <InputGroup>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        min={1}\r\n                                        max={150}\r\n                                        step=\"1\"\r\n                                        name=\"length\"\r\n                                        placeholder=\"largo\"\r\n                                        /* defaultValue={0} */\r\n                                        onChange={(e) => { handleInputChange(e) }}\r\n                                        required\r\n                                    />\r\n                                        <Input\r\n                                        type=\"number\"\r\n                                        min={1}\r\n                                        max={150}\r\n                                        step=\"1\"\r\n                                        name=\"width\"\r\n                                        placeholder=\"ancho\"\r\n                                        /* defaultValue={0} */\r\n                                        onChange={(e) => { handleInputChange(e) }}\r\n                                        required\r\n                                    />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        min={0}\r\n                                        max={150}\r\n                                        step=\"1\"\r\n                                        name=\"height\"\r\n                                        placeholder=\"alto\"\r\n                                        /* defaultValue={0} */\r\n                                        onChange={(e) => { handleInputChange(e) }}\r\n                                    />\r\n                                    <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                </InputGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Consistencia</Label>\r\n                                <Input\r\n                                    id=\"consistency\"\r\n                                    type=\"select\"\r\n                                    name=\"consistency\"\r\n                                    defaultValue={marker.consistency}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {consistencyData.map(consistency => (\r\n                                        <option key={consistency.name} value={consistency.consistency_id}>{consistency.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Bordes</Label>\r\n                                <Input\r\n                                    id=\"edge\"\r\n                                    type=\"select\"\r\n                                    name=\"edge\"\r\n                                    defaultValue={marker.edge}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {edgeData.map(edge => (\r\n                                        <option key={edge.name} value={edge.edge_id}>{edge.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Sintomatología</Label>\r\n                                <Input\r\n                                    id=\"symptomatology\"\r\n                                    type=\"select\"\r\n                                    name=\"symptomatology\"\r\n                                    defaultValue={marker.symptomatology}\r\n                                    onChange={handleInputChange}>\r\n                                    {symptomatologyData.map(symptomatology => (\r\n                                        <option key={symptomatology.value} value={symptomatology.symptomatology_id}>{symptomatology.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma de evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_form\"\r\n                                    type=\"select\"\r\n                                    name=\"evolution_form\"\r\n                                    defaultValue={marker.evolution_form}\r\n                                    onChange={handleInputChange}>\r\n                                     {evolutionFormData.map(evolutionForm => (\r\n                                        <option key={evolutionForm.value} value={evolutionForm.evolution_form_id}>{evolutionForm.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Tiempo de evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_time\"\r\n                                    type=\"text\"\r\n                                    name=\"evolution_time\"\r\n                                    maxLength=\"20\"\r\n                                    defaultValue={marker.evolution_time}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}>\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>               \r\n                        <FormGroup className=\"row\"> \r\n                           \r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Localización</Label>\r\n                                <Input\r\n                                    id=\"localization\"\r\n                                    type=\"select\"\r\n                                    name=\"localization\"\r\n                                    defaultValue={marker.localization}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                {localizationData.map(localization => (\r\n                                        <option key={localization.value} value={localization.localization_id}>{localization.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Observaciones</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"textarea\"\r\n                                    name=\"observation\"\r\n                                    maxLength=\"200\"\r\n                                    defaultValue={marker.observation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                           \r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setAdding(false)}>Cancelar\r\n                             </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default AddMarkerForm","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Label,\r\n    Col,\r\n    Row,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from \"reactstrap\";\r\nimport { getList } from 'helpers/ListHelper';\r\n\r\nconst EditMarkerForm = props => {\r\n    const [marker, setMarker] = useState(props.currentMarker)\r\n\r\n    const [formData, setFormData] = useState([]);\r\n    const [colorData, setColorData] = useState([]);\r\n    const [surfaceData, setSurfaceData] = useState([]);\r\n    const [consistencyData, setConsistencyData] = useState([]);\r\n    const [evolutionFormData, setEvolutionFormData] =useState([]);\r\n    const [symptomatologyData, setSymptomatologyData] = useState([]);\r\n    const [edgeData, setEdgeData] = useState([]);\r\n    const [localizationData, setLocalizationData] = useState([]);\r\n\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(setFormData, \"list/forms\")\r\n        getData(setColorData, \"list/colors\")\r\n        getData(setSurfaceData, \"list/surfaces\")\r\n        getData(setConsistencyData, \"list/consistencies\")\r\n        getData(setEvolutionFormData, \"list/evolution-forms\")\r\n        getData(setSymptomatologyData, \"list/symptomatologies\")\r\n        getData(setEdgeData, \"list/edges\")\r\n        getData(setLocalizationData, \"list/localizations\")\r\n        setMarker(props.currentMarker)\r\n    }, [props])\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        setMarker({ ...marker, [name]: value })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.editing}\r\n                size=\"lg\">\r\n                <ModalHeader>\r\n                    {/* {marker.id +\" \"+ marker.idAnamnesis } */}\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={event => {\r\n                        event.preventDefault()\r\n                        props.updateMarker(marker.id, marker)\r\n                    }} \r\n                    role=\"form\">\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma</Label>\r\n                                <Input\r\n                                    id=\"form\"\r\n                                    type=\"select\"\r\n                                    name=\"form\"\r\n                                    value={marker.form}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {formData.map(form => (\r\n                                        <option \r\n                                            key={form.name} \r\n                                            value={form.form_id} \r\n                                            onFocus={(e)=>console.log(e.target) } \r\n                                            id={form.name}  \r\n                                            data-toggle=\"tooltip\" \r\n                                            title={form.description}\r\n                                            >\r\n                                                {form.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Color</Label>\r\n                                <Input\r\n                                    id=\"color\"\r\n                                    type=\"select\"\r\n                                    name=\"color\"\r\n                                    value={marker.color}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {colorData.map(color => (\r\n                                        <option key={color.value} value={color.color_id} id={color.value} >{color.value}</option>\r\n                                    ))}\r\n                                    \r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md='12'>\r\n                                <Label className=\"form-control-label\" >Tamaño</Label>\r\n                            </Col>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                min={1}\r\n                                                max={150}\r\n                                                step=\"1\"\r\n                                                name=\"length\"\r\n                                                placeholder=\"largo\"\r\n                                                defaultValue={marker.length}\r\n                                                onChange={(e) => { handleInputChange(e) }}\r\n                                                required\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                min={1}\r\n                                                max={150}\r\n                                                step=\"1\"\r\n                                                name=\"width\"\r\n                                                placeholder=\"ancho\"\r\n                                                defaultValue={marker.width}\r\n                                                onChange={(e) => { handleInputChange(e) }}\r\n                                                required\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <InputGroup>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                min={0}\r\n                                                max={150}\r\n                                                step=\"1\"\r\n                                                name=\"height\"\r\n                                                placeholder=\"alto\"\r\n                                                defaultValue={marker.height}\r\n                                                onChange={(e) => { handleInputChange(e) }}\r\n                                            />\r\n                                            <InputGroupAddon addonType=\"append\">mm</InputGroupAddon>\r\n                                        </InputGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </FormGroup>                      \r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Superficie</Label>\r\n                                <Input\r\n                                    id=\"surface\"\r\n                                    type=\"select\"\r\n                                    name=\"surface\"\r\n                                    value={marker.surface}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {surfaceData.map(surface => (\r\n                                        <option key={surface.value} value={surface.surface_id}>{surface.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Consistencia</Label>\r\n                                <Input\r\n                                    id=\"consistency\"\r\n                                    type=\"select\"\r\n                                    name=\"consistency\"\r\n                                    value={marker.consistency}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {consistencyData.map(consistency => (\r\n                                        <option key={consistency.name} value={consistency.consistency_id}>{consistency.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                            <Label className=\"form-control-label\">Bordes</Label>\r\n                                <Input\r\n                                    id=\"edge\"\r\n                                    type=\"select\"\r\n                                    name=\"edge\"\r\n                                    value={marker.edge}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {edgeData.map(edge => (\r\n                                        <option key={edge.name} value={edge.edge_id}>{edge.name}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Sintomatología</Label>\r\n                                <Input\r\n                                    id=\"symptomatology\"\r\n                                    type=\"select\"\r\n                                    name=\"symptomatology\"\r\n                                    value={marker.symptomatology}\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                    {symptomatologyData.map(symptomatology => (\r\n                                        <option key={symptomatology.value} value={symptomatology.symptomatology_id}>{symptomatology.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Forma evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_form\"\r\n                                    type=\"select\"\r\n                                    name=\"evolution_form\"\r\n                                    value={marker.evolution_form}\r\n                                    onChange={handleInputChange}>\r\n                                     {evolutionFormData.map(evolutionForm => (\r\n                                        <option key={evolutionForm.value} value={evolutionForm.evolution_form_id}>{evolutionForm.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Localización</Label>\r\n                                <Input\r\n                                    id=\"localization\"\r\n                                    type=\"select\"\r\n                                    name=\"localization\"\r\n                                    value={marker.localization}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                >\r\n                                {localizationData.map(localization => (\r\n                                        <option key={localization.value} value={localization.localization_id}>{localization.value}</option>\r\n                                    ))}\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Tiempo evolución</Label>\r\n                                <Input\r\n                                    id=\"evolution_time\"\r\n                                    type=\"text\"\r\n                                    name=\"evolution_time\"\r\n                                    maxLength=\"20\"\r\n                                    defaultValue={marker.evolution_time}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}>\r\n                                </Input>\r\n                            </Col>\r\n                            <Col>\r\n                                <Label className=\"form-control-label\">Observaciones</Label>\r\n                                <Input\r\n                                    id=\"example-text-input1\"\r\n                                    type=\"textarea\"\r\n                                    name=\"observation\"\r\n                                    maxLength=\"200\"\r\n                                    defaultValue={marker.observation}\r\n                                    //pattern=\"^[ñA-Za-z]*[ñA-Za-z][ñA-Za-z]*$\"\r\n                                    //required\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <ModalFooter>\r\n                            <Button type=\"submit\" color=\"primary\" >\r\n                                Guardar\r\n                            </Button>\r\n                            <Button color=\"secondary\"\r\n                                onClick={() => props.setEditing(false)}>Cancelar\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default EditMarkerForm","import React, { useState, useEffect, useRef} from 'react'\r\nimport { Html } from \"@react-three/drei\";\r\nimport { useThree } from \"react-three-fiber\";\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    CardBody,\r\n    CardImg,\r\n    CardTitle,\r\n    CardText,\r\n    CardFooter,\r\n    Row,\r\n    Col,\r\n    CardImgOverlay, \r\n    Table,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from \"reactstrap\";\r\nimport { useGLTF } from '@react-three/drei/useGLTF'\r\nimport { getList } from 'helpers/ListHelper';\r\n\r\n\r\nconst Tag = (props) => {\r\n    \r\n    const [hovered, setHover] = useState(false)\r\n    const [active, setActive] = useState(false) \r\n    const { nodes, materials } = useGLTF('/mesh/lesiones.gltf')\r\n    const htmlref = useRef()\r\n\r\n\r\n    const [modalDelete, setModalDelete] = useState(false);\r\n    const toggleDelete = () => setModalDelete(!modalDelete);\r\n\r\n    const [formData, setFormData] = useState([]);\r\n    const [colorData, setColorData] = useState([]);\r\n    const [surfaceData, setSurfaceData] = useState([]);\r\n    const [consistencyData, setConsistencyData] = useState([]);\r\n    const [evolutionFormData, setEvolutionFormData] =useState([]);\r\n    const [symptomatologyData, setSymptomatologyData] = useState([]);\r\n    const [edgeData, setEdgeData] = useState([]);\r\n    const [localizationData, setLocalizationData] = useState([]);\r\n\r\n    const getData = async (set, route) => {\r\n        const e = await getList(route)\r\n        set(e)\r\n    }\r\n\r\n    const [form, setForm] = useState()\r\n    const [color, setColor] = useState()\r\n    const [surface, setSurface] = useState()\r\n    const [consistency, setConsistency] = useState()\r\n    const [evolutionForm, setEvolutionForm] = useState()\r\n    const [symptomatology, setSymptomatology] = useState()\r\n    const [edge, setEdge] = useState()\r\n    const [localization, setLocalization] = useState()\r\n\r\n\r\n    const position=[props.marker.position_x, props.marker.position_y, props.marker.position_z]\r\n    const orientation=[props.marker.orientation_x, props.marker.orientation_y, props.marker.orientation_z, \"XYZ\"]\r\n\r\n    const styleTd={\r\n        whiteSpace: 'normal' , \r\n        paddingRight: \"0.5rem\",\r\n        paddingLeft: \"0.5rem\",\r\n        textAlign: 'justify',\r\n        textJustify: 'inter-word',\r\n        maxWidth: '50%',\r\n    }\r\n    const styleTh={\r\n        paddingRight: \"0.5rem\",\r\n        paddingLeft: \"0.5rem\",\r\n        textAlign: 'justify',\r\n        textJustify: 'inter-word',\r\n        maxWidth: '50%',\r\n    }\r\n    \r\n    const getTranslate3d = (element) =>  {\r\n        const values = element.style.transform.split(/\\w+\\(|\\);?/);\r\n        if (!values[1] || !values[1].length) {\r\n            return [];\r\n        }\r\n        console.log(values[1].split(/,\\s?/g))\r\n        return values[1].split(/,\\s?/g);\r\n        \r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        if(props.adding=== 2){\r\n        setActive(!active)\r\n        active ? console.log(getTranslate3d(htmlref.current.offsetParent)): getTranslate3d(htmlref.current.offsetParent)}\r\n\r\n        setForm(formData.find(x => x.form_id == props.marker.form).name)\r\n        setColor(colorData.find(x => x.color_id == props.marker.color).value)\r\n        setSurface(surfaceData.find(x => x.surface_id == props.marker.surface).value)\r\n        setConsistency(consistencyData.find(x => x.consistency_id == props.marker.consistency).name)\r\n        setEvolutionForm(evolutionFormData.find(x => x.evolution_form_id == props.marker.evolution_form).value)\r\n        setSymptomatology(symptomatologyData.find(x => x.symptomatology_id == props.marker.symptomatology).value)\r\n        setEdge(edgeData.find(x => x.edge_id == props.marker.edge).name)\r\n        setLocalization(localizationData.find(x => x.localization_id == props.marker.localization).value)\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas= document.getElementsByClassName('canvas')[0];\r\n        const htmlDrei= document.getElementsByClassName('html-drei')[0];\r\n        getData(setFormData, \"list/forms\")\r\n        getData(setColorData, \"list/colors\")\r\n        getData(setSurfaceData, \"list/surfaces\")\r\n        getData(setConsistencyData, \"list/consistencies\")\r\n        getData(setEvolutionFormData, \"list/evolution-forms\")\r\n        getData(setSymptomatologyData, \"list/symptomatologies\")\r\n        getData(setEdgeData, \"list/edges\")\r\n        getData(setLocalizationData, \"list/localizations\")\r\n        \r\n\t}, []);\r\n\r\n\r\n    \r\n    return (\r\n        \r\n        <mesh\r\n           {...props}\r\n           material={materials.fibroma_traumatico}\r\n           geometry={nodes.fibroma_traumatico.geometry}\r\n           scale={[props.marker.length*0.001,props.marker.width*0.003, props.marker.height*0.003]}\r\n           /* scale={active ? [0.04, 0.04, 0.04] : [0.03, 0.03, 0.03]} */\r\n           onClick={(e) => handleClick(e)}\r\n           onPointerOver={() => setHover(true)}\r\n           onPointerOut={() => setHover(false)}\r\n           position={position}\r\n           rotation={orientation}\r\n           name='marker'\r\n           >\r\n              {/*  <sphereBufferGeometry  args={[0.5, 32, 32]} />\r\n               <meshStandardMaterial color={hovered ? 'yellow' : 'lime'} emissive=\"blue\" roughness=\"0\" /> */}\r\n               <Html ref={htmlref} className='html-drei' style={{transform: 'translate3d(15%,-50%, 0)'}} zIndexRange={[90, 0]} >\r\n                   <Card style={{display: active ? 'block' : 'none', width: \"21rem\", wordWrap: 'inherit'}}>\r\n                            <Button  onClick={() => {setActive(!active)}} className=\"close\"color=\"primary\" size=\"lg\" style={{ zIndex: 100, position: 'absolute', right: \"0px\", top: \"0.4rem\" }}><span aria-hidden=\"true\">&times;</span></Button>\r\n                        <ButtonGroup  size=\"lg\" style={{ zIndex: 100, position: 'absolute', left: \"0px\", top: \"0px\" }}>\r\n                           <Button  color=\"primary\" size=\"lg\" onClick={() => {props.editMarker(props.marker)}}><i className=\"fas fa-pencil-alt\"></i></Button>\r\n                           <Button color=\"danger\" size=\"sm\" onClick={toggleDelete}><i className=\"far fa-trash-alt\"></i></Button>\r\n                       </ButtonGroup>\r\n                       <CardImgOverlay onClick={() =>{console.log('abrir imagen')}}>\r\n                           {/* <CardTitle className=\"text-white\">Fibroma traumático</CardTitle> */}\r\n                       </CardImgOverlay>\r\n                       <CardImg\r\n                           alt=\"...\"\r\n                           src={require(\"assets/img/image-placeholder.png\")}\r\n                           top\r\n                       />   \r\n                       <CardBody style={{padding: \"5px\"}}>\r\n                                <Table className=\"table table-sm\" >\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Forma:</th>\r\n                                            <td style={styleTd}>{form}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Tamaño:</th>\r\n                                            <td style={styleTd}>{props.marker.length} x {props.marker.width} x {props.marker.height} mm</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Color:</th>\r\n                                            <td style={styleTd}>{color}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Superficie:</th>\r\n                                            <td style={styleTd}>{surface}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Consistencia:</th>\r\n                                            <td style={styleTd}>{consistency}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Tiempo de evolución:</th>\r\n                                            <td style={styleTd}>{props.marker.evolution_time}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Forma de evolución:</th>\r\n                                            <td style={styleTd}>{evolutionForm}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Sintomatología:</th>\r\n                                            <td style={styleTd}>{symptomatology}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Bordes:</th>\r\n                                            <td style={styleTd}>{edge}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Localización:</th>\r\n                                            <td style={styleTd}>{localization}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style={styleTh} scope=\"row\">Observaciones:</th>\r\n                                            <td style={styleTd}>{props.marker.observation}</td>\r\n                                        </tr>                 \r\n                                    </tbody>\r\n                                </Table>\r\n                       </CardBody>\r\n                   </Card>\r\n                   <Modal isOpen={modalDelete} toggle={toggleDelete}>\r\n                        <ModalHeader toggle={toggleDelete} >Eliminar</ModalHeader>\r\n                        <ModalBody>¿Seguro que desea eliminar el marcador?</ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"danger\" onClick={() => {props.deleteMarker(props.marker.id)}}>Eliminar marcador</Button>{' '}\r\n                            <Button color=\"secundary\" onClick={toggleDelete}>Cancelar</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n               </Html>   \r\n           </mesh >\r\n         \r\n        )\r\n}\r\nexport default Tag\r\n\r\nuseGLTF.preload('/mesh/lesiones.gltf')","import React from 'react'\r\nimport Tag from './Tag'\r\n\r\nconst MarkersGroup = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {props.markers.length > 0 ? (\r\n                 props.markers.map(marker => (\r\n                    <Tag key={marker.id} marker={marker} editMarker={props.editMarker} deleteMarker={props.deleteMarker} orientationHelper={props.orientationHelper} positionHelper={props.positionHelper} adding={props.adding}/>\r\n                ))\r\n            ) : (\r\n                console.log('')\r\n            )}        \r\n        </>\r\n    )    \r\n}\r\nexport default MarkersGroup","import React, { useRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei/useGLTF'\r\nimport * as THREE from 'three'\r\n\r\nexport default function Model(props) {\r\n  const group = useRef()\r\n \r\n  const { nodes, materials } = useGLTF('/mesh/fantoma.gltf')\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <group ref={group} {...props}>\r\n    {/*   <mesh\r\n        material={materials.rostro}\r\n        geometry={nodes.rostro.geometry}\r\n        position={[0, 0.060551613569259644, 0.004202398471534252]}\r\n        rotation={[1.6643825434326098, 0, 0]}\r\n      /> */}\r\n      <mesh\r\n        material={materials.mejillas}\r\n        geometry={nodes.mejillas.geometry}\r\n        position={[-0.000080880970926955, 0.011259406805038452, 0.029608502984046936]}\r\n        rotation={[0.5004097689342194, -0.001791890864640021, 1.566577833093736]}\r\n        scale={[0.02752080000936985, 0.02752080000936985, 0.02752080000936985]}\r\n        material-side={THREE.FrontSide}\r\n        material-opacity={0.9}\r\n        name={'mejillas'}\r\n      />\r\n      \r\n      <mesh\r\n        material={materials.encia}\r\n        geometry={nodes.reb_alv_inf_papilas.geometry}\r\n        position={[-0.000799172383267432, -0.009652681648731232, 0.03410725295543671]}\r\n        rotation={[1.8928228644193699, 0, 0]}\r\n        scale={[0.2582273781299591, 0.2582273781299591, 0.2582273781299591]}\r\n        material-opacity={1}\r\n      />\r\n      <mesh\r\n        material={materials.encia}\r\n        geometry={nodes.reb_alv_sup_papilas.geometry}\r\n        position={[0.000345383945386857, 0.025681160390377045, 0.050578609108924866]}\r\n        rotation={[1.7410711657057512, 0, 0]}\r\n        scale={[0.27773573994636536, 0.35650089383125305, 0.2803818881511688]}\r\n      />\r\n       <mesh\r\n        material={materials.lengua_normal}\r\n        geometry={nodes.lengua_normal.geometry}\r\n        position={[-0.000008139821147779, -0.002079464495182037, 0.028254840523004532]}\r\n        rotation={[0.07953233935449347, 0, 0]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['11'].geometry}\r\n        position={[-0.003994331229478121, 0.010893426835536957, 0.0768766775727272]}\r\n        rotation={[-3.0071630492210586, 0.002414291791063278, 0.00906167556339743]}\r\n        scale={[0.011204231530427933, 0.011204230599105358, 0.011204234324395657]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['12'].geometry}\r\n        position={[-0.010505766607820988, 0.010835833847522736, 0.07499976456165314]}\r\n        rotation={[0.171762486364649, 0.1816762143486141, -0.13324115163286038]}\r\n        scale={[0.011716236360371113, 0.01171624194830656, 0.011716240085661411]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['13'].geometry}\r\n        position={[-0.014876807108521461, 0.011480335146188736, 0.07086978107690811]}\r\n        rotation={[-3.062080850076776, -0.15785569096305105, -0.14210624321810134]}\r\n        scale={[0.010929856449365616, 0.01092985924333334, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['14'].geometry}\r\n        position={[-0.017843618988990784, 0.011939216405153275, 0.06576838344335556]}\r\n        rotation={[-2.9558816327733015, -0.8441928409338672, 0.013479365597832632]}\r\n        scale={[0.002824323019012809, 0.002824323251843452, 0.002824322320520878]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['15'].geometry}\r\n        position={[-0.02155187539756298, 0.013107303529977798, 0.06107416749000549]}\r\n        rotation={[-2.8443970297594796, 0.006032054899517629, -0.17005640180211887]}\r\n        scale={[0.01092985738068819, 0.010929862037301064, 0.010929861105978489]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['16'].geometry}\r\n        position={[-0.023491911590099335, 0.015478692948818207, 0.05415882170200348]}\r\n        rotation={[0.3052715640704756, 0.1514005386779953, 0.00881980998714958]}\r\n        scale={[0.01092985738068819, 0.010929858312010765, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['17'].geometry}\r\n        position={[-0.026171064004302025, 0.01750633493065834, 0.04525551572442055]}\r\n        rotation={[0.2813074396516134, -0.016168546846929262, -0.07560743757460588]}\r\n        scale={[0.012300357222557068, 0.01230035349726677, 0.012300355359911919]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['18'].geometry}\r\n        position={[-0.02526138536632061, 0.021021351218223572, 0.03662993013858795]}\r\n        rotation={[-2.943025051433312, -0.007127610584466993, 0.02467918772471263]}\r\n        scale={[0.013175329193472862, 0.01317533291876316, 0.013175327330827713]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['21'].geometry}\r\n        position={[0.003753884928300977, 0.010954301804304123, 0.07641656696796417]}\r\n        rotation={[-3.0071630492210586, 0.002414291791063278, 0.00906167556339743]}\r\n        scale={[0.011204231530427933, 0.011204230599105358, 0.011204234324395657]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['22'].geometry}\r\n        position={[0.010648688301444054, 0.010981399565935135, 0.07463881373405457]}\r\n        rotation={[0.13500599460070634, 0.2000201263038056, -0.0927054542745681]}\r\n        scale={[0.011716235429048538, 0.01171624194830656, 0.011716238223016262]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['23'].geometry}\r\n        position={[0.015928350389003754, 0.01137053593993187, 0.07062441855669022]}\r\n        rotation={[-3.0521439426030064, -0.1690544039001924, -0.08175280710741449]}\r\n        scale={[0.010929858312010765, 0.010929865762591362, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['24'].geometry}\r\n        position={[0.019785869866609573, 0.01190902292728424, 0.06554607301950455]}\r\n        rotation={[-2.950575636043429, -1.0436269669490519, 0.017798599567659286]}\r\n        scale={[0.002779005095362663, 0.002779004164040089, 0.002779003232717514]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['25'].geometry}\r\n        position={[0.02267684042453766, 0.013182241469621658, 0.06102679669857025]}\r\n        rotation={[-2.776704751752609, -0.06559611469301187, -0.12021528960859659]}\r\n        scale={[0.01092985738068819, 0.010929862968623638, 0.010929855518043041]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['26'].geometry}\r\n        position={[0.024468332529067993, 0.015394609421491623, 0.05374370142817497]}\r\n        rotation={[0.2906544469516583, 0.07113730053424178, 0.15888895506087442]}\r\n        scale={[0.01092985738068819, 0.010929862968623638, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['26RR'].geometry}\r\n        position={[0.023969290778040886, 0.0202372744679451, 0.05526266247034073]}\r\n        rotation={[0.2906544469516583, 0.07113730053424178, 0.15888895506087442]}\r\n        scale={[0.01092985738068819, 0.010929862968623638, 0.010929860174655914]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['27'].geometry}\r\n        position={[0.02626725099980831, 0.017643023282289505, 0.04441720247268677]}\r\n        rotation={[0.19380006692502136, -0.002947695711077249, -0.0879387682806948]}\r\n        scale={[0.01135429460555315, 0.011354304850101471, 0.011354304850101471]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['28'].geometry}\r\n        position={[0.02643958292901516, 0.020649753510951996, 0.03665465861558914]}\r\n        rotation={[-2.974768386859708, 0.001369862461211565, -0.0982401554532288]}\r\n        scale={[0.012485920451581478, 0.012485918588936329, 0.012485921382904053]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['31'].geometry}\r\n        position={[0.002447221195325255, -0.01661025546491146, 0.058229316025972366]}\r\n        rotation={[-2.8271500671279814, 0.000549675068400726, 0.06565073128657505]}\r\n        scale={[0.01029480155557394, 0.010294806212186813, 0.010294806212186813]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['32'].geometry}\r\n        position={[0.006317142862826586, -0.016367049887776375, 0.05716734007000923]}\r\n        rotation={[-2.8228991376839048, -0.06116679668967896, 0.06881522208664206]}\r\n        scale={[0.010294799692928791, 0.010294809937477112, 0.010294808074831963]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['33'].geometry}\r\n        position={[0.010101011022925377, -0.01668919064104557, 0.05389733612537384]}\r\n        rotation={[-2.797139306653957, -0.007124261413611526, 0.025157747142358355]}\r\n        scale={[0.010294797830283642, 0.010294809937477112, 0.010294807143509388]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['34'].geometry}\r\n        position={[0.013997945934534073, -0.013729654252529144, 0.05071316286921501]}\r\n        rotation={[0.45716836781197906, -0.01762049218159059, -0.041652248302266805]}\r\n        scale={[0.01029480155557394, 0.010294802486896515, 0.010294807143509388]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['35'].geometry}\r\n        position={[0.017136117443442345, -0.01045650988817215, 0.045368023216724396]}\r\n        rotation={[0.2933683747535186, 0.022557511597531953, -0.08307932325151915]}\r\n        scale={[0.010693180374801159, 0.010693184100091457, 0.010693182237446308]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['36'].geometry}\r\n        position={[0.020051749423146248, -0.005422312766313553, 0.03839058801531792]}\r\n        rotation={[-2.8271498885702164, 1.30802818576e-7, 0.07269006711623194]}\r\n        scale={[0.010294799692928791, 0.010294802486896515, 0.01029480341821909]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['37'].geometry}\r\n        position={[0.02365131676197052, -0.000271812081336975, 0.02984842099249363]}\r\n        rotation={[-2.6623748135544107, 0.10443862010714858, -0.04716927697315141]}\r\n        scale={[0.01029480155557394, 0.01029480155557394, 0.01029480341821909]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['38'].geometry}\r\n        position={[0.027019735425710678, 0.004371806979179382, 0.02255745604634285]}\r\n        rotation={[0.26268483948667154, 0, 0]}\r\n        scale={[0.01029480155557394, 0.010294805280864239, 0.010294805280864239]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['41'].geometry}\r\n        position={[-0.002421815879642963, -0.016624249517917633, 0.05833512544631958]}\r\n        rotation={[-2.8271500671279814, 0.000549675068400726, 0.06565073128657505]}\r\n        scale={[0.01029480155557394, 0.010294806212186813, 0.010294806212186813]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['42'].geometry}\r\n        position={[-0.006706338375806808, -0.0164008978754282, 0.05740179121494293]}\r\n        rotation={[-2.8228991376839048, -0.06116679668967896, 0.06881522208664206]}\r\n        scale={[0.010294799692928791, 0.010294809937477112, 0.010294808074831963]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['43'].geometry}\r\n        position={[-0.011016355827450752, -0.015699779614806175, 0.05451933294534683]}\r\n        rotation={[-2.7287202043792913, 0.009174057244313387, -0.0668152686864502]}\r\n        scale={[0.010294804349541664, 0.010294805280864239, 0.010294805280864239]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['44'].geometry}\r\n        position={[-0.015221851877868176, -0.01249707117676735, 0.05043242126703262]}\r\n        rotation={[0.45716836781197906, -0.01762049218159059, -0.041652248302266805]}\r\n        scale={[0.01029480155557394, 0.010294802486896515, 0.010294807143509388]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['45'].geometry}\r\n        position={[-0.018012922257184982, -0.010478656738996506, 0.04450414702296257]}\r\n        rotation={[0.3811290984373485, 0.015172930194638928, -0.08473591065919076]}\r\n        scale={[0.011009068228304386, 0.01100907102227211, 0.011009070090949535]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['46'].geometry}\r\n        position={[-0.021531518548727036, -0.005402691662311554, 0.037969499826431274]}\r\n        rotation={[-2.828613097437125, 0.024724787440708322, -0.06593596484387185]}\r\n        scale={[0.010294797830283642, 0.010294800624251366, 0.010294805280864239]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['47'].geometry}\r\n        position={[-0.025020143017172813, -0.000635713338851929, 0.02924846112728119]}\r\n        rotation={[-2.578413478369357, -0.2753266534111244, 0.11464106521623652]}\r\n        scale={[0.010294805280864239, 0.010294805280864239, 0.010294804349541664]}\r\n      />\r\n      <mesh\r\n        material={materials.esmalte}\r\n        geometry={nodes['48'].geometry}\r\n        position={[-0.027460336685180664, 0.005100630223751068, 0.023030057549476624]}\r\n        rotation={[0.38706628116821845, 0.08692140128048739, 0.13731486619731875]}\r\n        scale={[0.01029480341821909, 0.01029480341821909, 0.010294806212186813]}\r\n      />\r\n     \r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/mesh/fantoma.gltf')\r\n","import React, { useState, useEffect, Suspense } from 'react'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport { Button, ButtonGroup, ButtonToolbar, Tooltip } from 'reactstrap'\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport AddMarkerForm from '../../../components/Fantoma/FormsExams/AddMarkerForm'\r\nimport EditMarkerForm from '../../../components/Fantoma/FormsExams/EditMarkerForm'\r\nimport MarkersGroup from '../../../components/Fantoma/Tag/MarkersGroup'\r\nimport CameraControls from '../../../components/Fantoma/CameraControls'\r\nimport MouseHelper  from '../../../components/Fantoma/MouseHelper'\r\nimport FantomaIntraOral  from '../../../components/Fantoma/FantomaIntraOral'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SoftTissuesExam = ({location}) => {\r\n    const typeExam=\"soft-tissues-exam\"\r\n\r\n    const [positionHelper, setPositionHelper]= useState()\r\n    const [orientationHelper, setOrientationHelper]= useState()\r\n\r\n    const [canvasSize, setCanvasSize] = useState({height: undefined}); \r\n    const [rSelected, setRSelected] = useState(null);\r\n\r\n    const [visibilityHelper, setVisibilityHelper] = useState(false) \r\n    \r\n    const initialFormState = { \r\n        id: null, \r\n        idAnamnesis: null,\r\n        form: null,\r\n        length: null,\r\n        width: null,\r\n        height: null,\r\n        color: null,\r\n        surface: null,\r\n        consistency: null,\r\n        evolution_time: null,\r\n        evolution_form: null,\r\n        symptomatology: null,\r\n        edge: null,\r\n        localization: null,\r\n        observation: '',\r\n        position_x: null,\r\n        position_y: null,\r\n        position_z: null,\r\n        orientation_x: null,\r\n        orientation_y: null,\r\n        orientation_z: null          \r\n    }\r\n\r\n    const getPositionHelper = (positionHelper) => {\r\n        setPositionHelper(positionHelper)\r\n    }\r\n    const getOrientationHelper = (orientationHelper) => {\r\n        setOrientationHelper(orientationHelper)\r\n    }\r\n  \r\n    const [markers, setMarkers] = useState([])\r\n    const [currentMarker, setCurrentMarker ] = useState(initialFormState)\r\n    \r\n    const [adding, setAdding ] = useState(false)\r\n    const [editing, setEditing ] = useState(false)\r\n\r\n    const [addTooltipOpen, setAddTooltipOpen] = useState(false);\r\n    const [editTooltipOpen, setEditTooltipOpen] = useState(false);\r\n/*     \r\n    const [moveTooltipOpen, setMoveTooltipOpen] = useState(false);\r\n    const [rotateTooltipOpen, setRotateTooltipOpen] = useState(false);\r\n    const [scaleTooltipOpen, setScaleTooltipOpen] = useState(false);\r\n */\r\n    const addToggle = () => setAddTooltipOpen(!addTooltipOpen);\r\n    const editToggle = () => setEditTooltipOpen(!editTooltipOpen);\r\n/*  \r\n    const moveToggle = () => setMoveTooltipOpen(!moveTooltipOpen);\r\n    const rotateToggle = () => setRotateTooltipOpen(!rotateTooltipOpen);\r\n    const scaleToggle = () => setScaleTooltipOpen(!scaleTooltipOpen);\r\n */\r\n\r\n    const getMarkers = async () => {\r\n        const newMarkers = [] \r\n        await Axios.get(\"soft-tissues-exam/\" + location.state.anamId)\r\n        \r\n        .then(response => {\r\n            setMarkers([])\r\n            response.data.result.forEach(element => {\r\n                newMarkers.push({\r\n                    id: element.soft_tissues_exam_id,\r\n                    idAnamnesis: location.state.anamId, \r\n                    form: element.form_id,     \r\n                    length:element.length, \r\n                    width:element.width, \r\n                    height:element.height, \r\n                    color:element.color_id, \r\n                    surface:element.surface_id, \r\n                    consistency:element.consistency_id, \r\n                    evolution_time:element.evolution_time,\r\n                    evolution_form:element.evolution_form_id, \r\n                    symptomatology:element.symptomatology_id, \r\n                    edge: element.edge_id,\r\n                    localization:element.localization_id, \r\n                    observation:element.observation, \r\n                    position_x:element.position_x, \r\n                    position_y:element.position_y, \r\n                    position_z:element.position_z,\r\n                    orientation_x:element.orientation_x, \r\n                    orientation_y:element.orientation_y, \r\n                    orientation_z:element.orientation_z   \r\n                });\r\n                setMarkers([...newMarkers])   \r\n            });\r\n        })  \r\n    }\r\n\r\n\r\n    const helperAddMarker = ()=>{\r\n        if(rSelected===1){\r\n            setAdding(true)\r\n        }\r\n    }\r\n\r\n\r\n    const addMarker = async (marker) => {\r\n        if(rSelected===1){\r\n            setAdding(true)\r\n            const res = await Axios.post(\"soft-tissues-exam\",\r\n                {\r\n                    dentalAnamnesisId : location.state.anamId,\r\n                    formId : marker.form ,\r\n                    length: marker.length,\r\n                    width: marker.width,\r\n                    height: marker.height,\r\n                    colorId : marker.color,\r\n                    surfaceId : marker.surface,\r\n                    consistencyId : marker.consistency,\r\n                    evolutionTime : marker.evolution_time,\r\n                    evolutionFromId : marker.evolution_form,\r\n                    symptomatologyId: marker.symptomatology,\r\n                    edgeId: marker.edge,\r\n                    localizationId: marker.localization,\r\n                    observation: marker.observation,\r\n                    position_x: positionHelper.x,\r\n                    position_y: positionHelper.y,\r\n                    position_z: positionHelper.z,\r\n                    orientation_x: orientationHelper.x,\r\n                    orientation_y: orientationHelper.y,\r\n                    orientation_z: orientationHelper.z\r\n                }\r\n\t\t    )\r\n            if (!res.data.error){\r\n                //alert(\"Etiqueta guardada\")\r\n                setMarkers([ ...markers, marker ])\r\n                getMarkers()\r\n            }\r\n        }\r\n        setAdding(false)\r\n\t}\r\n\r\n    const deleteMarker = async (id) => {\r\n\r\n        setEditing(false)\r\n        const res = await Axios.delete(\"soft-tissues-exam/\" + id);\r\n        if (!res.data.error) {\r\n            setMarkers(markers.filter(marker => marker.id !== id))\r\n            getMarkers()\r\n            //alert(\"Etiqueta eliminada\")\r\n        }\r\n    }\r\n    \r\n    const updateMarker = async (id, updatedMarker) => {\r\n        setEditing(false)\r\n        const res = await Axios.put(\"soft-tissues-exam\",\r\n            {\r\n                dentalAnamnesisId : location.state.anamId,\r\n                formId : updatedMarker.form ,\r\n                length: updatedMarker.length,\r\n                width: updatedMarker.width,\r\n                height: updatedMarker.height,\r\n                colorId : updatedMarker.color,\r\n                surfaceId : updatedMarker.surface,\r\n                consistencyId : updatedMarker.consistency,\r\n                evolutionTime : updatedMarker.evolution_time,\r\n                evolutionFromId : updatedMarker.evolution_form,\r\n                symptomatologyId: updatedMarker.symptomatology,\r\n                edgeId: updatedMarker.edge,\r\n                localizationId: updatedMarker.localization,\r\n                observation: updatedMarker.observation,\r\n                position_x: updatedMarker.position_x,\r\n                position_y: updatedMarker.position_y,\r\n                position_z: updatedMarker.position_z,\r\n                orientation_x:updatedMarker.orientation_x, \r\n                orientation_y:updatedMarker.orientation_y, \r\n                orientation_z:updatedMarker.orientation_z,\r\n                softTissuesExamId: id\r\n            }\r\n        )\r\n        if (!res.data.error){\r\n\t\t    setMarkers(markers.map(marker => (marker.id === id ? updatedMarker : marker)))\r\n            getMarkers()\r\n            //alert(\"Etiqueta actualizada\")\r\n        }\r\n\t}\r\n\r\n    const editMarker = marker => {\r\n\t\tsetEditing(true)\r\n        setCurrentMarker({ \r\n            id: marker.id, \r\n            idAnamnesis: marker.idAnamnesis,\r\n            form: marker.form,\r\n            length: marker.length,\r\n            width: marker.width,\r\n            height: marker.height,\r\n            color: marker.color,\r\n            surface: marker.surface,\r\n            consistency: marker.consistency,\r\n            evolution_time: marker.evolution_time,\r\n            evolution_form: marker.evolution_form,\r\n            symptomatology: marker.symptomatology,\r\n            edge: marker.edge,\r\n            localization: marker.localization,\r\n            observation: marker.observation,\r\n            position_x: marker.position_x,\r\n            position_y: marker.position_y,\r\n            position_z: marker.position_z,\r\n            orientation_x: marker.orientation_x,\r\n            orientation_y: marker.orientation_y,\r\n            orientation_z: marker.orientation_z\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\t\tconst navbarSize = document.getElementsByClassName('navbar-top')[0];\r\n\t\tconst footerSize = document.getElementsByClassName('footer')[0];\r\n\t\tconst handleResize = () => {\r\n\t\t\tsetCanvasSize({\r\n\t\t\t\twidth: window.innerWidth - navbarSize.offsetWidth - footerSize.offsetWidth,\r\n\t\t\t\theight: window.innerHeight - navbarSize.offsetHeight - footerSize.offsetHeight\r\n\t\t\t});\r\n\t\t}\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n        handleResize();\r\n        \r\n        getMarkers()\r\n        return () => window.removeEventListener(\"resize\", handleResize); \r\n\t}, []);\r\n    \r\n\r\n    return (\r\n        <>\r\n        <ButtonToolbar style={{ zIndex: 100, position: 'absolute', top:'90%', left:'50%', transform:'translate(-50%, -50%)' }}>\r\n            <ButtonGroup>\r\n\t\t\t\t<Button color=\"primary\" size=\"lg\" onClick={() => setRSelected(1)} active={rSelected === 1} id=\"add\">\r\n                    <i className=\"fas fa-tags\"></i>\r\n                </Button>\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        isOpen={addTooltipOpen}\r\n                        target={\"add\"}\r\n                        toggle={addToggle}\r\n                    >\r\n                        Añadir marcador\r\n                    </Tooltip>\r\n\t\t\t\t<Button color=\"primary\" size=\"lg\" onClick={() => setRSelected(2)} active={rSelected === 2} id=\"edit\">\r\n                    <i className=\"ni ni-active-40\"></i>\r\n                </Button>\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        isOpen={editTooltipOpen}\r\n                        target={\"edit\"}\r\n                        toggle={editToggle}\r\n                    >\r\n                        Abrir marcador\r\n                    </Tooltip>\r\n\t\t\t</ButtonGroup>\r\n{/*             <ButtonGroup>\r\n                <Button color=\"primary\" size=\"lg\" onClick={() => setRSelected(3)} active={rSelected === 3} id=\"move\">\r\n                    <MoveIcon className=\"fas\"/>\r\n                </Button>\r\n                <Tooltip\r\n                        placement=\"top\"\r\n                        isOpen={moveTooltipOpen}\r\n                        target={\"move\"}\r\n                        toggle={moveToggle}\r\n                    >\r\n                        Mover lesión\r\n                </Tooltip>\r\n                <Button color=\"primary\" size=\"lg\" onClick={() => setRSelected(4)} active={rSelected === 4} id=\"rotate\">\r\n                    <RotateIcon className=\"fas\"/>\r\n                </Button>\r\n                <Tooltip\r\n                        placement=\"top\"\r\n                        isOpen={rotateTooltipOpen}\r\n                        target={\"rotate\"}\r\n                        toggle={rotateToggle}\r\n                    >\r\n                        Rotar lesión\r\n                </Tooltip>\r\n                <Button color=\"primary\" size=\"lg\" onClick={() => setRSelected(5)} active={rSelected === 5} id=\"scale\">\r\n                    <ScaleIcon className=\"fas\"/>\r\n                </Button>\r\n                <Tooltip\r\n                        placement=\"top\"\r\n                        isOpen={scaleTooltipOpen}\r\n                        target={\"scale\"}\r\n                        toggle={scaleToggle}\r\n                    >\r\n                        Escalar lesión\r\n                </Tooltip>\r\n            </ButtonGroup>   */}\r\n        </ButtonToolbar>\r\n            <ButtonGroup style={{ zIndex: 100, position: 'absolute', top:'90%', left:'95%', transform:'translate(-100%, -50%)' }}>\r\n                <Button color=\"primary\" size=\"lg\"><Link style={{color: \"white\"}} to={{\r\n                    state: {\r\n                        id: location?.state?.id,\r\n                        run: location?.state?.run,\r\n                        name: location?.state?.name,\r\n                        apellido: location?.state?.apellido,\r\n                        anamId: location?.state?.anamId\r\n                    },\r\n                    pathname: \"/admin/extra-oral\"\r\n                    }}>Extra Oral</Link>\r\n                </Button>\r\n                <Button color=\"primary\" active size=\"lg\">Tejidos Blandos</Button>\r\n                <Button color=\"primary\" size=\"lg\"><Link style={{color: \"white\"}} to={{\r\n                    state: {\r\n                        id: location?.state?.id,\r\n                        run: location?.state?.run,\r\n                        name: location?.state?.name,\r\n                        apellido: location?.state?.apellido,\r\n                        anamId: location?.state?.anamId\r\n                    },\r\n                    pathname: \"/admin/odontogram\"\r\n                    }}>Odontograma</Link>\r\n                </Button>\r\n                <Button color=\"info\" size=\"lg\"><Link style={{color: \"white\"}} to={{\r\n                    state: {\r\n                        id: location?.state?.id,\r\n                        run: location?.state?.run,\r\n                        name: location?.state?.name,\r\n                        apellido: location?.state?.apellido\r\n                    },\r\n                    pathname: \"/admin/periodontogram\"\r\n                    }}>Periodontograma</Link>\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            {editing ? (\r\n                <EditMarkerForm\r\n                    editing={editing}\r\n                    setEditing={setEditing}\r\n                    currentMarker={currentMarker}\r\n                    updateMarker={updateMarker}\r\n                />\r\n            ) : (\r\n                <AddMarkerForm\r\n                    adding={adding}\r\n                    setAdding={setAdding} \r\n                    addMarker={addMarker} \r\n                />\r\n            )}\r\n            <Canvas className=\"canvas\"\r\n\t\t\t\tgl={{ antialias: true }}\r\n\t\t\t\tshadowMap\r\n\t\t\t\tpixelRatio={window.devicePixelRatio}\r\n\t\t\t\tstyle={{ height: canvasSize.height, cursor: visibilityHelper ? ('crosshair'):('default') }}\r\n\t\t\t\tcamera={{ fov: 55, position: [0, 0, 10] }}\r\n\t\t\t>\r\n\t\t\t\t<CameraControls minDistance={0.5} maxDistance={1.5}/>\r\n\t\t\t\t<spotLight intensity={0.4} position={[300, 300, 2000]} castShadow={true} />\r\n\t\t\t\t<spotLight intensity={0.35} position={[-3000, 1300, -1000]} castShadow={true} />\r\n\t\t\t\t<ambientLight intensity={0.07} />\r\n\t\t\t\t<Suspense fallback=\"loading\">\r\n                {rSelected === 1 ? (<MouseHelper visibility={false} handlePosition={getPositionHelper}  handleOrientation={getOrientationHelper} typeExam={typeExam}/>):(<></>)}\r\n\t\t\t\t\t{/* <MouseHelper visibility={visibilityHelper} handlePosition={getPositionHelper}/> */}\r\n\t\t\t\t\t<FantomaIntraOral scale={[10, 10, 10]} position={[0, 0, 0]} onDoubleClick={helperAddMarker} onPointerOver={() => setVisibilityHelper(true)} onPointerOut={() => setVisibilityHelper(false)} />\r\n                    <MarkersGroup markers={markers} editMarker={editMarker} deleteMarker={deleteMarker} orientationHelper={orientationHelper} positionHelper={positionHelper} adding={rSelected} />\t\r\n\t\t\t\t</Suspense>\r\n\t\t\t\t{/* <Stats /> */}\r\n\t\t\t</Canvas>\r\n        </>\r\n    )\r\n}\r\nexport default SoftTissuesExam\r\n\r\n/* const MoveIcon =()=> {\r\n    return(\r\n            <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"1rem\"\r\n            height=\"1rem\"\r\n            x=\"0\"\r\n            y=\"0\"\r\n            enableBackground=\"new 0 0 492.001 492.001\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 492.001 492.001\"\r\n            xmlSpace=\"preserve\"\r\n        >\r\n            <path \r\n            fill='white'\r\n            d=\"M487.97 237.06l-58.82-58.82c-5.224-5.228-14.376-5.228-19.592 0l-7.436 7.432c-5.4 5.4-5.4 14.064 0 19.46l21.872 21.74H265.206V68.396l21.808 22.132c5.224 5.22 14.216 5.22 19.428 0l7.36-7.432c5.404-5.404 5.356-14.196-.044-19.596L254.846 4.444c-2.6-2.592-6.088-4.184-9.804-4.184h-.404c-3.712 0-7.188 1.588-9.784 4.184l-57.688 57.772c-2.612 2.608-4.052 6.124-4.052 9.836 0 3.704 1.44 7.208 4.052 9.816l7.432 7.444c5.224 5.22 14.612 5.228 19.828.004l22.368-22.132v159.688H67.814l22.14-22.008c2.608-2.608 4.048-6.028 4.048-9.732s-1.44-7.16-4.052-9.76l-7.436-7.42c-5.22-5.216-14.372-5.2-19.584.008L4.034 236.856c-2.672 2.672-4.1 6.244-4.032 9.92-.068 3.816 1.356 7.388 4.028 10.056l57.68 57.692c5.224 5.22 14.38 5.22 19.596 0l7.44-7.44a13.75 13.75 0 004.044-9.788c0-3.716-1.44-7.232-4.044-9.836l-22.14-22.172H226.79V425.32l-23.336-23.088c-5.212-5.22-14.488-5.22-19.7 0l-7.5 7.44a13.778 13.778 0 00-4.072 9.792c0 3.704 1.424 7.184 4.028 9.792l58.448 58.456c2.596 2.592 6.068 4.028 9.9 4.028.024-.016.24 0 .272 0 3.712 0 7.192-1.432 9.792-4.028l58.828-58.832a13.782 13.782 0 004.044-9.792c0-3.712-1.44-7.192-4.044-9.796l-7.44-7.44c-5.216-5.22-14.044-5.22-19.264 0l-21.54 21.868V265.284H425.59l-23.096 23.132c-2.612 2.608-4.048 6.112-4.048 9.82s1.432 7.192 4.048 9.8l7.44 7.444c5.212 5.224 14.372 5.224 19.584 0l58.452-58.452a13.633 13.633 0 004.028-9.916c.072-3.816-1.356-7.384-4.028-10.052z\"></path>\r\n        </svg>\r\n    )\r\n}\r\nconst RotateIcon =()=> {\r\n    return(\r\n        <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"1rem\"\r\n\t\theight=\"1rem\"\r\n        x=\"0\"\r\n        y=\"0\"\r\n        enableBackground=\"new 0 0 512.25 512.25\"\r\n        version=\"1.1\"\r\n        viewBox=\"0 0 512.25 512.25\"\r\n        xmlSpace=\"preserve\"\r\n      >\r\n        <path\r\n        fill='white' \r\n        d=\"M256.13.125c-78.9 0-150.399 37-197.199 93.1l-19.2-18.9c-3.9-4.2-9.901-5.7-15.3-3.6-5.4 1.5-9.3 6.299-9.901 11.999l-14.399 99c-1.626 12.188 12.431 19.135 17.1 16.8l99-14.099c5.7-.601 10.201-4.501 12.001-9.901 1.8-5.4.599-11.4-3.6-15.599l-22.8-22.8c35.7-45.601 92.199-75 154.3-75 107.1 0 195.7 87.299 196 194.399v.601c0 3.814-.126 7.63-.363 11.413-.591 9.487 7.701 17.161 17.159 15.778l30.236-4.426c7.167-1.049 12.572-7.07 12.821-14.308.097-2.842.147-5.674.147-8.458C512.13 115.676 397.209.125 256.13.125zM495.03 310.725l-99 14.099c-5.7.601-10.201 4.501-12.001 9.901s-.599 11.4 3.6 15.601l24.001 24c-35.402 46.5-92.501 76.8-155.501 76.8-107.401 0-196-87.601-196-195 .101-1.952-.242-6.154.416-14.141.791-9.622-7.582-17.43-17.043-16.097l-30.231 4.255C6.13 231.15.701 237.099.377 244.306 0 252.662.17 259.392.13 262.424c3.3 137.701 117.4 249.701 256 249.701 79.799 0 151.901-37.601 198.701-94.9l17.699 17.699c3.94 4.378 10.488 5.526 15.3 3.6 5.4-1.5 9.3-6.299 9.901-11.999l14.399-99c1.24-9.287-7.333-18.429-17.1-16.8z\"></path>\r\n      </svg>\r\n    )\r\n}\r\nconst ScaleIcon =()=> {\r\n    return(\r\n        <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"1rem\"\r\n        height=\"1rem\"\r\n        x=\"0\"\r\n\t\ty=\"0\"\r\n        viewBox=\"0 0 512 512\"\r\n      >\r\n        <path \r\n        fill='white'\r\n        d=\"M496.387 0H67.747c-8.63 0-15.618 6.996-15.618 15.613v276.239H15.613C6.996 291.852 0 298.836 0 307.465v188.922C0 505.004 6.996 512 15.613 512h188.922c8.63 0 15.613-6.996 15.613-15.613V459.87h276.239c8.617 0 15.613-6.988 15.613-15.617V15.614C512 6.995 505.004 0 496.387 0zM188.922 480.773H31.227V323.078h135.605l-72.586 72.586c-6.09 6.102-6.09 15.988 0 22.078 6.094 6.094 15.969 6.121 22.09 0l72.586-72.586zm291.851-52.132H220.148V313.93l121.73-121.73v62.456c0 8.63 6.985 15.614 15.614 15.614 8.621 0 15.613-6.985 15.613-15.614V154.508c0-8.906-7.28-15.613-15.613-15.613H257.344c-8.63 0-15.614 6.992-15.614 15.613 0 8.629 6.985 15.613 15.614 15.613H319.8l-121.738 121.73H83.359V31.228h397.414zm0 0\"></path>\r\n      </svg>\r\n    )\r\n} */","import React, { useRef, useState } from 'react'\r\nimport { useGLTF } from '@react-three/drei/useGLTF'\r\nimport * as THREE from 'three'\r\n\r\nexport default function Model(props) {\r\n\r\n    const group = useRef()\r\n\r\n    const { nodes, materials } = useGLTF('/mesh/fantoma.gltf')\r\n    console.log(props.teeth)\r\n    \r\n    const TeethMeshes =(e) =>{\r\n        if (typeof props.teeth  !== 'undefined' ){\r\n            return(\r\n                Object.keys(props.teeth).map((item, i) => ( \r\n                        (() => {\r\n                            switch (Object.values(props.teeth)[i].teeth_state_id) {\r\n                \r\n                                case 1:\r\n                                    return (console.log('Ausente'))\r\n                                    break;\r\n                                case 2:\r\n                                    return (\r\n                                         <mesh\r\n                                            key={Object.values(props.teeth)[i].fdi_name}\r\n                                            material={materials.esmalte}\r\n                                            geometry={nodes[Object.values(props.teeth)[i].fdi_name].geometry}\r\n                                            position={nodes[Object.values(props.teeth)[i].fdi_name].position}\r\n                                            rotation={nodes[Object.values(props.teeth)[i].fdi_name].rotation}\r\n                                            scale={nodes[Object.values(props.teeth)[i].fdi_name].scale}\r\n                                        /> \r\n                                    )\r\n                                    break\r\n                                case 3:\r\n                                    return (\r\n                                        <mesh\r\n                                            key={Object.values(props.teeth)[i].fdi_name+'DF'}\r\n                                            material={materials.esmalte}\r\n                                            geometry={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].geometry}\r\n                                            position={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].position}\r\n                                            rotation={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].rotation}\r\n                                            scale={nodes[Object.values(props.teeth)[i].fdi_name+'DF'].scale}\r\n                                        />\r\n                                    )\r\n                                    break\r\n                                case 4:\r\n                                    return (\r\n                                        <mesh\r\n                                            key={Object.values(props.teeth)[i].fdi_name+'RR'}\r\n                                            material={materials.esmalte}\r\n                                            geometry={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].geometry}\r\n                                            position={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].position}\r\n                                            rotation={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].rotation}\r\n                                            scale={nodes[Object.values(props.teeth)[i].fdi_name+'RR'].scale}\r\n                                        />\r\n                                    )\r\n                                    break;\r\n                                case 5:\r\n                                    return (console.log('Implante'))\r\n                                    break;\r\n                                default:\r\n                                    return (console.log('Default'))\r\n                                \r\n                            }\r\n                        })()\r\n                    )\r\n                ) \r\n            )\r\n        }\r\n        e.stopPropagation()\r\n    }  \r\n\r\n    return (\r\n\r\n        <group ref={group} {...props}>        \r\n\r\n            <mesh\r\n                material={materials.encia}\r\n                geometry={nodes.reb_alv_inf_papilas.geometry}\r\n                position={[-0.000799172383267432, -0.009652681648731232, 0.03410725295543671]}\r\n                rotation={[1.8928228644193699, 0, 0]}\r\n                scale={[0.2582273781299591, 0.2582273781299591, 0.2582273781299591]}\r\n                material-opacity={props.opacity}\r\n                material-transparent={true}\r\n                material-side={THREE.FrontSide}\r\n            />\r\n            <mesh\r\n                material={materials.encia}\r\n                geometry={nodes.reb_alv_sup_papilas.geometry}\r\n                position={[0.000345383945386857, 0.025681160390377045, 0.050578609108924866]}\r\n                rotation={[1.7410711657057512, 0, 0]}\r\n                scale={[0.27773573994636536, 0.35650089383125305, 0.2803818881511688]}\r\n            />\r\n            {\r\n            <TeethMeshes/>\r\n            }\r\n        </group>\r\n    )\r\n\r\n}\r\n\r\nuseGLTF.preload('/mesh/fantoma.gltf')\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, FormGroup, Col, Form } from 'reactstrap';\r\n\r\nconst Odontogram = (props) => {\r\n    const [clicked, setClicked]=useState(false)\r\n    \r\n    const initialTeethState = [\r\n        { fdi_name: '11', teeth_state_id: 1 },\r\n        { fdi_name: '12', teeth_state_id: 1 },\r\n        { fdi_name: '13', teeth_state_id: 1 },\r\n        { fdi_name: '14', teeth_state_id: 1 },\r\n        { fdi_name: '15', teeth_state_id: 1 },\r\n        { fdi_name: '16', teeth_state_id: 1 },\r\n        { fdi_name: '17', teeth_state_id: 1 },\r\n        { fdi_name: '18', teeth_state_id: 1 },\r\n        { fdi_name: '21', teeth_state_id: 1 },\r\n        { fdi_name: '22', teeth_state_id: 1 },\r\n        { fdi_name: '23', teeth_state_id: 1 },\r\n        { fdi_name: '24', teeth_state_id: 1 },\r\n        { fdi_name: '25', teeth_state_id: 1 },\r\n        { fdi_name: '26', teeth_state_id: 1 },\r\n        { fdi_name: '27', teeth_state_id: 1 },\r\n        { fdi_name: '28', teeth_state_id: 1 },\r\n        { fdi_name: '31', teeth_state_id: 1 },\r\n        { fdi_name: '32', teeth_state_id: 1 },\r\n        { fdi_name: '33', teeth_state_id: 1 },\r\n        { fdi_name: '34', teeth_state_id: 1 },\r\n        { fdi_name: '35', teeth_state_id: 1 },\r\n        { fdi_name: '36', teeth_state_id: 1 },\r\n        { fdi_name: '37', teeth_state_id: 1 },\r\n        { fdi_name: '38', teeth_state_id: 1 },\r\n        { fdi_name: '41', teeth_state_id: 1 },\r\n        { fdi_name: '42', teeth_state_id: 1 },\r\n        { fdi_name: '43', teeth_state_id: 1 },\r\n        { fdi_name: '44', teeth_state_id: 1 },\r\n        { fdi_name: '45', teeth_state_id: 1 },\r\n        { fdi_name: '46', teeth_state_id: 1 },\r\n        { fdi_name: '47', teeth_state_id: 1 },\r\n        { fdi_name: '48', teeth_state_id: 1 }\r\n\t]\r\n    \r\n    const [teethState, setTeethState] = useState(initialTeethState)\r\n    const [matrix, setMatrix]= useState( { x: 0, y: 0, width: 0, height: 0 })\r\n    const setColorId = (id) => color[teethState.find(teeth => teeth.fdi_name === id).teeth_state_id]\r\n \r\n    const updateTeethStateChanged = (e) => {\r\n            \r\n        setClicked(!clicked)\r\n        const tooth = teethState.find(teeth => teeth.fdi_name === e.target.id)/* .teeth_state_id */\r\n\r\n        let counter\r\n        counter=tooth.teeth_state_id\r\n\r\n        if(counter === Object.keys(color).length) ///SI CONTADOR ES MAYOR A 5, SE CAMBIA A 1\r\n        { counter = 1} else {\r\n            counter++\r\n        }\r\n                \r\n        let newTeethState = [ ...teethState ]\r\n        \r\n        const newTooth =newTeethState.find(teeth => teeth.fdi_name === e.target.id).teeth_state_id\r\n        \r\n        newTeethState.find(teeth => teeth.fdi_name === e.target.id).teeth_state_id = counter; \r\n\r\n        e.target.setAttribute('fill', color[tooth])\r\n\r\n        const matrix = e.target.getBBox()\r\n        \r\n        setTeethState(newTeethState); \r\n        setMatrix(matrix) \r\n    }\r\n\r\n\r\n    const color={\r\n        1:'#434B4D', //ausente \r\n        2:'#F4F2E5', //completo\r\n        3:'#E20000', //fracturado\r\n        4:'#006666', //resto radicular\r\n        5:'#878681' //implante\r\n    }\r\n\r\n    const saveData=()=>{\r\n        props.updateOdontogram(props.odontogramId, teethState)\r\n        props.setOpen(false)\r\n    }\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        //setColorId()\r\n\r\n\t},[]);\r\n \r\n    \r\n    return (\r\n        <Modal\r\n            className='custom-modal-style'\r\n            isOpen={props.open}\r\n            cssModule={{ 'modal-title': 'w-100 text-center' }}\r\n            style={{ maxWidth: '60%', maxHeight: '50%' }}>\r\n            <ModalHeader>\r\n             Selector de piezas dentales\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"row\">\r\n                \r\n                    <Col md=\"12\">\r\n                    \r\n                        <svg\r\n                            xmlns='http://www.w3.org/2000/svg'\r\n                            id='svg8'\r\n                            width=\"100%\"\r\n                            height=\"700\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"0 0 125.857 195.777\"\r\n                            \r\n                        >\r\n                            <g id='superior'>\r\n                                <g id='quadrant-1'>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='11'\r\n                                            strokeLinecap='butt'\r\n                                            d='M100.597 44.106c-.77 1.972 1.226 4.122 2.408 5.88.919 1.367 1.963 2.952 3.53 3.459 1.155.373 2.643.204 3.6-.542 1.107-.863 1.264-2.527 1.625-3.883.513-1.93 1.924-4.338.738-5.944-1.413-1.914-4.67-1.555-7.028-1.245-1.777.234-4.22.605-4.872 2.274z'\r\n                                            fill={setColorId('11')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        >\r\n                                        </path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M102.722 44.676s1.044-.306 1.572-.436c.652-.162 1.302-.35 1.97-.429a12.486 12.486 0 012.602-.058c.634.058 1.87.387 1.87.387'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    \r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='12'\r\n                                            strokeLinecap='butt'\r\n                                            d='M90.75 48.986c.126 1.417 1.858 2.186 2.993 3.043 1.398 1.056 2.865 2.639 4.613 2.518.723-.05 1.38-.67 1.747-1.295.597-1.016.565-2.333.454-3.507-.17-1.789-.178-4.14-1.684-5.122-1.547-1.008-3.924-.4-5.513.54-1.327.787-2.747 2.286-2.61 3.822z'\r\n                                            fill={setColorId('12')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M92.227 48.772s.87-1.029 1.387-1.455c.446-.369.931-.705 1.46-.939a5.641 5.641 0 011.769-.475c.607-.054 1.822.156 1.822.156'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='13'\r\n                                            strokeLinecap='butt'\r\n                                            d='M81.83 56.49c.717 1.312 2.506 1.703 3.927 2.167 1.749.572 3.751 1.345 5.474.702.825-.309 1.554-1.115 1.758-1.972.365-1.524-.496-3.146-1.202-4.546-.69-1.367-1.47-2.976-2.875-3.584-2.038-.882-5.08-1.062-6.641.518-1.576 1.596-1.518 4.747-.441 6.715z'\r\n                                            fill={setColorId('13')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M82.916 55.29s.721-2.867 1.703-3.884c.806-.836 3.14-1.512 3.14-1.512'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n\r\n                                    >\r\n                                        <path\r\n                                            id='14'\r\n                                            strokeLinecap='butt'\r\n                                            d='M75.814 66.458c1.224 1.31 3.401 1.281 5.189 1.409 1.835.13 3.967.375 5.477-.676.723-.503 1.229-1.465 1.215-2.345-.024-1.567-1.201-2.98-2.29-4.107-1.49-1.542-3.37-3.145-5.507-3.325-1.949-.165-4.523.43-5.46 2.146-1.123 2.058-.224 5.184 1.376 6.898z'\r\n                                            fill={setColorId('14')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M85.036 62.823s-.664-.197-1-.278c-.485-.116-.98-.4-1.468-.298-.431.09-.829.399-1.08.76-.39.558-.606 1.296-.529 1.972.038.33.23.646.467.878.26.255.674.286.974.492.211.146.569.518.569.518'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M80.245 59.808s.693.575.98.919c.277.332.683.659.703 1.091.017.386-.383.673-.537 1.028-.207.48-.2 1.064-.516 1.48a1.495 1.495 0 01-.687.476c-.382.135-.808.118-1.212.093-.474-.029-1.398-.281-1.398-.281'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='15'\r\n                                            strokeLinecap='butt'\r\n                                            d='M70.642 74.79c1.248 1.586 3.566 2.103 5.564 2.387 1.822.26 3.967.375 5.478-.676.722-.502 1.228-1.464 1.215-2.345-.024-1.567-1.202-2.98-2.29-4.106-1.49-1.543-3.37-3.145-5.507-3.326-1.949-.165-4.498.444-5.46 2.146-.985 1.742-.237 4.347 1 5.92z'\r\n                                            fill={setColorId('15')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M80.027 71.688s-.55-.228-.84-.278c-.649-.11-1.39-.336-1.974-.032-.233.121-.334.414-.442.654-.245.544-.596 1.155-.448 1.733.072.282.362.468.6.638.32.23.732.304 1.08.492.253.138.728.465.728.465'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M74.997 69.311s.581.303.822.52c.387.348.831.722.969 1.224.072.264-.047.548-.11.815-.123.508-.2 1.064-.517 1.48-.169.221-.432.365-.687.475-.33.143-.694.206-1.053.227-.529.031-1.583-.149-1.583-.149'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='16'\r\n                                            strokeLinecap='butt'\r\n                                            d='M64.546 88.413c.77 1.498 2.691 2.12 4.275 2.69 1.812.654 3.91 1.383 5.73.752 1.588-.551 2.77-2.107 3.52-3.611 1.113-2.23 2.018-5.056 1.14-7.388-.49-1.3-1.964-2.031-3.194-2.677-2.354-1.236-5.145-2.895-7.69-2.121-1.6.486-2.648 2.251-3.276 3.802-1.073 2.647-1.812 6.013-.505 8.553z'\r\n                                            fill={setColorId('16')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M73.28 78.423s.143 1.36.091 2.037c-.042.548-.092 1.118-.324 1.617-.334.715-1.353 1.07-1.48 1.85-.079.487.38.912.51 1.387.204.757-.201 1.828.413 2.315.589.467 1.5-.156 2.251-.12.675.033 2.005.305 2.005.305'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M66.547 82.59s1.05.599 1.62.786c.552.182 1.142.216 1.713.32.433.079.944-.028 1.3.23.452.329.674.933.787 1.48.194.94.283 2.062-.235 2.87-.415.647-1.245 1.057-2.01 1.13-.804.079-2.302-.76-2.302-.76'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M69.48 89.402s.654.592 1.02.834c.276.183.88.463.88.463'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='17'\r\n                                            strokeLinecap='butt'\r\n                                            d='M60.782 100.003c.845 1.77 3.068 2.537 4.878 3.293 1.774.74 3.86 1.816 5.654 1.127 1.402-.539 2.186-2.198 2.693-3.611.73-2.037 1.364-4.594.312-6.485-.844-1.516-2.902-1.984-4.549-2.526-1.878-.62-4.083-1.587-5.883-.767-1.466.668-2.142 2.507-2.675 4.028-.546 1.56-1.141 3.449-.43 4.94z'\r\n                                            fill={setColorId('17')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M68.012 92.479s1.122.604 1.295 1.156c.199.635-.171 1.344-.463 1.942-.347.71-1.353 1.07-1.48 1.85-.079.487.379.913.51 1.387.175.636-.13 1.51.367 1.944.554.484 1.469.118 2.204.112.81-.006 2.423-.158 2.423-.158'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M62.9 96.738s.759.296 1.156.369c.533.098 1.084.026 1.621.088.437.05.944-.028 1.3.23.452.329.64.94.787 1.48.183.67.44 1.482.09 2.083-.197.335-.667.415-1.038.528-.546.168-1.7.212-1.7.212'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M66.204 101.651s.763.328 1.065.602c.28.253.648.926.648.926v0'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='18'\r\n                                            strokeLinecap='butt'\r\n                                            d='M59.352 114.228c.884 1.032 2.546 1.073 3.9 1.185 1.944.162 4.203.361 5.804-.754 1.232-.858 1.804-2.515 2.09-3.988.285-1.464.388-3.212-.44-4.452-.813-1.218-2.476-1.63-3.871-2.075-1.738-.556-3.81-1.53-5.431-.691-1.78.92-2.478 3.333-2.826 5.307-.32 1.813-.423 4.07.774 5.468z'\r\n                                            fill={setColorId('18')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M65.126 105.358s.83.437 1.017.832c.317.669.339 1.562 0 2.22-.243.47-1.052.453-1.294.924-.212.411-.263 1.006 0 1.387.393.57 1.263.601 1.941.74.786.16 2.404.092 2.404.092'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M61.103 109.742s1.336-.276 1.985-.14c.615.13 1.36.33 1.667.877.227.405.03.94-.09 1.388-.144.547-.357 1.11-.74 1.526-.269.29-1.023.6-1.023.6'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                </g>\r\n                                <g id='quadrant-2'>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        opacity='0.995'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='21'\r\n                                            strokeLinecap='butt'\r\n                                            d='M125.67 44.374c.771 1.973-1.225 4.124-2.407 5.881-.92 1.367-1.963 2.952-3.53 3.459-1.155.374-2.644.204-3.601-.542-1.107-.862-1.264-2.527-1.624-3.883-.513-1.93-1.924-4.338-.739-5.944 1.414-1.914 4.67-1.554 7.029-1.244 1.776.233 4.219.604 4.872 2.273z'\r\n                                            display='inline'\r\n                                            fill={setColorId('21')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M123.618 45.056s-1.044-.306-1.572-.437c-.652-.161-1.302-.35-1.97-.429a12.486 12.486 0 00-2.602-.058c-.634.058-1.87.388-1.87.388'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='22'\r\n                                            strokeLinecap='butt'\r\n                                            d='M135.326 50.052c-.126 1.417-1.858 2.186-2.994 3.044-1.397 1.055-2.864 2.638-4.612 2.518-.723-.05-1.38-.67-1.747-1.295-.597-1.016-.565-2.333-.454-3.507.17-1.79.178-4.14 1.684-5.122 1.547-1.009 3.924-.4 5.513.54 1.327.787 2.747 2.286 2.61 3.822z'\r\n                                            display='inline'\r\n                                            fill={setColorId('22')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M133.85 49.838s-.87-1.029-1.386-1.456c-.446-.368-.931-.704-1.46-.938a5.641 5.641 0 00-1.77-.475c-.606-.054-1.822.156-1.822.156'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='23'\r\n                                            strokeLinecap='butt'\r\n                                            d='M144.013 57.82c-.718 1.312-2.506 1.702-3.928 2.167-1.748.571-3.75 1.345-5.474.701-.824-.308-1.553-1.115-1.758-1.971-.364-1.525.497-3.147 1.203-4.546.69-1.368 1.469-2.976 2.875-3.585 2.037-.882 5.08-1.061 6.64.518 1.577 1.596 1.518 4.748.442 6.716z'\r\n                                            display='inline'\r\n                                            fill={setColorId('23')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M143.113 56.804s-.717-2.87-1.703-3.883c-.957-.984-3.724-1.756-3.724-1.756'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='24'\r\n                                            strokeLinecap='butt'\r\n                                            d='M149.93 68.138c-1.223 1.31-3.4 1.282-5.188 1.41-1.835.13-3.967.374-5.477-.677-.723-.502-1.229-1.464-1.215-2.345.024-1.567 1.201-2.98 2.29-4.106 1.49-1.543 3.37-3.145 5.507-3.326 1.949-.165 4.523.43 5.46 2.146 1.123 2.058.224 5.184-1.377 6.898z'\r\n                                            display='inline'\r\n                                            fill={setColorId('24')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M140.708 64.502s.664-.198 1-.278c.485-.117.98-.401 1.468-.299.431.09.828.4 1.08.76.39.558.606 1.296.529 1.973-.038.329-.23.646-.467.877-.26.255-.674.286-.974.493-.211.145-.569.517-.569.517'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M145.499 61.487s-.694.575-.98.92c-.278.331-.684.658-.704 1.09-.017.387.383.674.536 1.029.208.479.2 1.063.517 1.48.168.22.424.382.687.475.382.136.807.118 1.212.094.474-.03 1.397-.282 1.397-.282'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='25'\r\n                                            strokeLinecap='butt'\r\n                                            d='M154.988 76.634c-1.248 1.587-3.567 2.104-5.565 2.388-1.821.26-3.967.375-5.477-.676-.723-.502-1.229-1.465-1.215-2.345.024-1.567 1.201-2.98 2.29-4.107 1.49-1.542 3.37-3.144 5.507-3.325 1.948-.165 4.497.444 5.46 2.146.984 1.742.237 4.347-1 5.92z'\r\n                                            display='inline'\r\n                                            fill={setColorId('25')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M145.602 73.532s.55-.228.84-.278c.65-.11 1.39-.336 1.974-.032.234.121.334.414.442.654.246.544.596 1.154.449 1.732-.073.283-.363.469-.6.639-.321.23-.733.303-1.08.492a11.59 11.59 0 00-.729.465'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M150.633 71.155s-.58.304-.821.52c-.387.348-.832.723-.97 1.225-.072.264.047.548.111.815.122.508.2 1.064.516 1.48.17.221.432.365.688.475.33.143.694.206 1.052.227.53.031 1.584-.149 1.584-.149'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='26'\r\n                                            strokeLinecap='butt'\r\n                                            d='M160.473 90.231c-.77 1.497-2.692 2.12-4.276 2.69-1.812.654-3.91 1.382-5.73.751-1.588-.55-2.77-2.107-3.52-3.611-1.112-2.23-2.018-5.056-1.14-7.388.49-1.3 1.964-2.031 3.194-2.677 2.354-1.235 5.145-2.894 7.69-2.12 1.6.486 2.648 2.25 3.276 3.801 1.074 2.647 1.812 6.014.506 8.554z'\r\n                                            display='inline'\r\n                                            fill={setColorId('26')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M151.739 80.241s-.143 1.359-.09 2.036c.041.548.091 1.119.323 1.617.334.716 1.353 1.071 1.48 1.85.08.487-.38.912-.51 1.388-.204.756.201 1.827-.413 2.314-.588.467-1.5-.156-2.25-.12-.676.034-2.006.305-2.006.305'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M158.472 84.408s-1.05.598-1.62.786c-.551.182-1.141.216-1.713.32-.433.078-.944-.029-1.3.23-.451.328-.674.932-.787 1.48-.194.94-.283 2.061.235 2.87.415.647 1.245 1.056 2.01 1.13.805.078 2.302-.76 2.302-.76'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M155.539 91.22s-.653.591-1.02.834c-.276.183-.88.463-.88.463'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='27'\r\n                                            strokeLinecap='butt'\r\n                                            d='M163.55 102.279c-.845 1.771-3.067 2.538-4.878 3.293-1.773.74-3.86 1.816-5.654 1.127-1.402-.538-2.186-2.198-2.692-3.61-.731-2.038-1.365-4.595-.313-6.486.844-1.515 2.902-1.983 4.549-2.526 1.878-.619 4.083-1.586 5.883-.766 1.467.668 2.143 2.506 2.675 4.028.546 1.56 1.142 3.448.43 4.94z'\r\n                                            display='inline'\r\n                                            fill={setColorId('27')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M156.437 94.756s-1.122.604-1.295 1.156c-.199.635.171 1.343.463 1.941.347.71 1.353 1.071 1.48 1.851.08.486-.378.912-.51 1.387-.175.636.13 1.51-.366 1.944-.555.484-1.47.117-2.205.112-.81-.006-2.422-.159-2.422-.159'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M161.432 99.014s-.758.296-1.156.37c-.532.097-1.084.026-1.621.088-.437.05-.944-.029-1.3.23-.451.328-.64.94-.787 1.48-.182.67-.44 1.482-.089 2.082.196.335.666.415 1.037.53.546.167 1.7.211 1.7.211'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M158.128 103.927s-.763.328-1.065.603c-.279.253-.648.926-.648.926v0'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='28'\r\n                                            strokeLinecap='butt'\r\n                                            d='M164.97 116.403c-.884 1.032-2.545 1.073-3.9 1.185-1.944.162-4.203.361-5.804-.754-1.231-.858-1.804-2.515-2.09-3.988-.285-1.464-.388-3.212.44-4.452.813-1.218 2.477-1.63 3.871-2.075 1.739-.555 3.81-1.53 5.432-.691 1.78.92 2.478 3.333 2.825 5.307.32 1.813.423 4.07-.774 5.468z'\r\n                                            display='inline'\r\n                                            fill={setColorId('28')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M159.195 107.533s-.83.437-1.018.833c-.316.668-.338 1.56 0 2.219.243.471 1.052.453 1.295.924.211.411.262 1.006 0 1.387-.393.57-1.263.601-1.942.74-.786.16-2.404.092-2.404.092'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M163.219 111.917s-1.337-.276-1.986-.14c-.614.13-1.36.33-1.667.877-.227.405-.029.94.09 1.389.144.546.357 1.11.74 1.525.27.29 1.023.601 1.023.601'\r\n                                            display='inline'\r\n                                        ></path>\r\n                                    </g>\r\n                                </g>\r\n                            </g>\r\n                            <g id='inferior'>\r\n                                <g id='quadrant-3'>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='31'\r\n                                            strokeLinecap='butt'\r\n                                            d='M119.58 218.548c.506-1.23-.636-2.607-1.241-3.791-.616-1.206-1.145-2.752-2.389-3.288-.583-.25-1.364-.112-1.889.246-.945.645-1.289 1.923-1.655 3.007-.438 1.298-1.367 2.926-.605 4.064.943 1.408 3.251 1.416 4.934 1.22 1.059-.122 2.44-.472 2.845-1.458z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('31')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M118.165 217.685s-.68.337-1.045.436c-.443.12-.906.154-1.364.185-.388.025-.782.049-1.167-.003-.492-.066-1.436-.388-1.436-.388'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='32'\r\n                                            strokeLinecap='butt'\r\n                                            d='M128.841 215.695c.04-1.59-1.888-2.614-3.153-3.576-1.11-.844-2.386-2.05-3.761-1.826-.584.095-.97.73-1.269 1.241-.47.807-.677 1.775-.72 2.709-.07 1.55-.373 3.55.78 4.59 1.183 1.067 3.281.882 4.768.31 1.497-.575 3.316-1.845 3.355-3.448z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('32')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M127.525 215.643s-.797.713-1.227 1.03c-.466.343-.93.704-1.46.938a5.641 5.641 0 01-1.769.475c-.607.054-1.822-.156-1.822-.156'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='33'\r\n                                            strokeLinecap='butt'\r\n                                            d='M137.23 211.203c-.453-1.31-1.813-2.18-3.023-2.859-1.488-.835-3.31-1.842-4.942-1.34-.47.145-.802.655-.96 1.12-.482 1.42-.207 3.063.245 4.493.425 1.343.954 3.003 2.236 3.585 1.797.816 4.458.46 5.844-.944.96-.972 1.047-2.764.6-4.055z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('33')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M135.905 211.42s-1.272 2.055-2.288 2.607c-.756.41-2.554.373-2.554.373'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='34'\r\n                                            strokeLinecap='butt'\r\n                                            d='M143.991 203.136c-.95-1.387-2.955-1.824-4.626-2.007-1.54-.168-3.47-.21-4.564.887-.73.732-.653 2.015-.584 3.047.074 1.098.277 2.346 1.049 3.13 1.368 1.388 3.57 2.045 5.517 1.939 1.265-.07 2.773-.558 3.426-1.644.92-1.53.792-3.88-.218-5.353z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('34')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M135.191 205.788s.601.208.895.137c.264-.064.478-.277.66-.48.228-.254.298-.622.51-.89.212-.265.49-.47.747-.691.164-.14.364-.239.506-.4.158-.177.32-.375.371-.606.05-.227-.077-.693-.077-.693'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n\r\n                                            strokeLinecap='round'\r\n                                            d='M137.636 208.217s-.676-.791-.872-1.264c-.145-.349-.275-.742-.206-1.113.055-.296.305-.519.471-.769.225-.336.41-.713.711-.982.295-.264.646-.505 1.033-.584.434-.09.886.061 1.32.144.915.174 1.42.498 1.42.498'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='35'\r\n                                            strokeLinecap='butt'\r\n                                            d='M149.142 194.728c-1.271-1.724-3.816-2.25-5.95-2.423-1.161-.094-2.394.204-3.406.781-.895.51-1.929 1.23-2.128 2.24-.32 1.625.588 3.502 1.799 4.633 1.396 1.305 3.562 1.792 5.471 1.71 1.674-.07 3.78-.47 4.652-1.9.88-1.44.563-3.684-.438-5.041z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('35')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M139.827 198.814s.648.21.946.103c.368-.134.692-.474.815-.846.069-.209-.074-.434-.085-.654a6.935 6.935 0 01.027-.995c.027-.286.157-.563.138-.85-.016-.231-.065-.48-.203-.667-.3-.407-1.255-.85-1.255-.85'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M143.91 200.137s-1.274-.34-1.699-.8c-.372-.403-.44-1.01-.582-1.54a3.228 3.228 0 01-.135-.816c-.003-.51-.04-1.083.235-1.514.277-.436.824-.63 1.284-.863.355-.179.725-.408 1.123-.402.806.013 2.25.886 2.25.886'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='36'\r\n                                            strokeLinecap='butt'\r\n                                            d='M155.787 180.474c-.871-1.472-3.057-1.633-4.731-1.989-1.869-.396-3.99-.908-5.73-.118-1.43.65-2.365 2.187-3.028 3.61-1.011 2.17-2.063 4.823-1.246 7.073.418 1.149 1.714 1.815 2.808 2.36 2.214 1.105 4.837 2.283 7.233 1.665 1.618-.417 2.974-1.857 3.733-3.345 1.41-2.763 2.543-6.587.962-9.256z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('36')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M143.963 190.675s1.294.081 1.77-.28c.319-.242.3-.744.5-1.09.356-.618 1.068-1.053 1.234-1.746.142-.592.008-1.263-.264-1.808a1.256 1.256 0 00-.483-.489c-.504-.303-1.116-.379-1.69-.512-.752-.175-2.286-.375-2.286-.375'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M152.838 188.825s-1.01-.093-1.514-.154c-.678-.082-1.394-.035-2.03-.285-.544-.213-1.142-.499-1.44-1.002-.36-.61-.508-1.463-.225-2.112.162-.371.719-.413.973-.728.446-.553.782-1.236.886-1.939.131-.892-.367-2.68-.367-2.68'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M153.873 182.33s-1.715.182-2.564.325c-.602.102-1.793.38-1.793.38'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='37'\r\n                                            strokeLinecap='butt'\r\n                                            d='M160.427 167.222c-.751-1.423-2.574-2.096-4.132-2.495-1.983-.508-4.355-.755-6.133.256-1.342.763-2.031 2.418-2.533 3.877-.677 1.967-1.498 4.38-.525 6.219.785 1.484 2.782 1.985 4.389 2.473 1.882.57 4.116 1.31 5.883.447 1.448-.707 2.166-2.498 2.675-4.028.71-2.138 1.429-4.757.376-6.75z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('37')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M152.654 177.258s-1.145-.461-1.295-.981c-.279-.965.645-1.905 1.06-2.82.114-.25.322-.46.391-.726.09-.346.125-.73.018-1.071-.093-.295-.274-.599-.543-.75-.505-.284-1.16-.051-1.733-.139-.711-.109-2.103-.48-2.103-.48'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M158.608 174.157s-.957-.713-1.507-.93c-.746-.295-1.568-.34-2.358-.475-.466-.08-1.036.1-1.405-.195-.323-.258-.464-.75-.436-1.163.041-.602.455-1.144.86-1.591a5.912 5.912 0 012.23-1.513c.92-.356 2.93-.422 2.93-.422'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M154.778 168.858s-.211-1.273-.117-1.901c.032-.215.214-.394.23-.61.02-.275-.176-.808-.176-.808'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        display='inline'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='38'\r\n                                            strokeLinecap='butt'\r\n                                            d='M163.414 153.158c-1.047-1.36-3.141-1.633-4.856-1.717-1.79-.088-3.853.128-5.22 1.287-1.104.935-1.42 2.57-1.718 3.987-.342 1.626-.857 3.539-.038 4.985.86 1.518 2.809 2.268 4.51 2.66 1.717.395 3.787.525 5.271-.426 1.468-.942 2.188-2.86 2.56-4.563.443-2.03.76-4.566-.509-6.213z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('38')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M154.661 162.56s1.326.113 1.75-.3c.526-.514.113-1.5.425-2.166.16-.339.635-.504.71-.871a1.954 1.954 0 00-.48-1.653c-.342-.358-.926-.36-1.409-.474-.822-.195-2.51-.358-2.51-.358'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M161.983 159.454s-1.09-.44-1.666-.499c-.732-.076-1.599.612-2.199.187-.48-.34-.558-1.13-.443-1.707.086-.43.678-.625.795-1.047.254-.916-.308-2.835-.308-2.835'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                </g>\r\n                                <g id='quadrant-4'>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='41'\r\n                                            strokeLinecap='butt'\r\n                                            d='M103.428 217.086c-.239-1.134.639-2.25 1.215-3.254.59-1.028 1.082-2.54 2.247-2.756.702-.13 1.369.543 1.86 1.061.752.795 1.162 1.886 1.47 2.936.302 1.027.954 2.315.342 3.194-.943 1.354-3.21 1.662-4.798 1.214-1.074-.303-2.106-1.304-2.336-2.396z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('41')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        >\r\n                                        </path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M104.82 217.585s.974.331 1.48.406a5.43 5.43 0 001.206.032 6.34 6.34 0 001.197-.217c.327-.09.952-.357.952-.357'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='42'\r\n                                            strokeLinecap='butt'\r\n                                            d='M94.447 215.756c-.247-1.388.98-2.73 1.955-3.747.952-.993 2.212-1.867 3.574-2.06.562-.08 1.251.01 1.655.409.777.767.796 2.079.82 3.17.036 1.537.218 3.513-.95 4.512-1.088.93-2.942.704-4.29.223-1.172-.418-2.545-1.283-2.764-2.508z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('42')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M95.557 215.084s.853.674 1.326.936c.384.214.793.39 1.216.511a6.826 6.826 0 001.646.262c.446.014 1.334-.126 1.334-.126'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='43'\r\n                                            strokeLinecap='butt'\r\n                                            d='M85.774 209.841c.627-1.58 2.737-2.067 4.294-2.748 1.033-.452 2.19-1.165 3.274-.854.707.203 1.263.914 1.514 1.605.42 1.159.065 2.492-.225 3.69-.328 1.355-.467 3.149-1.683 3.83-1.762.985-4.497.524-6-.824-1.202-1.078-1.77-3.199-1.174-4.7z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('43')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M87.135 210.676s1.242 1.678 2.1 2.234c.921.598 3.113 1.083 3.113 1.083'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='44'\r\n                                            strokeLinecap='butt'\r\n                                            d='M79.437 201.745c1.09-1.486 3.335-1.72 5.158-1.99 1.114-.165 2.408-.34 3.369.248.831.508 1.378 1.534 1.52 2.498.178 1.201-.203 2.543-.915 3.526-1.138 1.57-2.957 3.094-4.896 3.142-1.745.044-3.716-1.067-4.543-2.604-.762-1.418-.645-3.522.307-4.82z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('44')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M87.925 204.25s-.455.186-.695.186c-.36 0-.745-.078-1.04-.282-.248-.17-.35-.49-.531-.73-.243-.325-.466-.667-.742-.964-.248-.266-.747-.368-.817-.725-.04-.202.166-.377.272-.553.077-.129.263-.365.263-.365'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M83.807 207.296s1.252-.623 1.745-1.103c.34-.33.724-.713.795-1.183.034-.228-.115-.447-.2-.661-.15-.375-.31-.755-.547-1.082-.207-.287-.444-.572-.749-.752a2.986 2.986 0 00-1.486-.43c-.708 0-2.04.588-2.04.588'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='45'\r\n                                            strokeLinecap='butt'\r\n                                            d='M74.393 193.28c1.136-1.671 3.503-2.259 5.504-2.54 1.471-.209 3.182-.167 4.407.675.81.556 1.395 1.58 1.46 2.559.087 1.298-.581 2.664-1.466 3.618-1.493 1.61-3.707 2.893-5.904 2.928-1.575.026-3.484-.614-4.298-1.963-.91-1.508-.694-3.82.297-5.277z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('45')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M79.481 198.76s1.497-.528 1.86-1.162c.315-.549.057-1.264.053-1.897-.003-.394.127-.83-.05-1.181-.2-.397-.692-.557-1.036-.838-.23-.188-.415-.447-.687-.568a2.166 2.166 0 00-1.113-.165c-.706.082-1.981.79-1.981.79'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M81.466 196.614s.142.794.45.981c.477.291 1.677-.077 1.677-.077'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M80.121 193.48s-.318-.655-.222-.974c.133-.445 1.005-.963 1.005-.963'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeDasharray='none'\r\n                                            strokeLinecap='round'\r\n                                            strokeMiterlimit='4'\r\n                                            d='M81.224 194.345s.968-.5 1.428-.79c.317-.202.913-.659.913-.659'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='46'\r\n                                            strokeLinecap='butt'\r\n                                            d='M68.418 179.57c.77-1.497 2.692-2.12 4.276-2.69 1.812-.653 3.926-1.427 5.73-.751 1.516.568 2.527 2.175 3.214 3.642 1.057 2.256 1.967 5.037 1.14 7.388-.433 1.231-1.746 2.013-2.888 2.646-2.326 1.287-5.145 2.894-7.69 2.121-1.6-.487-2.648-2.251-3.276-3.802-1.074-2.647-1.812-6.014-.506-8.554z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('46')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M78.651 188.952s-1.095-.838-1.408-1.429c-.258-.485-.216-1.078-.324-1.617-.056-.276-.108-.554-.169-.829-.122-.548-.743-1.196-.396-1.639.226-.29.737.042 1.101-.005.59-.077 1.164-.251 1.725-.448.58-.202 1.681-.75 1.681-.75'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M71 187.226s1.123-.139 1.68-.236a19.61 19.61 0 001.805-.382c.535-.146 1.266-.074 1.575-.535.65-.97.224-2.416-.221-3.496-.216-.525-.678-.927-1.121-1.281-.351-.281-.743-.565-1.185-.643-1.089-.192-3.28.486-3.28.486'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M74.727 181.239s-.339-1.603-.02-2.3c.244-.532 1.339-1.135 1.339-1.135'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='47'\r\n                                            strokeLinecap='butt'\r\n                                            d='M64.716 164.595c.821-1.335 2.689-1.774 4.232-2.05 1.733-.31 3.73-.366 5.256.512 1.371.788 2.223 2.366 2.773 3.848.776 2.093 1.591 4.682.578 6.671-.733 1.44-2.625 1.968-4.15 2.5-1.867.652-4.083 1.586-5.882.766-1.467-.668-2.197-2.488-2.675-4.027-.813-2.617-1.569-5.886-.132-8.22z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('47')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M71.647 175.398s1.099-.612 1.295-1.156c.24-.663-.007-1.456-.314-2.09-.306-.634-1.297-.854-1.442-1.542-.071-.337.092-.736.34-.974.488-.466 1.288-.402 1.94-.58.417-.113.84-.203 1.26-.31.428-.11 1.28-.338 1.28-.338'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M66.536 172.48s.676-.556 1.056-.767a6.896 6.896 0 011.572-.634c.438-.116.984.089 1.349-.18.568-.42.804-1.225.886-1.927.061-.519-.022-1.1-.308-1.537-.231-.353-.641-.58-1.037-.727-1.298-.482-4.134-.411-4.134-.411'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M70.087 166.672s.367-.646.47-1c.11-.379.241-.79.151-1.174-.081-.35-.596-.895-.596-.895'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M73.078 173.388s.088.508.251.69c.177.197.448.318.71.351.208.027.617-.128.617-.128'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    <g\r\n                                        fill='none'\r\n                                        stroke='#000'\r\n                                        strokeLinejoin='miter'\r\n                                        strokeOpacity='1'\r\n                                        strokeWidth='0.265'\r\n                                        transform='translate(-49.136 -34.285)'\r\n                                    >\r\n                                        <path\r\n                                            id='48'\r\n                                            strokeLinecap='butt'\r\n                                            d='M61.944 151.43c.812-1.195 2.342-1.903 3.766-2.143 1.842-.311 4.002-.081 5.512 1.02 1.43 1.044 2.153 2.946 2.516 4.68.377 1.796.66 4.02-.44 5.49-.772 1.03-2.348 1.11-3.606 1.382-1.86.403-4.037 1.275-5.697.346-1.749-.98-2.478-3.334-2.826-5.308-.319-1.813-.26-3.945.775-5.467z'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                            fill={setColorId('48')}\r\n                                            onClick={(e) => updateTeethStateChanged(e)}\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M69.792 160.886s-.735-.183-.951-.46c-.593-.76-.221-1.939-.585-2.831-.19-.466-.659-.793-.816-1.27-.086-.263-.25-.634-.053-.829.448-.444 1.26.195 1.888.138.76-.068 2.218-.571 2.218-.571'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                        <path\r\n                                            strokeLinecap='round'\r\n                                            d='M63.322 156.928s1.876.143 2.677-.26c.598-.3 1.176-.841 1.348-1.488.13-.493-.338-.984-.33-1.494.008-.434.333-.827.324-1.26-.011-.47-.411-1.346-.411-1.346'\r\n                                            display='inline'\r\n                                            opacity='0.996'\r\n                                        ></path>\r\n                                    </g>\r\n                                    \r\n                                </g>\r\n                            </g>\r\n                            <svg width=\"100%\" height=\"100%\">\r\n                                \r\n                                {/* <path\r\n                                    fill=\"none\"\r\n                                    stroke=\"red\"\r\n                                    strokeWidth=\"1\"\r\n                                    d={`M0 0H${matrix.width}V${matrix.height}H0z`}\r\n                                    transform = {`translate(${matrix.x-49.136 }, ${matrix.y-34.285})`}\r\n                                >\r\n                                </path> */}\r\n\r\n                                clicked === true{\r\n                                <path\r\n                                    fill=\"none\"\r\n                                    stroke=\"red\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M0 0H16V16H0z\"\r\n                                    transform = {`translate(${matrix.x-49.136 +(matrix.width/2)-8}, ${matrix.y-34.285+(matrix.height/2)-8})`}\r\n                                >\r\n                                </path>}\r\n                            </svg> \r\n                        </svg>   \r\n                    </Col>\r\n                   {/*  <Col md=\"4\">\r\n                        {\r\n                            Object.entries(teethState).map(([k, v], i) => (\r\n                                <li key={i}>pieza {k}- estado {v}</li>\r\n                            ))\r\n\r\n                        }\r\n                    </Col> */}\r\n                </div>\r\n                <ModalFooter>\r\n                    <Button  color=\"primary\" onClick={() => saveData()}>\r\n                        Guardar\r\n                    </Button>\r\n                    <Button color=\"secondary\"\r\n                        onClick={() => props.setOpen(false)}>Cancelar\r\n                             </Button>\r\n                </ModalFooter>\r\n            </ModalBody>\r\n                      \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Odontogram;","import React, { useState, useEffect, Suspense } from 'react'\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport { Button, ButtonGroup, ButtonToolbar, Tooltip } from 'reactstrap'\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport CameraControls from '../../../components/Fantoma/CameraControls'\r\nimport FantomaOdontogram  from '../../../components/Fantoma/FantomaOdontogram'\r\nimport OdontogramModal  from '../../../components/Fantoma/FormsExams/OdontogramModal'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Odontogram = ({location}) => {\r\n\r\n    const [canvasSize, setCanvasSize] = useState({height: undefined}); \r\n    const resizeCanvas=()=>{\r\n\t\tconst navbarSize = document.getElementsByClassName('navbar-top')[0];\r\n\t\tconst footerSize = document.getElementsByClassName('footer')[0];\r\n\t\tconst handleResize = () => {\r\n\t\t\tsetCanvasSize({\r\n\t\t\t\twidth: window.innerWidth - navbarSize.offsetWidth - footerSize.offsetWidth,\r\n\t\t\t\theight: window.innerHeight - navbarSize.offsetHeight - footerSize.offsetHeight\r\n\t\t\t});\r\n\t\t}\r\n\t\twindow.addEventListener(\"resize\", handleResize);\r\n\t\thandleResize();\r\n\t\treturn () => window.removeEventListener(\"resize\", handleResize); \r\n    }\r\n    \r\n    const periodontogramUrl=\"periodontal url\"\r\n    \r\n\tconst [gumOpacity, setGumOpacity] = useState(true)\r\n\t\r\n    const [open, setOpen ] = useState(false)\r\n    \r\n\tconst [rSelected, setRSelected] = useState(null);\r\n\r\n\tconst [piecesTooltipOpen, setPiecesTooltipOpen] = useState(false);\r\n    const [opacityTooltipOpen, setOpacityTooltipOpen] = useState(false);\r\n\r\n    const piecesToggle = () => setPiecesTooltipOpen(!piecesTooltipOpen);\r\n    const opacityToggle = () => setOpacityTooltipOpen(!opacityTooltipOpen);\r\n\r\n    const [odontogramId, setOdontogramId] = useState(0)\r\n    const [teeth, setTeeth] = useState([])\r\n    const [teethState, setTeethState] = useState([])\r\n    const [currentTeeth, setCurrentTeeth ] = useState(initialTeethState)\r\n    \r\n\tconst initialTeethState = [\r\n        {teeth_id: 1, teeth_state_id: 1},\r\n        {teeth_id: 2, teeth_state_id: 1},\r\n        {teeth_id: 3, teeth_state_id: 1},\r\n        {teeth_id: 4, teeth_state_id: 1},\r\n        {teeth_id: 5, teeth_state_id: 1},\r\n        {teeth_id: 6, teeth_state_id: 1},\r\n        {teeth_id: 7, teeth_state_id: 1},\r\n        {teeth_id: 8, teeth_state_id: 1},\r\n        {teeth_id: 9, teeth_state_id: 1},\r\n        {teeth_id: 10, teeth_state_id: 1},\r\n        {teeth_id: 11, teeth_state_id: 1},\r\n        {teeth_id: 12, teeth_state_id: 1},\r\n        {teeth_id: 13, teeth_state_id: 1},\r\n        {teeth_id: 14, teeth_state_id: 1},\r\n        {teeth_id: 15, teeth_state_id: 1},\r\n        {teeth_id: 16, teeth_state_id: 1},\r\n        {teeth_id: 17, teeth_state_id: 1},\r\n        {teeth_id: 18, teeth_state_id: 1},\r\n        {teeth_id: 19, teeth_state_id: 1},\r\n        {teeth_id: 20, teeth_state_id: 1},\r\n        {teeth_id: 21, teeth_state_id: 1},\r\n        {teeth_id: 22, teeth_state_id: 1},\r\n        {teeth_id: 23, teeth_state_id: 1},\r\n        {teeth_id: 24, teeth_state_id: 1},\r\n        {teeth_id: 25, teeth_state_id: 1},\r\n        {teeth_id: 26, teeth_state_id: 1},\r\n        {teeth_id: 27, teeth_state_id: 1},\r\n        {teeth_id: 28, teeth_state_id: 1},\r\n        {teeth_id: 29, teeth_state_id: 1},\r\n        {teeth_id: 30, teeth_state_id: 1},\r\n        {teeth_id: 31, teeth_state_id: 1},\r\n        {teeth_id: 32, teeth_state_id: 1}\r\n    ]\t\r\n    \r\n\r\n    const handleCreateOdontogram =()=>{\r\n        /* getOdontogram() */\r\n        if (odontogramId === 0){\r\n            addTeethStates(initialTeethState)\r\n            console.log('odontograma creado')\r\n        } \r\n        setOpen(true)\r\n        /* getOdontogram() */\r\n    }\r\n   \r\n    const addTeethStates = async (initialTeeth) => {\r\n\t\tconst res = await Axios.post(\"odontogram\",\r\n\t\t\t{\r\n\t\t\t\tdentalAnamnesisId : location.state.anamId,\r\n\t\t\t\tteethState: initialTeeth, \r\n\t\t\t\todontogramId: odontogramId,\r\n\t\t\t\t/* periodontogramUrl: periodontogramUrl */\r\n\t\t\t}\r\n\t\t)\t\r\n\t\tif (!res.data.error)\r\n        getOdontogramId()\r\n        \r\n    }\r\n\r\n    const getOdontogramId = async () => {\r\n        const res = await Axios.get(\"odontogram/\" + location.state.anamId)\r\n        .then(response => {\r\n            if(response.data.result[0] !== undefined){\r\n            setOdontogramId(response.data.result[0].odontogram_id)\r\n            getTeethState(response.data.result[0].odontogram_id)\r\n            }\r\n        }) \r\n    }\r\n \r\n\tconst updateOdontogram = async (id, updatedOdontogram) => {\r\n        const res = await Axios.put(\"odontogram\",\r\n            {\r\n                //dentalAnamnesisId : location.state.anamId,\r\n                odontogramId: id,\r\n                teethState: updatedOdontogram\r\n                \r\n            }\r\n        )\r\n        if (!res.data.error){\r\n\t\t    setTeeth(Object.values(updatedOdontogram))\r\n            //getMarkers()\r\n            //alert(\"Etiqueta actualizada\")\r\n        }\r\n    }\r\n   \r\n    const getTeethState = async () => {\r\n        const res = await Axios.get(\"odontogram/teeth/\" + odontogramId).then(response => {\r\n            if(response.data.result[0] !== undefined){\r\n                console.log(response.data.result)\r\n                setTeethState(response.data.result)\r\n            }\r\n        }) \r\n    } \r\n   \r\n \tconst deleteOdontogram = async (id) => {\r\n\r\n        const res = await Axios.delete(\"odontogram/\" + id);\r\n        if (!res.data.error) {\r\n            alert(\"Estado dental eliminado\")\r\n        }\r\n    }\r\n\r\n\tuseEffect(() => {\r\n        resizeCanvas()\r\n        getOdontogramId()\r\n    \r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<OdontogramModal open={open} setOpen={setOpen} updateOdontogram={updateOdontogram} teeth={teethState} odontogramId={odontogramId}/>\r\n\r\n\t\t\t<ButtonToolbar>\r\n            <ButtonGroup style={{ zIndex: 100, position: 'absolute', top:'90%', left:'50%', transform:'translate(-50%, -50%)' }}>\r\n\t\t\t\t<Button onClick={() => handleCreateOdontogram()} color=\"primary\" size=\"lg\" id=\"pieces-selector\"><i className=\"fas fa-tooth\"></i>\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        isOpen={piecesTooltipOpen}\r\n                        target={\"pieces-selector\"}\r\n                        toggle={() => piecesToggle()}\r\n                    >\r\n                        Selector de piezas\r\n                    </Tooltip></Button>\r\n                   \r\n\t\t\t\t\t<Button onClick={() => setGumOpacity(!gumOpacity)} color=\"primary\" size=\"lg\" id=\"opacity\"><Icon className=\"fas\"/></Button>\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        isOpen={opacityTooltipOpen}\r\n                        target={\"opacity\"}\r\n                        toggle={() => opacityToggle()}\r\n                    >\r\n                        Opacidad\r\n                    </Tooltip> \r\n\t\t\t</ButtonGroup>\r\n            <ButtonGroup style={{ zIndex: 100, position: 'absolute', top:'90%', left:'95%', transform:'translate(-100%, -50%)' }}>\r\n                <Button color=\"primary\" size=\"lg\"><Link style={{color: \"white\"}} to={{\r\n                    state: {\r\n                        id: location?.state?.id,\r\n                        run: location?.state?.run,\r\n                        name: location?.state?.name,\r\n                        apellido: location?.state?.apellido,\r\n                        anamId: location?.state?.anamId\r\n                    },\r\n                    pathname: \"/admin/extra-oral\"\r\n                    }}>Extra Oral</Link>\r\n                </Button>\r\n                <Button color=\"primary\" size=\"lg\"><Link style={{color: \"white\"}} to={{\r\n                    state: {\r\n                        id: location?.state?.id,\r\n                        run: location?.state?.run,\r\n                        name: location?.state?.name,\r\n                        apellido: location?.state?.apellido,\r\n                        anamId: location?.state?.anamId\r\n                    },\r\n                    pathname: \"/admin/soft-tissues-exam\"\r\n                    }}>Tejidos Blandos</Link>\r\n                </Button>\r\n                <Button color=\"primary\" active size=\"lg\">Odontograma</Button>\r\n                <Button color=\"info\" size=\"lg\"><Link style={{color: \"white\"}} to={{\r\n                    state: {\r\n                        id: location?.state?.id,\r\n                        run: location?.state?.run,\r\n                        name: location?.state?.name,\r\n                        apellido: location?.state?.apellido\r\n                    },\r\n                    pathname: \"/admin/periodontogram\"\r\n                    }}>Periodontograma</Link>\r\n                </Button>\r\n            </ButtonGroup>\r\n        </ButtonToolbar>\r\n\r\n\r\n\t\t\t<Canvas className=\"canvas\"\r\n\t\t\t\tgl={{ antialias: true }}\r\n\t\t\t\tshadowMap\r\n\t\t\t\tpixelRatio={window.devicePixelRatio}\r\n\t\t\t\tstyle={{ height: canvasSize.height }}\r\n\t\t\t\tcamera={{ fov: 55, position: [0, 0, 10] }}\r\n\t\t\t>\r\n\t\t\t\t<CameraControls minDistance={0.5} maxDistance={1.5}/>\r\n\t\t\t\t<spotLight intensity={0.4} position={[300, 300, 2000]} castShadow={true} />\r\n\t\t\t\t<spotLight intensity={0.35} position={[-3000, 1300, -1000]} castShadow={true} />\r\n\t\t\t\t<ambientLight intensity={0.07} />\r\n\t\t\t\t<Suspense fallback=\"loading\">\r\n\t\t\t\t\t<FantomaOdontogram scale={[10, 10, 10]} position={[0, 0, 0]} teeth={teeth} opacity={gumOpacity ? 1 : 0.8} open={open}/>\r\n\t\t\t\t</Suspense>\r\n\t\t\t\t{/* <Stats /> */}\r\n\t\t\t</Canvas>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Odontogram\r\n\r\n\r\n\r\nconst Icon =()=> {\r\n\treturn (\r\n\t  <svg\r\n\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\twidth=\"1rem\"\r\n\t\theight=\"1rem\"\r\n\t\tx=\"0\"\r\n\t\ty=\"0\"\r\n\t\tversion=\"1.1\"\r\n\t\tviewBox=\"0 0 90 90\"\r\n\t\txmlSpace=\"preserve\"\r\n\t  >\r\n\t\t<path \r\n\t\tfill='white'\r\n\t\td=\"M69.772 20.224C63.521 7.917 50.719 0 36.883 0 16.546 0 0 16.546 0 36.883c0 13.836 7.917 26.638 20.224 32.889C26.32 81.761 38.771 90 53.117 90 73.454 90 90 73.454 90 53.117c0-14.347-8.239-26.797-20.228-32.893zm-16.717 1.011l15.71 15.71a31.866 31.866 0 01-.66 6.411L46.644 21.895a31.874 31.874 0 016.411-.66zm-29.28 44.35a31.458 31.458 0 01-1.51-4.43l6.59 6.59a31.559 31.559 0 01-4.871-1.698c-.069-.154-.143-.306-.209-.462zm13.17 3.18l-15.71-15.71c.004-2.196.231-4.34.66-6.412l21.461 21.461c-2.071.43-4.215.657-6.411.661zm11.833-2.309L23.544 41.222a31.773 31.773 0 012.365-4.707l27.577 27.577a31.925 31.925 0 01-4.708 2.364zm8.797-5.345L28.889 32.425a32.082 32.082 0 013.536-3.536l28.686 28.686a32.082 32.082 0 01-3.536 3.536zm6.517-7.626L36.515 25.908a31.816 31.816 0 014.707-2.364l25.234 25.234a31.768 31.768 0 01-2.364 4.707zm-2.937-31.22a31.469 31.469 0 014.892 1.719 31.559 31.559 0 011.698 4.871zM53.117 85c-10.216 0-19.319-4.835-25.158-12.331a36.842 36.842 0 008.924 1.098c20.338 0 36.884-16.546 36.884-36.883 0-3.047-.377-6.028-1.098-8.924C80.165 33.798 85 42.901 85 53.117 85 70.697 70.697 85 53.117 85z\"></path>\r\n\t  </svg>\r\n\t);\r\n}","import React, {useState, useEffect,useRef} from 'react'\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input, Row, InputGroup,\r\n    InputGroupText, InputGroupAddon, Card, CardBody, Label\r\n} from 'reactstrap'\r\nimport classnames from \"classnames\";\r\nimport CardHeader from 'reactstrap/lib/CardHeader';\r\nimport Axios from '../../../helpers/axiosConfig'\r\nimport {Redirect} from 'react-router-dom';\r\nimport SimpleModal from \"../components/SimpleModal\";\r\n\r\nconst Periodontogram = ({location}) => {\r\n    \r\n    const modalRef = useRef()\r\n    const setModal = (options) => {\r\n        modalRef.current.setModal(options);\r\n    };\r\n    \r\n    const [next, setNext] = useState(false)\r\n    const [periodontalDiagnosis, setPeriodontalDiagnosis] = useState(\"\")\r\n    const [odontologicalDiagnosis, setOdontologicalDiagnosis] = useState(\"\")\r\n    const [treatmentPlan, setTreatmentPlan] = useState(\"\")\r\n\r\n    //LOCATION###############################################################\r\n    useEffect(() => {\r\n        fetchFiles();\r\n    }, []);\r\n   \r\n    //FILE###################################################################\r\n    const [fileName, setFileName] = useState(\"\");\r\n    const [fileType, setFileType] = useState(\"\");\r\n    const [file, setFile] = useState({});\r\n    const [hasFile, setHasFile] = useState(false);\r\n    const [files, setFiles] =useState([]);\r\n    const extAllowed = \"pdf\";\r\n    const sizAllowed = 10000000;\r\n    const defaultHelpText = extAllowed + \" (max: \" + sizAllowed / 1000000 + \" MB)\";\r\n    const [helpText, setHelpText] =useState(defaultHelpText);\r\n\r\n    const handleHasFile = () => {\r\n        setHasFile(!hasFile);\r\n        cleanFile();\r\n        setHelpText(defaultHelpText);\r\n    };\r\n\r\n    const fetchFiles= async () => {\r\n        const res = await Axios.post(\"photo/odonto_geriatra/obtain\", {anamnId: location.state.anamId})\r\n        if (!res.data.error) {\r\n            setFiles(res.data.result);\r\n            setModal({});\r\n        };       \r\n    };\r\n\r\n    const loadFile = (file) => {\r\n        if (file[0]?.name) {\r\n            const size = file[0].size;\r\n            const full = file[0]?.name;\r\n            const type = full.slice((full.lastIndexOf('.') - 1 >>> 0) + 2).toLowerCase();\r\n            if (extAllowed.indexOf(type) >= 0) {\r\n                if (size <= sizAllowed) {\r\n                    setFileName(full.slice(0, (full.lastIndexOf('.'))));\r\n                    setFileType(type);\r\n                    setFile(file);\r\n                    setHelpText(full);\r\n                    return;\r\n                } else {\r\n                    cleanFile();\r\n                    setHelpText(\"Tamaño de archivo invalido\");\r\n                    return;\r\n                };\r\n            };\r\n            cleanFile();\r\n            setHelpText(\"Formato de archivo invalido\");\r\n        };\r\n    };\r\n\r\n    const cleanFile = () => {\r\n        setFileName(\"\");\r\n        setFileType(\"\");\r\n        setFile({});\r\n    };\r\n\r\n    const uploadFile = () => {\r\n        if (fileName) {\r\n            const f = new FormData();\r\n            f.append(\"file\", file[0], fileName + '.' + fileType);\r\n            Axios.post(\"file/img_odonto/\" + location.state.run, f)\r\n            .then(response => {\r\n                saveFile();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        };\r\n    };\r\n\r\n    const saveFile = async () => {\r\n        const res = await Axios.post(\"photo/odonto_geriatra\",\r\n            {anamnId : location.state.anamId,\r\n            nombreImagen: fileName + '.' + fileType,\r\n            ruta: \"static/images_anam_odonto/\" + location.state.run}\r\n        );\r\n        if (!res.data.error) {\r\n            fetchFiles();\r\n            cleanFile();\r\n            setHelpText(defaultHelpText);\r\n            setHasFile(false);\r\n        }; \r\n    };    \r\n\r\n    const removeFile = async (fId, name) => {\r\n        const res = await Axios.post(\"photo/odonto_geriatra/rm/\", {\r\n            fId : fId,\r\n            route : location.state.run + '/' + name\r\n        });\r\n        if (!res.data.error) {\r\n            fetchFiles();\r\n        }; \r\n    };\r\n\r\n    const addDiagnosticos = async e => {\r\n        e.preventDefault()\r\n        const res = await Axios.post(\"geriatrical-odonto-anamnesis/periodontograma\",\r\n            {\r\n                anamId: location.state.anamId,\r\n                periodontalDiagnosis:periodontalDiagnosis,\r\n                odontologicalDiagnosis:odontologicalDiagnosis,\r\n                treatmentPlan:treatmentPlan\r\n            }\r\n        );\r\n\r\n        if (!res.data.error){\r\n            setNext(true);\r\n        };  \r\n    };\r\n   \r\n    return (\r\n        <Container>\r\n            <SimpleModal ref={modalRef}/>\r\n            <Card>\r\n                <CardBody>\r\n                <h3>{location.state.run}, {location.state.name} {location.state.apellido}</h3>\r\n                    <h1>\r\n                        Anamnesis Odonto-geriátrica \r\n                    </h1>\r\n                    <h6 className=\"heading-small text-muted mb-4\">\r\n                        Periodontograma\r\n                    </h6>\r\n                    <Form  onSubmit={addDiagnosticos} role=\"form\">\r\n                    <FormGroup className=\"row\">\r\n                        <Col>\r\n                            <Label className=\"form-control-label mb-3\">Periodontograma (<a href=\"https://sepa.es/periodontograma/index.html\" target=\"_blank\">Link a SEPA</a>)</Label>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"row\">\r\n                        <Col md=\"6\">\r\n                            <Label className=\"form-control-label mb-3\">Archivos disponibles</Label>\r\n                            {files.map((file) => (\r\n                                <div key={file.foto_id} className=\"list-group mb-2\">\r\n                                    <InputGroup>\r\n                                        <Button className=\"mr-2\" color=\"danger\" size=\"sm\" outline onClick={() => setModal({title: 'Confirmación', text: 'Desea eliminar ' + file.foto_nombre + '?', type: 2, fx: () => removeFile(file.foto_id, file.foto_nombre)})}><i className=\"far fa-trash-alt\"/></Button>\r\n                                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={process.env.REACT_APP_API_URL + `${file.url}` + \"/\" + `${file.foto_nombre}`}>{file.foto_nombre}</a>\r\n                                    </InputGroup>\r\n                                </div>\r\n                            ))}\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Col className=\"d-flex\">\r\n                                            <Label className=\"form-control-label\">¿Subir periodontograma?</Label>\r\n                                            <label className=\"custom-toggle custom-toggle-info ml-3\">\r\n                                                <Input type=\"checkbox\" checked={hasFile} onChange={() => handleHasFile()}/>\r\n                                                <span className=\"custom-toggle-slider rounded-circle\" data-label-off=\"No\" data-label-on=\"Sí\"/>\r\n                                            </label>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </CardHeader>\r\n                                {hasFile &&\r\n                                    <CardBody>\r\n                                        <FormGroup>\r\n                                            <InputGroup>\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <Button \r\n                                                        type=\"button\" color=\"primary\"\r\n                                                        onClick={() => uploadFile()}>\r\n                                                        Agregar \r\n                                                    </Button>\r\n                                                </InputGroupAddon>\r\n                                                <Input\r\n                                                    autoComplete=\"off\"\r\n                                                    type=\"text\"\r\n                                                    name=\"treatment_plan\"\r\n                                                    value={fileName}\r\n                                                    onChange={e => setFileName(e.target.value)}\r\n                                                />\r\n                                                <InputGroupAddon addonType=\"append\">\r\n                                                    <Button \r\n                                                        type=\"button\" color=\"primary\" \r\n                                                        onClick={() => {document.getElementById('files').click()}}>\r\n                                                        Buscar\r\n                                                    </Button>\r\n                                                </InputGroupAddon>\r\n                                            </InputGroup>\r\n                                            <h5 align=\"right\" style={{marginRight: \"10px\", marginBottom: \"0px\"}}>{helpText}</h5>\r\n                                            <input \r\n                                                type=\"file\" \r\n                                                accept=\"image/*, .pdf\"\r\n                                                id=\"files\" \r\n                                                style={{visibility: 'hidden'}} \r\n                                                onChange={e => loadFile(e.target.files)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </CardBody>\r\n                                }\r\n                            </Card>\r\n                        </Col>\r\n                    </FormGroup>  \r\n                    <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                >\r\n                                    Diagnostico periodontal\r\n                                </Label>\r\n\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"textarea\"\r\n                                    onChange={(e) => {\r\n                                        setPeriodontalDiagnosis(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                >\r\n                                    Diagnostico Odontologico\r\n                                </Label>\r\n\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"textarea\"\r\n                                    onChange={(e) => {\r\n                                        setOdontologicalDiagnosis(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col>\r\n                                <Label\r\n                                    className=\"form-control-label\"\r\n                                >\r\n                                    Plan de tratamiento\r\n                                </Label>\r\n\r\n                                <Input\r\n                                    defaultValue=\"\"\r\n                                    id=\"example-text-input\"\r\n                                    type=\"textarea\"\r\n                                    onChange={(e) => {\r\n                                        setTreatmentPlan(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"row\">\r\n                            <Col md=\"10\">\r\n                               \r\n                            </Col>\r\n                            <Col md=\"2\">\r\n                           \r\n                              <Button type=\"submit\" color=\"primary\">Guardar</Button>\r\n                             \r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form> \r\n\r\n\r\n\r\n\r\n\r\n                    { next && <Redirect to={{\r\n                    pathname: \"/admin/list-patient-anamnesis\",\r\n                    state: { id: location.state.id, run: location.state.run, name: location.state.name, apellido : location.state.apellido, anamId:location.state.anamId, dentalAnamnesis:true} \r\n                    }} /> } \r\n                </CardBody>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Periodontogram\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// react library for routing\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport routes from \"routes.js\";\r\nimport ConsultationMotive from \"views/pages/patient/consultation-motive\";\r\nimport CovidRisk from \"views/pages/patient/covid-risk\";\r\nimport SociodemographicData from \"views/pages/patient/sociodemographic-data\";\r\nimport CovidRiskReception from \"views/pages/patient/covid-risk-reception\";\r\nimport InformedConsentReception from \"views/pages/patient/informed-consent-reception\";\r\nimport AnamnesisGeneral from \"views/pages/patient/anamnesis-general\";\r\nimport AnamnesisMedicoGeriatra from \"views/pages/patient/anamnesis-medico-geriatra\";\r\nimport Evaluations from \"views/pages/patient/evaluations\";\r\nimport InformedConsent from \"views/pages/patient/informed-consent\";\r\nimport PatientCarer from \"views/pages/patient/patient-carer\"\r\nimport ClinicalRecord from \"views/pages/patient/clinical-record\"\r\nimport Background from \"views/pages/patient/background\";\r\nimport PhysicalParameters from \"views/pages/patient/anamnesis-medico-geriatra\"\r\nimport DentalAnamnesis from \"views/pages/patient/dental-anamnesis\"\r\nimport DentalAnamnesisU from \"views/pages/patient/dental-anamnesis-u\"\r\nimport GeneralAnamnesisU from \"views/pages/patient/general-anamnesis-u\"\r\nimport MedicalAnamnesisU from \"views/pages/patient/medical-anamnesis-u\"\r\nimport MuscularExam from \"views/pages/patient/muscular-exam\";\r\nimport ExtraOral from \"views/pages/patient/extra-oral\";\r\nimport SoftTissuesExam from \"views/pages/patient/soft-tissues-exam\";\r\nimport Odontogram from \"views/pages/patient/odontogram\";\r\nimport Periodontogram from \"views/pages/patient/peridontrograma\";\r\n\r\nclass Admin extends React.Component {\r\n  state = {\r\n    sidenavOpen: true\r\n  };\r\n  componentDidUpdate(e) {\r\n    if (e.history.pathname !== e.location.pathname) {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainContent.scrollTop = 0;\r\n    }\r\n  }\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return this.getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  // toggles collapse between mini sidenav and normal\r\n  toggleSidenav = e => {\r\n    if (document.body.classList.contains(\"g-sidenav-pinned\")) {\r\n      document.body.classList.remove(\"g-sidenav-pinned\");\r\n      document.body.classList.add(\"g-sidenav-hidden\");\r\n    } else {\r\n      document.body.classList.add(\"g-sidenav-pinned\");\r\n      document.body.classList.remove(\"g-sidenav-hidden\");\r\n    }\r\n    this.setState({\r\n      sidenavOpen: !this.state.sidenavOpen\r\n    });\r\n  };\r\n  getNavbarTheme = () => {\r\n    return this.props.location.pathname.indexOf(\r\n      \"admin/alternative-dashboard\"\r\n    ) === -1\r\n      ? \"dark\"\r\n      : \"light\";\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={routes}\r\n          toggleSidenav={this.toggleSidenav}\r\n          sidenavOpen={this.state.sidenavOpen}\r\n          logo={{\r\n            innerLink: \"/\",\r\n            //imgSrc: require(\"assets/img/brand/tego.jpeg\"),\r\n            imgSrc: require(\"assets/img/brand/tego5.svg\"),\r\n            imgAlt: \"...\"\r\n          }}\r\n        />\r\n        <div\r\n          className=\"main-content\"\r\n          ref=\"mainContent\"\r\n          onClick={this.closeSidenav}\r\n        >\r\n          <AdminNavbar\r\n            {...this.props}\r\n            theme={this.getNavbarTheme()}\r\n            toggleSidenav={this.toggleSidenav}\r\n            sidenavOpen={this.state.sidenavOpen}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n            <Route path=\"/admin/consultation-motive\" component={ConsultationMotive}/> \r\n            <Route path=\"/admin/covid-risk\" component={CovidRisk}/> \r\n            <Route path=\"/admin/informed-consent\" component={InformedConsent}/> \r\n            <Route path=\"/admin/sociodemographic-data\" component={SociodemographicData}/> \r\n            <Route path=\"/admin/covid-risk-reception\" component={CovidRiskReception}/> \r\n            <Route path=\"/admin/informed-consent-reception\" component={InformedConsentReception}/> \r\n            <Route path=\"/admin/anamnesis-general\" component={AnamnesisGeneral}/> \r\n            <Route path=\"/admin/anamnesis-medicogeriatra\" component={AnamnesisMedicoGeriatra}/> \r\n            <Route path=\"/admin/evaluations\" component={Evaluations}/> \r\n            <Route path=\"/admin/patient-carer\" component={PatientCarer}/> \r\n            <Route path=\"/admin/clinical-record\" component={ClinicalRecord}/> \r\n            <Route path=\"/admin/background\" component={Background}/> \r\n            <Route path=\"/admin/muscular-exam\" component={MuscularExam}/>\r\n            <Route path=\"/admin/physical-parameters\" component={PhysicalParameters}/>      \r\n            <Route path=\"/admin/dental-anamnesis\" component={DentalAnamnesis}/> \r\n            <Route path=\"/admin/dental-anamnesis-u\" component={DentalAnamnesisU}/> \r\n            <Route path=\"/admin/general-anamnesis-u\" component={GeneralAnamnesisU}/>\r\n            <Route path=\"/admin/medical-anamnesis-u\" component={MedicalAnamnesisU}/> \r\n            <Route path=\"/admin/extra-oral\" component={ExtraOral}/>\r\n            <Route path=\"/admin/soft-tissues-exam\" component={SoftTissuesExam}/>\r\n            <Route path=\"/admin/odontogram\" component={Odontogram}/> \r\n            <Route path=\"/admin/periodontogram\" component={Periodontogram}/>\r\n            {/* <Route path=\"/covid-risk\" component={CovidRisk}/> \r\n            <Route path=\"/covid-risk\" component={CovidRisk}/> \r\n            <Route path=\"/covid-risk\" component={CovidRisk}/> \r\n            <Route path=\"/covid-risk\" component={CovidRisk}/>  */}\r\n            \r\n            <Redirect from=\"*\" to=\"/admin/dashboard\" />\r\n          </Switch>\r\n          <AdminFooter />\r\n        </div>\r\n        {this.state.sidenavOpen ? (\r\n          <div className=\"backdrop d-xl-none\" onClick={this.toggleSidenav} />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// react library for routing\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nclass RTL extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    document.body.classList.add(\"rtl\");\r\n    document.documentElement.classList.add(\"rtl\");\r\n    this.state = {\r\n      sidenavOpen: true\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    document.body.classList.remove(\"rtl\");\r\n    document.documentElement.classList.remove(\"rtl\");\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.pathname !== e.location.pathname) {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainContent.scrollTop = 0;\r\n    }\r\n  }\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return this.getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/rtl\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  // toggles collapse between mini sidenav and normal\r\n  toggleSidenav = e => {\r\n    if (document.body.classList.contains(\"g-sidenav-pinned\")) {\r\n      document.body.classList.remove(\"g-sidenav-pinned\");\r\n      document.body.classList.add(\"g-sidenav-hidden\");\r\n    } else {\r\n      document.body.classList.add(\"g-sidenav-pinned\");\r\n      document.body.classList.remove(\"g-sidenav-hidden\");\r\n    }\r\n    this.setState({\r\n      sidenavOpen: !this.state.sidenavOpen\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={routes}\r\n          toggleSidenav={this.toggleSidenav}\r\n          sidenavOpen={this.state.sidenavOpen}\r\n          logo={{\r\n            innerLink: \"/\",\r\n            imgSrc: require(\"assets/img/brand/argon-react.png\"),\r\n            imgAlt: \"...\"\r\n          }}\r\n          rtlActive\r\n        />\r\n        <div\r\n          className=\"main-content\"\r\n          ref=\"mainContent\"\r\n          onClick={this.closeSidenav}\r\n        >\r\n          <AdminNavbar\r\n            {...this.props}\r\n            theme=\"dark\"\r\n            toggleSidenav={this.toggleSidenav}\r\n            sidenavOpen={this.state.sidenavOpen}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n            <Redirect from=\"*\" to=\"/rtl/rtl-support\" />\r\n          </Switch>\r\n          <AdminFooter />\r\n        </div>\r\n        {this.state.sidenavOpen ? (\r\n          <div className=\"backdrop d-xl-none\" onClick={this.toggleSidenav} />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RTL;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nclass Login extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <footer className=\"py-5\" id=\"footer-main\">\r\n          <Container>\r\n            <Row className=\"align-items-center justify-content-xl-between\">\r\n              <Col>\r\n                <div className=\"copyright text-center text-xl-left text-muted\">\r\n                  Un proyecto\r\n                  <a\r\n                    className=\"font-weight-bold ml-1\"\r\n                    href=\"https://www.anid.cl/\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    ANID\r\n                  </a>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </footer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// react library for routing\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AuthHelper from \"../helpers/AuthHelper\";\r\n// core components\r\n\r\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nclass Auth extends React.Component {\r\n  componentDidMount() {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    this.refs.mainContent.scrollTop = 0;\r\n    document.body.classList.add(\"bg-default\");\r\n  }\r\n  componentWillUnmount() {\r\n    document.body.classList.remove(\"bg-default\");\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.pathname !== e.location.pathname) {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainContent.scrollTop = 0;\r\n    }\r\n  }\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return this.getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/auth\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"main-content\" ref=\"mainContent\">\r\n          \r\n          <Switch>\r\n            {this.getRoutes(routes)}\r\n            <Redirect from=\"*\" to=\"/auth/login\" />\r\n          </Switch>\r\n        </div>\r\n        <AuthFooter />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// react library for routing\r\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\r\n\r\n// bootstrap rtl for rtl support page\r\nimport \"assets/vendor/bootstrap-rtl/bootstrap-rtl.scss\";\r\n// plugins styles from node_modules\r\nimport \"react-notification-alert/dist/animate.css\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n// plugins styles downloaded\r\nimport \"assets/vendor/fullcalendar/dist/fullcalendar.min.css\";\r\nimport \"assets/vendor/sweetalert2/dist/sweetalert2.min.css\";\r\nimport \"assets/vendor/select2/dist/css/select2.min.css\";\r\nimport \"assets/vendor/quill/dist/quill.core.css\";\r\nimport \"assets/vendor/nucleo/css/nucleo.css\";\r\nimport \"assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\";\r\n// core styles\r\nimport \"assets/scss/argon-dashboard-pro-react.scss?v1.1.0\";\r\n\r\nimport AdminLayout from \"layouts/Admin.js\";\r\nimport RTLLayout from \"layouts/RTL.js\";\r\nimport AuthLayout from \"layouts/Auth.js\";\r\nimport AuthHelper from \"./helpers/AuthHelper\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path=\"/admin\" render={props => {\r\n                if (AuthHelper.isAuthenticated()) {\r\n                    return <AdminLayout {...props} />\r\n                } else {\r\n                    return <Redirect to=\"/auth/loginexp\"/>\r\n                }\r\n            }\r\n            }\r\n            />\r\n            <Route path=\"/rtl\" render={props => <RTLLayout {...props} />}/>\r\n            <Route path=\"/auth\" render={props => {\r\n                if (AuthHelper.isAuthenticated()){\r\n                    return <Redirect to=\"/admin/dashboard\"/>\r\n                } else {\r\n                    return <AuthLayout {...props} />\r\n                }\r\n            }\r\n            }/>\r\n\r\n            {/*<Route path=\"/\" render={props => <IndexView {...props} />} />*/}\r\n            <Redirect from=\"*\" to=\"/auth/loginexp\"/>\r\n\r\n        </Switch>\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nconst Chart = require(\"chart.js\");\r\n// Only for demo purposes - return a random number to generate datasets\r\nvar randomScalingFactor = function() {\r\n  return Math.round(Math.random() * 100);\r\n};\r\n\r\n//\r\n// Chart extension for making the bars rounded\r\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\r\n//\r\n\r\nChart.elements.Rectangle.prototype.draw = function() {\r\n  var ctx = this._chart.ctx;\r\n  var vm = this._view;\r\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\r\n  var borderWidth = vm.borderWidth;\r\n  // Set Radius Here\r\n  // If radius is large enough to cause drawing errors a max radius is imposed\r\n  var cornerRadius = 6;\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || \"bottom\";\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || \"left\";\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    var halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\r\n    var borderRight =\r\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\r\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\r\n    var borderBottom =\r\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\r\n  var startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  var corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (var i = 1; i < 4; i++) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    // let nextCorner = cornerAt(nextCornerId);\r\n\r\n    let width = corners[2][0] - corners[1][0];\r\n    let height = corners[0][1] - corners[1][1];\r\n    let x = corners[1][0];\r\n    let y = corners[1][1];\r\n    // eslint-disable-next-line\r\n    var radius: any = cornerRadius;\r\n\r\n    // Fix radius being too large\r\n    if (radius > height / 2) {\r\n      radius = height / 2;\r\n    }\r\n    if (radius > width / 2) {\r\n      radius = width / 2;\r\n    }\r\n\r\n    ctx.moveTo(x + radius, y);\r\n    ctx.lineTo(x + width - radius, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n    ctx.lineTo(x + width, y + height - radius);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n    ctx.lineTo(x + radius, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n    ctx.lineTo(x, y + radius);\r\n    ctx.quadraticCurveTo(x, y, x + radius, y);\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n};\r\n\r\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\r\nvar fonts = {\r\n  base: \"Open Sans\"\r\n};\r\n\r\n// Colors\r\nvar colors = {\r\n  gray: {\r\n    100: \"#f6f9fc\",\r\n    200: \"#e9ecef\",\r\n    300: \"#dee2e6\",\r\n    400: \"#ced4da\",\r\n    500: \"#adb5bd\",\r\n    600: \"#8898aa\",\r\n    700: \"#525f7f\",\r\n    800: \"#32325d\",\r\n    900: \"#212529\"\r\n  },\r\n  theme: {\r\n    default: \"#172b4d\",\r\n    primary: \"#5e72e4\",\r\n    secondary: \"#f4f5f7\",\r\n    info: \"#11cdef\",\r\n    success: \"#2dce89\",\r\n    danger: \"#f5365c\",\r\n    warning: \"#fb6340\"\r\n  },\r\n  black: \"#12263F\",\r\n  white: \"#FFFFFF\",\r\n  transparent: \"transparent\"\r\n};\r\n\r\n// Methods\r\n\r\n// Chart.js global options\r\nfunction chartOptions() {\r\n  // Options\r\n  var options = {\r\n    defaults: {\r\n      global: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\r\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\r\n        defaultFontFamily: fonts.base,\r\n        defaultFontSize: 13,\r\n        layout: {\r\n          padding: 0\r\n        },\r\n        legend: {\r\n          display: false,\r\n          position: \"bottom\",\r\n          labels: {\r\n            usePointStyle: true,\r\n            padding: 16\r\n          }\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0,\r\n            backgroundColor: colors.theme[\"primary\"]\r\n          },\r\n          line: {\r\n            tension: 0.4,\r\n            borderWidth: 4,\r\n            borderColor: colors.theme[\"primary\"],\r\n            backgroundColor: colors.transparent,\r\n            borderCapStyle: \"rounded\"\r\n          },\r\n          rectangle: {\r\n            backgroundColor: colors.theme[\"warning\"]\r\n          },\r\n          arc: {\r\n            backgroundColor: colors.theme[\"primary\"],\r\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\r\n            borderWidth: 4\r\n          }\r\n        },\r\n        tooltips: {\r\n          enabled: true,\r\n          mode: \"index\",\r\n          intersect: false\r\n        }\r\n      },\r\n      doughnut: {\r\n        cutoutPercentage: 83,\r\n        legendCallback: function(chart) {\r\n          var data = chart.data;\r\n          var content = \"\";\r\n\r\n          data.labels.forEach(function(label, index) {\r\n            var bgColor = data.datasets[0].backgroundColor[index];\r\n\r\n            content += '<span class=\"chart-legend-item\">';\r\n            content +=\r\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\r\n              bgColor +\r\n              '\"></i>';\r\n            content += label;\r\n            content += \"</span>\";\r\n          });\r\n\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // yAxes\r\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\r\n    gridLines: {\r\n      borderDash: [2],\r\n      borderDashOffset: [2],\r\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\r\n      drawBorder: false,\r\n      drawTicks: false,\r\n      lineWidth: 1,\r\n      zeroLineWidth: 1,\r\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\r\n      zeroLineBorderDash: [2],\r\n      zeroLineBorderDashOffset: [2]\r\n    },\r\n    ticks: {\r\n      beginAtZero: true,\r\n      padding: 10,\r\n      callback: function(value) {\r\n        if (!(value % 10)) {\r\n          return value;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  // xAxes\r\n  Chart.scaleService.updateScaleDefaults(\"category\", {\r\n    gridLines: {\r\n      drawBorder: false,\r\n      drawOnChartArea: false,\r\n      drawTicks: false\r\n    },\r\n    ticks: {\r\n      padding: 20\r\n    }\r\n  });\r\n\r\n  return options;\r\n}\r\n\r\n// Parse global options\r\nfunction parseOptions(parent, options) {\r\n  for (var item in options) {\r\n    if (typeof options[item] !== \"object\") {\r\n      parent[item] = options[item];\r\n    } else {\r\n      parseOptions(parent[item], options[item]);\r\n    }\r\n  }\r\n}\r\n\r\n// Example 1 of Chart inside src/views/dashboards/Dashboard.js\r\nlet chartExample1 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            color: colors.gray[700],\r\n            zeroLineColor: colors.gray[700]\r\n          },\r\n          ticks: {\r\n            callback: function(value) {\r\n              if (!(value % 10)) {\r\n                return \"$\" + value + \"k\";\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n\r\n          content += \"$\" + yLabel + \"k\";\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data1: canvas => {\r\n    return {\r\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      datasets: [\r\n        {\r\n          label: \"Performance\",\r\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  data2: canvas => {\r\n    return {\r\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      datasets: [\r\n        {\r\n          label: \"Performance\",\r\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n};\r\n\r\n// Example 2 of Chart inside src/views/dashboards/Dashboard.js and src/views/dashboards/Alternative.js and src/views/pages/Charts.js\r\nlet chartExample2 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            color: colors.gray[200],\r\n            zeroLineColor: colors.gray[200]\r\n          },\r\n          ticks: {\r\n            callback: function(value) {\r\n              if (!(value % 10)) {\r\n                //return '$' + value + 'k'\r\n                return value;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function(item, data) {\r\n          var label = data.datasets[item.datasetIndex].label || \"\";\r\n          var yLabel = item.yLabel;\r\n          var content = \"\";\r\n          if (data.datasets.length > 1) {\r\n            content += label;\r\n          }\r\n          content += yLabel;\r\n          return content;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data: {\r\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    datasets: [\r\n      {\r\n        label: \"Sales\",\r\n        data: [25, 20, 30, 22, 17, 29],\r\n        maxBarThickness: 10\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\n// Example 3 of Chart inside src/views/dashboards/Alternative.js and src/views/pages/Charts.js\r\nlet chartExample3 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            color: colors.gray[200],\r\n            zeroLineColor: colors.gray[200]\r\n          },\r\n          ticks: {}\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  data: {\r\n    labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    datasets: [\r\n      {\r\n        label: \"Performance\",\r\n        data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\n// Example 4 of Chart inside src/views/pages/Charts.js\r\nconst chartExample4 = {\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            color: colors.gray[200],\r\n            zeroLineColor: colors.gray[200]\r\n          },\r\n          ticks: {}\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  data: {\r\n    labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n    datasets: [\r\n      {\r\n        label: \"Performance\",\r\n        data: [10, 18, 28, 23, 28, 40, 36, 46, 52],\r\n        pointRadius: 10,\r\n        pointHoverRadius: 15,\r\n        showLine: false\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\n// Example 5 of Chart inside src/views/pages/Charts.js\r\nconst chartExample5 = {\r\n  data: {\r\n    labels: [\"Danger\", \"Warning\", \"Success\", \"Primary\", \"Info\"],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor()\r\n        ],\r\n        backgroundColor: [\r\n          colors.theme[\"danger\"],\r\n          colors.theme[\"warning\"],\r\n          colors.theme[\"success\"],\r\n          colors.theme[\"primary\"],\r\n          colors.theme[\"info\"]\r\n        ],\r\n        label: \"Dataset 1\"\r\n      }\r\n    ]\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    legend: {\r\n      position: \"top\"\r\n    },\r\n    animation: {\r\n      animateScale: true,\r\n      animateRotate: true\r\n    }\r\n  }\r\n};\r\n\r\n// Example 6 of Chart inside src/views/pages/Charts.js\r\nconst chartExample6 = {\r\n  data: {\r\n    labels: [\"Danger\", \"Warning\", \"Success\", \"Primary\", \"Info\"],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor()\r\n        ],\r\n        backgroundColor: [\r\n          colors.theme[\"danger\"],\r\n          colors.theme[\"warning\"],\r\n          colors.theme[\"success\"],\r\n          colors.theme[\"primary\"],\r\n          colors.theme[\"info\"]\r\n        ],\r\n        label: \"Dataset 1\"\r\n      }\r\n    ]\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    legend: {\r\n      position: \"top\"\r\n    },\r\n    animation: {\r\n      animateScale: true,\r\n      animateRotate: true\r\n    }\r\n  }\r\n};\r\n\r\n// Example 7 of Chart inside src/views/pages/Charts.js\r\nconst chartExample7 = {\r\n  data: {\r\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n    datasets: [\r\n      {\r\n        label: \"Dataset 1\",\r\n        backgroundColor: colors.theme[\"danger\"],\r\n        data: [\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor()\r\n        ],\r\n        maxBarThickness: 10\r\n      },\r\n      {\r\n        label: \"Dataset 2\",\r\n        backgroundColor: colors.theme[\"primary\"],\r\n        data: [\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor()\r\n        ],\r\n        maxBarThickness: 10\r\n      },\r\n      {\r\n        label: \"Dataset 3\",\r\n        backgroundColor: colors.theme[\"success\"],\r\n        data: [\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor(),\r\n          randomScalingFactor()\r\n        ],\r\n        maxBarThickness: 10\r\n      }\r\n    ]\r\n  },\r\n  options: {\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          stacked: true\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          stacked: true\r\n        }\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  chartOptions, // used alonside with the chartExamples variables\r\n  parseOptions, // used alonside with the chartExamples variables\r\n  chartExample1, // used inside src/views/dashboards/Dashboard.js\r\n  chartExample2, // used inside src/views/dashboards/Dashboard.js and src/views/dashboards/Alternative.js and src/views/pages/Charts.js\r\n  chartExample3, // used inside src/views/dashboards/Alternative.js and src/views/pages/Charts.js\r\n  chartExample4, // used inside src/views/pages/Charts.js\r\n  chartExample5, // used inside src/views/pages/Charts.js\r\n  chartExample6, // used inside src/views/pages/Charts.js\r\n  chartExample7 // used inside src/views/pages/Charts.js\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/tego5.0b6dff70.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.2e257125.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.08ea438e.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-placeholder.6a9d678d.png\";"],"sourceRoot":""}